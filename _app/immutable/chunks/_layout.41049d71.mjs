import{S as oo,i as no,s as lo,k as s,q as o,a as u,l as r,m as a,r as n,h as e,c as d,n as C,b as i,W as t,G as te,a1 as fl}from"./index.7e84a433.mjs";import{g as la}from"./globToArray.54c2d47d.mjs";function sa(oe){let b,j,N,m,R,E,H,q;return{c(){b=s("h2"),j=o("What is chARp?"),N=u(),m=s("p"),R=o(`The chemistry Augmented Reality package (chARp) Molecular Builder offers all features a quantum chemistry researcher needs.
Beyond the ability to load and store in all file types `),E=s("a"),H=o("OpenBabel"),q=o(" supports, chARp fully supports a collaborative environment to create and discuss structures, results, and much more with colleagues."),this.h()},l(T){b=r(T,"H2",{});var k=a(b);j=n(k,"What is chARp?"),k.forEach(e),N=d(T),m=r(T,"P",{});var W=a(m);R=n(W,`The chemistry Augmented Reality package (chARp) Molecular Builder offers all features a quantum chemistry researcher needs.
Beyond the ability to load and store in all file types `),E=r(W,"A",{href:!0,rel:!0});var G=a(E);H=n(G,"OpenBabel"),G.forEach(e),q=n(W," supports, chARp fully supports a collaborative environment to create and discuss structures, results, and much more with colleagues."),W.forEach(e),this.h()},h(){C(E,"href","https://github.com/openbabel/openbabel"),C(E,"rel","nofollow")},m(T,k){i(T,b,k),t(b,j),i(T,N,k),i(T,m,k),t(m,R),t(m,E),t(E,H),t(m,q)},p:te,i:te,o:te,d(T){T&&e(b),T&&e(N),T&&e(m)}}}const ra={title:"Introduction"};class ia extends oo{constructor(b){super(),no(this,b,null,sa,lo,{})}}const aa=Object.freeze(Object.defineProperty({__proto__:null,default:ia,metadata:ra},Symbol.toStringTag,{value:"Module"}));function ha(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y,_,S,B,p,f,O,v,x,X,Z,K,ne,D,Q,J,re,ge,Ye,ee,we,Xe,Me,ie,Je,_e,Ae,Ze,et,De,be,dt,he,Lt,tt,He,ft,Ot,xe,Pt,je,Ee,We,At='<code class="language-bash"><span class="token function">git</span> clone https://github.com/UniStuttgart-VISUS/chARpMolecularBuilder.git</code>',qe,ot,pt,ke,ye,mt,ce,Ct,Fe,bt,It,yt,Te,Bt,vt,de,nt,Ge,lt,st,Ue,Ht,Qe,ze,Ne,rt,ue,it,Le,Ve,at,Se,Ce,gt,Ke,Dt,Nt,Oe,Pe,jt=`<code class="language-undefined">Mixed Reality Toolkit &gt;
Mixed Reality Toolkit Foundations (v2.8.2)
Mixed Reality Toolkit Extensions (v2.8.2)
Mixed Reality Toolkit Examples (v2.8.2)
Mixed Reality Toolkit Standard Assets (v2.8.2)

Platform Support &gt;
Mixed Reality OpenXR Plugin (v1.6.0)</code>`,wt,me,c,A,h,P,_t,Re,$e,Xt,Mt,so,Jt,ae,Et,Tt,Wt,ro,Rt,qt,io,xt,Ft,ao,Qt,zt,ho,kt,Vt,co,ht,Gt,uo,Zt,Ie,Kt,St,$t,Yt,po,Uo,Lo,Ro,Co,ko,pl,ml,bl,Ln,ct,yl,Zo,vl,gl,en,wl,_l,tn,El,Tl,on,Rl,kl,Cn,So,zi='<code class="language-undefined">NuGet &gt; Manage NuGet Packages</code>',In,Io,Sl,Bn,Oo,Vi=`<code class="language-undefined">Microsoft.MixedReality.QR
Microsoft.VCRTForwarders.140</code>`,Dn,Bo,Ol,jn,Do,Pl,Wn,Po,Ki='<code class="language-undefined">File &gt; Build Settings ...</code>',qn,eo,Al,nn,Hl,Nl,ln,Ml,xl,Fn,jo,Gl,Qn,mo,Ul,sn,Ll,Cl,zn,Ao,$i='<code class="language-undefined">Assets &gt; Scenes</code>',Vn,bo,Il,rn,Bl,Dl,Kn,Wo,jl,$n,le,Wl,an,ql,Fl,hn,Ql,zl,cn,Vl,Kl,un,$l,Yl,dn,Xl,Jl,fn,Zl,es,pn,ts,os,mn,ns,ls,bn,ss,rs,yn,is,as,Yn,qo,hs,Xn,yo,cs,Ho,us,ds,Jn,No,Yi='<code class="language-undefined">File &gt; Build Settings ...</code>',Zn,se,fs,vn,ps,ms,gn,bs,ys,wn,vs,gs,_n,ws,_s,En,Es,Ts,Tn,Rs,ks,Rn,Ss,Os,kn,Ps,As,Sn,Hs,Ns,On,Ms,xs,el,Fo,Gs,tl,vo,Us,Pn,Ls,Cs,ol,Qo,Mo,Is,xo,Bs,Ds,nl,zo,js,ll,ve,Ws,An,qs,Fs,Hn,Qs,zs,Nn,Vs,Ks,Mn,$s,Ys,xn,Xs,Js,Gn,Zs,er,Un,tr,or,sl,Vo,fo,nr,lr,sr,Go,rr,ir,rl,Ko,ar;return{c(){b=s("h2"),j=o("Unity"),N=u(),m=s("p"),R=o(`Since chARp is developed using the game engine Unity, we first need to install it.
Go to the `),E=s("a"),H=o("download page of Unity"),q=o(` and download Unity Hub on your computer.
Unity Hub is a management tool that will help you download and install different versions of Unity.
Once the download is complete, run the installer and follow the on-screen instructions to install Unity Hub.
Here we need to install the correct version of Unity which is `),T=s("a"),k=o("2021.3.12f1"),W=o(`.
You can also download the newest version of Unity and update the project, but this is `),G=s("strong"),w=o("not recommended"),$=o(`.
Download and install version `),U=s("a"),g=o("2021.3.12f1"),z=o(` of Unity.
Make sure that you add the modules `),L=s("strong"),F=o("Universal Windows Platform Build"),V=o(" and "),I=s("strong"),M=o("Windows Build Support (IL2CPP)"),Y=o(" to be able to deploy chARp on the HoloLens2."),_=u(),S=s("blockquote"),B=s("p"),p=o("Unity also installs "),f=s("strong"),O=o("Visual Studio (VS) 2019 Community Edition"),v=o(`  by default.
If you want to develop Unity apps, you’ll need to add the package `),x=s("strong"),X=o("Game development with Unity"),Z=o(`.
To be able to deploy chARp on the HoloLens2 also install the VS module `),K=s("strong"),ne=o("Universal Windows Platform development"),D=o("."),Q=u(),J=s("p"),re=o("For an already installed Visual Studio, you have to add the modules mentioned above via the "),ge=s("strong"),Ye=o("Visual Studio Installer"),ee=o(`.
Open the installer and click on `),we=s("strong"),Xe=o("Modify"),Me=o(` at your preferred version of Visual Studio.
Enable the modules and `),ie=s("strong"),Je=o("Modify"),_e=o(" in the bottom right corner to install them."),Ae=u(),Ze=s("h2"),et=o("Download"),De=u(),be=s("p"),dt=o("To load chARp into Unity you first need to download chARp from our "),he=s("a"),Lt=o("GitHub repository"),tt=o(`.
You click on the green Button `),He=s("strong"),ft=o("code"),Ot=o(" and select "),xe=s("code"),Pt=o("Download ZIP"),je=o(" or you use git to clone the project to your disk"),Ee=u(),We=s("pre"),qe=u(),ot=s("h2"),pt=o("Prepare the Project"),ke=u(),ye=s("p"),mt=o("Open Unity Hub and select the "),ce=s("strong"),Ct=o("Projects"),Fe=o(` tab.
Use the dropdown next to the button `),bt=s("strong"),It=o("Open"),yt=o(" and select "),Te=s("strong"),Bt=o("Add project from disk"),vt=o(`.
Put in the location to the root folder of your copy of chARp and confirm the selection.
The project should now show in the list of projects.`),de=u(),nt=s("blockquote"),Ge=s("p"),lt=o("Before we can start the project, we first need to apply some more steps."),st=u(),Ue=s("p"),Ht=o("Since chARp runs on the HoloLens2, we need to reinstall Microsoft’s MRTK."),Qe=u(),ze=s("h3"),Ne=o("MRTK"),rt=u(),ue=s("p"),it=o(`Because of their size, MRTK tarballs are not checked into the git repository.
Therefore, the used MRTK packages have to be reinstalled.
Download and run the `),Le=s("a"),Ve=o("MixedRealityFeatureTool"),at=o(" and select chARp’s root folder as "),Se=s("strong"),Ce=o("Project Path"),gt=o(`.
Click `),Ke=s("strong"),Dt=o("Discover Features"),Nt=o(" and activate the following features:"),Oe=u(),Pe=s("pre"),wt=u(),me=s("p"),c=o(`All these features should also appear with the tag “Version x.x.x currently installed”.
Click `),A=s("strong"),h=o("Get Features"),P=o(" and confirm that step by clicking "),_t=s("strong"),Re=o("Import"),$e=o("."),Xt=u(),Mt=s("h3"),so=o("OpenBabel"),Jt=u(),ae=s("p"),Et=o("For server support of OpenBabel please install the "),Tt=s("a"),Wt=o("latest"),ro=o(` version (x64 exe).
Take the `),Rt=s("code"),qt=o("OBDotNet.dll"),io=o(" from the OpenBabel install directory and copy it into "),xt=s("code"),Ft=o("Assets/plugins"),ao=o(`.
If your system if having trouble to detect all necessary DLLs, check if the OpenBabel install path is added to your `),Qt=s("code"),zt=o("PATH"),ho=o(`.
Under Windows go to “Edit the system environment variables” under “Environment Variables…” add the OpenBabel install path to your “Path” variable in the system variables.
Under Linux add the OpenBabel install path to your `),kt=s("code"),Vt=o("PATH"),co=o(" variable."),ht=u(),Gt=s("h3"),uo=o("NuGet"),Zt=u(),Ie=s("p"),Kt=o("Download and install "),St=s("a"),$t=o("Nuget for Unity"),Yt=o(`.
To do this, download the `),po=s("code"),Uo=o(".unitypackage"),Lo=o(" file."),Ro=u(),Co=s("blockquote"),ko=s("p"),pl=o("Now it’s time to start chARp in Unity."),ml=s("br"),bl=o(`
Got to Unity Hub and single click the project to start it.`),Ln=u(),ct=s("p"),yl=o("Drag-and-drop the "),Zo=s("code"),vl=o(".unitypackage"),gl=o(" into the "),en=s("strong"),wl=o("Project"),_l=o(` section of your Unity window to install it.
A pop-up should open and shows you the files that will be added to the project, click `),tn=s("strong"),El=o("Import"),Tl=o(`.
This should add a `),on=s("strong"),Rl=o("NuGet"),kl=o(` option to the standard bar of Unity.
Click on`),Cn=u(),So=s("pre"),In=u(),Io=s("p"),Sl=o(`to open the package manager.
In the search bar type in the following packages one by one and install them`),Bn=u(),Oo=s("pre"),Dn=u(),Bo=s("h3"),Ol=o("UWP"),jn=u(),Do=s("p"),Pl=o("Next, go to the standard bar of Unity and click"),Wn=u(),Po=s("pre"),qn=u(),eo=s("p"),Al=o("Select the option "),nn=s("strong"),Hl=o("Universal Windows Platform"),Nl=o(" on the left and click on "),ln=s("strong"),Ml=o("Switch Platform"),xl=o("."),Fn=u(),jo=s("h2"),Gl=o("Test Run"),Qn=u(),mo=s("p"),Ul=o(`Now chARp should be set up for the first test run.
In the `),sn=s("strong"),Ll=o("Project"),Cl=o(" window of Unity go to"),zn=u(),Ao=s("pre"),Vn=u(),bo=s("p"),Il=o("and double click "),rn=s("strong"),Bl=o("LoginScreenScene"),Dl=o(`.
Press the play button (top center of the Unity window) for running the test.`),Kn=u(),Wo=s("h3"),jl=o("Interactions inside Unity editor"),$n=u(),le=s("p"),Wl=o(`Now chARp is running inside Unity editor.
To interact with the menus you can hold `),an=s("code"),ql=o("shift"),Fl=o(" to simulate the left hand and "),hn=s("code"),Ql=o("space bar"),zl=o(` to simulate the right hand.
The keys `),cn=s("code"),Vl=o("W"),Kl=o(", "),un=s("code"),$l=o("A"),Yl=o(", "),dn=s("code"),Xl=o("S"),Jl=o(" and "),fn=s("code"),Zl=o("D"),es=o(` can be used to move in the scene.
`),pn=s("code"),ts=o("E"),os=o(" will move you up and "),mn=s("code"),ns=o("Q"),ls=o(` will move you down.
Holding `),bn=s("code"),ss=o("right click"),rs=o(` lets you look around in the scene.
Another important interaction is the `),yn=s("code"),is=o("mouswheel"),as=o(`.
Scrolling with the mouse wheel moves the currently activated hand forward and backward.
Using the mouse wheel makes it easy to press buttons in chARp.`),Yn=u(),qo=s("h2"),hs=o("Deploy on Device"),Xn=u(),yo=s("p"),cs=o("The basic steps are also fund on the official Microsoft page "),Ho=s("a"),us=o("here"),ds=o(`.
When the test was successful, you’re now ready to deploy chARp to your HoloLens2.
Again, go to`),Jn=u(),No=s("pre"),Zn=u(),se=s("p"),fs=o("This time, click on "),vn=s("strong"),ps=o("Build"),ms=o(`, which opens a folder dialog.
Create a folder named `),gn=s("strong"),bs=o("build"),ys=o(` inside the chARp project folder and select it using the dialog.
Unity should start the `),wn=s("strong"),vs=o("Building Player"),gs=o(` process.
When finished, got to the freshly created `),_n=s("strong"),ws=o("build"),_s=o(" folder and open the "),En=s("code"),Es=o(".sln"),Ts=o(` file that is located there.
This will start up Visual Studio.
In the solution explorer, right click `),Tn=s("strong"),Rs=o("chARpMolecularBuilder (Universal Windows)"),ks=o(" and select "),Rn=s("strong"),Ss=o("Set as Startup Project"),Os=o(`.
Set `),kn=s("strong"),Ps=o("Release"),As=o(" as solution configuration and "),Sn=s("strong"),Hs=o("ARM64"),Ns=o(` as solution platforms.
Choose `),On=s("strong"),Ms=o("Remote Machine"),xs=o(" as device."),el=u(),Fo=s("h3"),Gs=o("IP of your HoloLens2"),tl=u(),vo=s("p"),Us=o(`To be able to deploy chARp via WiFi, you need to connect your machine that runs Unity to the same network (or a reachable network) as the HoloLens2.
Open the WiFi options on the HoloLens2 and click on `),Pn=s("strong"),Ls=o("Adaptor Settings"),Cs=o(`.
Scroll down until you can find the devices IP address.`),ol=u(),Qo=s("blockquote"),Mo=s("p"),Is=o("Make sure that your HoloLens2 is in "),xo=s("a"),Bs=o("Developer Mode"),Ds=o("."),nl=u(),zo=s("h3"),js=o("Back to VS"),ll=u(),ve=s("p"),Ws=o("Right click "),An=s("strong"),qs=o("chARpMolecularBuilder (Universal Windows)"),Fs=o(" in the solution explorer again and go to "),Hn=s("strong"),Qs=o("Properties"),zs=o(`.
Make sure you’re on the same configuration and platform as set earlier.
Go to the section `),Nn=s("strong"),Vs=o("Debugging"),Ks=o(" and put your devices IP address into the field "),Mn=s("strong"),$s=o("Machine Name"),Ys=o(`.
Confirm these settings by clicking `),xn=s("strong"),Xs=o("OK"),Js=o(`.
In the main bar, click on `),Gn=s("strong"),Zs=o("Debug"),er=o(" and run the build + deploy by selecting "),Un=s("strong"),tr=o("Start Without Debugging"),or=o("."),sl=u(),Vo=s("blockquote"),fo=s("p"),nr=o("Running this for the first time requires you to pair your HoloLens2 with Visual Studio."),lr=s("br"),sr=o(`
Check the `),Go=s("a"),rr=o("Microsoft documentation"),ir=o(" for instructions."),rl=u(),Ko=s("p"),ar=o(`Successfully deploying chARp on the HoloLens2 should start it automatically.
Now you’re ready to use chARp.`),this.h()},l(l){b=r(l,"H2",{});var y=a(b);j=n(y,"Unity"),y.forEach(e),N=d(l),m=r(l,"P",{});var ut=a(m);R=n(ut,`Since chARp is developed using the game engine Unity, we first need to install it.
Go to the `),E=r(ut,"A",{href:!0,rel:!0});var hr=a(E);H=n(hr,"download page of Unity"),hr.forEach(e),q=n(ut,` and download Unity Hub on your computer.
Unity Hub is a management tool that will help you download and install different versions of Unity.
Once the download is complete, run the installer and follow the on-screen instructions to install Unity Hub.
Here we need to install the correct version of Unity which is `),T=r(ut,"A",{href:!0});var cr=a(T);k=n(cr,"2021.3.12f1"),cr.forEach(e),W=n(ut,`.
You can also download the newest version of Unity and update the project, but this is `),G=r(ut,"STRONG",{});var ur=a(G);w=n(ur,"not recommended"),ur.forEach(e),$=n(ut,`.
Download and install version `),U=r(ut,"A",{href:!0});var dr=a(U);g=n(dr,"2021.3.12f1"),dr.forEach(e),z=n(ut,` of Unity.
Make sure that you add the modules `),L=r(ut,"STRONG",{});var fr=a(L);F=n(fr,"Universal Windows Platform Build"),fr.forEach(e),V=n(ut," and "),I=r(ut,"STRONG",{});var pr=a(I);M=n(pr,"Windows Build Support (IL2CPP)"),pr.forEach(e),Y=n(ut," to be able to deploy chARp on the HoloLens2."),ut.forEach(e),_=d(l),S=r(l,"BLOCKQUOTE",{});var mr=a(S);B=r(mr,"P",{});var go=a(B);p=n(go,"Unity also installs "),f=r(go,"STRONG",{});var br=a(f);O=n(br,"Visual Studio (VS) 2019 Community Edition"),br.forEach(e),v=n(go,`  by default.
If you want to develop Unity apps, you’ll need to add the package `),x=r(go,"STRONG",{});var yr=a(x);X=n(yr,"Game development with Unity"),yr.forEach(e),Z=n(go,`.
To be able to deploy chARp on the HoloLens2 also install the VS module `),K=r(go,"STRONG",{});var vr=a(K);ne=n(vr,"Universal Windows Platform development"),vr.forEach(e),D=n(go,"."),go.forEach(e),mr.forEach(e),Q=d(l),J=r(l,"P",{});var wo=a(J);re=n(wo,"For an already installed Visual Studio, you have to add the modules mentioned above via the "),ge=r(wo,"STRONG",{});var gr=a(ge);Ye=n(gr,"Visual Studio Installer"),gr.forEach(e),ee=n(wo,`.
Open the installer and click on `),we=r(wo,"STRONG",{});var wr=a(we);Xe=n(wr,"Modify"),wr.forEach(e),Me=n(wo,` at your preferred version of Visual Studio.
Enable the modules and `),ie=r(wo,"STRONG",{});var _r=a(ie);Je=n(_r,"Modify"),_r.forEach(e),_e=n(wo," in the bottom right corner to install them."),wo.forEach(e),Ae=d(l),Ze=r(l,"H2",{});var Er=a(Ze);et=n(Er,"Download"),Er.forEach(e),De=d(l),be=r(l,"P",{});var _o=a(be);dt=n(_o,"To load chARp into Unity you first need to download chARp from our "),he=r(_o,"A",{href:!0,rel:!0});var Tr=a(he);Lt=n(Tr,"GitHub repository"),Tr.forEach(e),tt=n(_o,`.
You click on the green Button `),He=r(_o,"STRONG",{});var Rr=a(He);ft=n(Rr,"code"),Rr.forEach(e),Ot=n(_o," and select "),xe=r(_o,"CODE",{});var kr=a(xe);Pt=n(kr,"Download ZIP"),kr.forEach(e),je=n(_o," or you use git to clone the project to your disk"),_o.forEach(e),Ee=d(l),We=r(l,"PRE",{class:!0});var Xi=a(We);Xi.forEach(e),qe=d(l),ot=r(l,"H2",{});var Sr=a(ot);pt=n(Sr,"Prepare the Project"),Sr.forEach(e),ke=d(l),ye=r(l,"P",{});var Eo=a(ye);mt=n(Eo,"Open Unity Hub and select the "),ce=r(Eo,"STRONG",{});var Or=a(ce);Ct=n(Or,"Projects"),Or.forEach(e),Fe=n(Eo,` tab.
Use the dropdown next to the button `),bt=r(Eo,"STRONG",{});var Pr=a(bt);It=n(Pr,"Open"),Pr.forEach(e),yt=n(Eo," and select "),Te=r(Eo,"STRONG",{});var Ar=a(Te);Bt=n(Ar,"Add project from disk"),Ar.forEach(e),vt=n(Eo,`.
Put in the location to the root folder of your copy of chARp and confirm the selection.
The project should now show in the list of projects.`),Eo.forEach(e),de=d(l),nt=r(l,"BLOCKQUOTE",{});var Hr=a(nt);Ge=r(Hr,"P",{});var Nr=a(Ge);lt=n(Nr,"Before we can start the project, we first need to apply some more steps."),Nr.forEach(e),Hr.forEach(e),st=d(l),Ue=r(l,"P",{});var Mr=a(Ue);Ht=n(Mr,"Since chARp runs on the HoloLens2, we need to reinstall Microsoft’s MRTK."),Mr.forEach(e),Qe=d(l),ze=r(l,"H3",{});var xr=a(ze);Ne=n(xr,"MRTK"),xr.forEach(e),rt=d(l),ue=r(l,"P",{});var To=a(ue);it=n(To,`Because of their size, MRTK tarballs are not checked into the git repository.
Therefore, the used MRTK packages have to be reinstalled.
Download and run the `),Le=r(To,"A",{href:!0,rel:!0});var Gr=a(Le);Ve=n(Gr,"MixedRealityFeatureTool"),Gr.forEach(e),at=n(To," and select chARp’s root folder as "),Se=r(To,"STRONG",{});var Ur=a(Se);Ce=n(Ur,"Project Path"),Ur.forEach(e),gt=n(To,`.
Click `),Ke=r(To,"STRONG",{});var Lr=a(Ke);Dt=n(Lr,"Discover Features"),Lr.forEach(e),Nt=n(To," and activate the following features:"),To.forEach(e),Oe=d(l),Pe=r(l,"PRE",{class:!0});var Ji=a(Pe);Ji.forEach(e),wt=d(l),me=r(l,"P",{});var $o=a(me);c=n($o,`All these features should also appear with the tag “Version x.x.x currently installed”.
Click `),A=r($o,"STRONG",{});var Cr=a(A);h=n(Cr,"Get Features"),Cr.forEach(e),P=n($o," and confirm that step by clicking "),_t=r($o,"STRONG",{});var Ir=a(_t);Re=n(Ir,"Import"),Ir.forEach(e),$e=n($o,"."),$o.forEach(e),Xt=d(l),Mt=r(l,"H3",{});var Br=a(Mt);so=n(Br,"OpenBabel"),Br.forEach(e),Jt=d(l),ae=r(l,"P",{});var Ut=a(ae);Et=n(Ut,"For server support of OpenBabel please install the "),Tt=r(Ut,"A",{href:!0,rel:!0});var Dr=a(Tt);Wt=n(Dr,"latest"),Dr.forEach(e),ro=n(Ut,` version (x64 exe).
Take the `),Rt=r(Ut,"CODE",{});var jr=a(Rt);qt=n(jr,"OBDotNet.dll"),jr.forEach(e),io=n(Ut," from the OpenBabel install directory and copy it into "),xt=r(Ut,"CODE",{});var Wr=a(xt);Ft=n(Wr,"Assets/plugins"),Wr.forEach(e),ao=n(Ut,`.
If your system if having trouble to detect all necessary DLLs, check if the OpenBabel install path is added to your `),Qt=r(Ut,"CODE",{});var qr=a(Qt);zt=n(qr,"PATH"),qr.forEach(e),ho=n(Ut,`.
Under Windows go to “Edit the system environment variables” under “Environment Variables…” add the OpenBabel install path to your “Path” variable in the system variables.
Under Linux add the OpenBabel install path to your `),kt=r(Ut,"CODE",{});var Fr=a(kt);Vt=n(Fr,"PATH"),Fr.forEach(e),co=n(Ut," variable."),Ut.forEach(e),ht=d(l),Gt=r(l,"H3",{});var Qr=a(Gt);uo=n(Qr,"NuGet"),Qr.forEach(e),Zt=d(l),Ie=r(l,"P",{});var Yo=a(Ie);Kt=n(Yo,"Download and install "),St=r(Yo,"A",{href:!0,rel:!0});var zr=a(St);$t=n(zr,"Nuget for Unity"),zr.forEach(e),Yt=n(Yo,`.
To do this, download the `),po=r(Yo,"CODE",{});var Vr=a(po);Uo=n(Vr,".unitypackage"),Vr.forEach(e),Lo=n(Yo," file."),Yo.forEach(e),Ro=d(l),Co=r(l,"BLOCKQUOTE",{});var Kr=a(Co);ko=r(Kr,"P",{});var il=a(ko);pl=n(il,"Now it’s time to start chARp in Unity."),ml=r(il,"BR",{}),bl=n(il,`
Got to Unity Hub and single click the project to start it.`),il.forEach(e),Kr.forEach(e),Ln=d(l),ct=r(l,"P",{});var to=a(ct);yl=n(to,"Drag-and-drop the "),Zo=r(to,"CODE",{});var $r=a(Zo);vl=n($r,".unitypackage"),$r.forEach(e),gl=n(to," into the "),en=r(to,"STRONG",{});var Yr=a(en);wl=n(Yr,"Project"),Yr.forEach(e),_l=n(to,` section of your Unity window to install it.
A pop-up should open and shows you the files that will be added to the project, click `),tn=r(to,"STRONG",{});var Xr=a(tn);El=n(Xr,"Import"),Xr.forEach(e),Tl=n(to,`.
This should add a `),on=r(to,"STRONG",{});var Jr=a(on);Rl=n(Jr,"NuGet"),Jr.forEach(e),kl=n(to,` option to the standard bar of Unity.
Click on`),to.forEach(e),Cn=d(l),So=r(l,"PRE",{class:!0});var Zi=a(So);Zi.forEach(e),In=d(l),Io=r(l,"P",{});var Zr=a(Io);Sl=n(Zr,`to open the package manager.
In the search bar type in the following packages one by one and install them`),Zr.forEach(e),Bn=d(l),Oo=r(l,"PRE",{class:!0});var ea=a(Oo);ea.forEach(e),Dn=d(l),Bo=r(l,"H3",{});var ei=a(Bo);Ol=n(ei,"UWP"),ei.forEach(e),jn=d(l),Do=r(l,"P",{});var ti=a(Do);Pl=n(ti,"Next, go to the standard bar of Unity and click"),ti.forEach(e),Wn=d(l),Po=r(l,"PRE",{class:!0});var ta=a(Po);ta.forEach(e),qn=d(l),eo=r(l,"P",{});var Xo=a(eo);Al=n(Xo,"Select the option "),nn=r(Xo,"STRONG",{});var oi=a(nn);Hl=n(oi,"Universal Windows Platform"),oi.forEach(e),Nl=n(Xo," on the left and click on "),ln=r(Xo,"STRONG",{});var ni=a(ln);Ml=n(ni,"Switch Platform"),ni.forEach(e),xl=n(Xo,"."),Xo.forEach(e),Fn=d(l),jo=r(l,"H2",{});var li=a(jo);Gl=n(li,"Test Run"),li.forEach(e),Qn=d(l),mo=r(l,"P",{});var al=a(mo);Ul=n(al,`Now chARp should be set up for the first test run.
In the `),sn=r(al,"STRONG",{});var si=a(sn);Ll=n(si,"Project"),si.forEach(e),Cl=n(al," window of Unity go to"),al.forEach(e),zn=d(l),Ao=r(l,"PRE",{class:!0});var oa=a(Ao);oa.forEach(e),Vn=d(l),bo=r(l,"P",{});var hl=a(bo);Il=n(hl,"and double click "),rn=r(hl,"STRONG",{});var ri=a(rn);Bl=n(ri,"LoginScreenScene"),ri.forEach(e),Dl=n(hl,`.
Press the play button (top center of the Unity window) for running the test.`),hl.forEach(e),Kn=d(l),Wo=r(l,"H3",{});var ii=a(Wo);jl=n(ii,"Interactions inside Unity editor"),ii.forEach(e),$n=d(l),le=r(l,"P",{});var fe=a(le);Wl=n(fe,`Now chARp is running inside Unity editor.
To interact with the menus you can hold `),an=r(fe,"CODE",{});var ai=a(an);ql=n(ai,"shift"),ai.forEach(e),Fl=n(fe," to simulate the left hand and "),hn=r(fe,"CODE",{});var hi=a(hn);Ql=n(hi,"space bar"),hi.forEach(e),zl=n(fe,` to simulate the right hand.
The keys `),cn=r(fe,"CODE",{});var ci=a(cn);Vl=n(ci,"W"),ci.forEach(e),Kl=n(fe,", "),un=r(fe,"CODE",{});var ui=a(un);$l=n(ui,"A"),ui.forEach(e),Yl=n(fe,", "),dn=r(fe,"CODE",{});var di=a(dn);Xl=n(di,"S"),di.forEach(e),Jl=n(fe," and "),fn=r(fe,"CODE",{});var fi=a(fn);Zl=n(fi,"D"),fi.forEach(e),es=n(fe,` can be used to move in the scene.
`),pn=r(fe,"CODE",{});var pi=a(pn);ts=n(pi,"E"),pi.forEach(e),os=n(fe," will move you up and "),mn=r(fe,"CODE",{});var mi=a(mn);ns=n(mi,"Q"),mi.forEach(e),ls=n(fe,` will move you down.
Holding `),bn=r(fe,"CODE",{});var bi=a(bn);ss=n(bi,"right click"),bi.forEach(e),rs=n(fe,` lets you look around in the scene.
Another important interaction is the `),yn=r(fe,"CODE",{});var yi=a(yn);is=n(yi,"mouswheel"),yi.forEach(e),as=n(fe,`.
Scrolling with the mouse wheel moves the currently activated hand forward and backward.
Using the mouse wheel makes it easy to press buttons in chARp.`),fe.forEach(e),Yn=d(l),qo=r(l,"H2",{});var vi=a(qo);hs=n(vi,"Deploy on Device"),vi.forEach(e),Xn=d(l),yo=r(l,"P",{});var cl=a(yo);cs=n(cl,"The basic steps are also fund on the official Microsoft page "),Ho=r(cl,"A",{href:!0,rel:!0});var gi=a(Ho);us=n(gi,"here"),gi.forEach(e),ds=n(cl,`.
When the test was successful, you’re now ready to deploy chARp to your HoloLens2.
Again, go to`),cl.forEach(e),Jn=d(l),No=r(l,"PRE",{class:!0});var na=a(No);na.forEach(e),Zn=d(l),se=r(l,"P",{});var pe=a(se);fs=n(pe,"This time, click on "),vn=r(pe,"STRONG",{});var wi=a(vn);ps=n(wi,"Build"),wi.forEach(e),ms=n(pe,`, which opens a folder dialog.
Create a folder named `),gn=r(pe,"STRONG",{});var _i=a(gn);bs=n(_i,"build"),_i.forEach(e),ys=n(pe,` inside the chARp project folder and select it using the dialog.
Unity should start the `),wn=r(pe,"STRONG",{});var Ei=a(wn);vs=n(Ei,"Building Player"),Ei.forEach(e),gs=n(pe,` process.
When finished, got to the freshly created `),_n=r(pe,"STRONG",{});var Ti=a(_n);ws=n(Ti,"build"),Ti.forEach(e),_s=n(pe," folder and open the "),En=r(pe,"CODE",{});var Ri=a(En);Es=n(Ri,".sln"),Ri.forEach(e),Ts=n(pe,` file that is located there.
This will start up Visual Studio.
In the solution explorer, right click `),Tn=r(pe,"STRONG",{});var ki=a(Tn);Rs=n(ki,"chARpMolecularBuilder (Universal Windows)"),ki.forEach(e),ks=n(pe," and select "),Rn=r(pe,"STRONG",{});var Si=a(Rn);Ss=n(Si,"Set as Startup Project"),Si.forEach(e),Os=n(pe,`.
Set `),kn=r(pe,"STRONG",{});var Oi=a(kn);Ps=n(Oi,"Release"),Oi.forEach(e),As=n(pe," as solution configuration and "),Sn=r(pe,"STRONG",{});var Pi=a(Sn);Hs=n(Pi,"ARM64"),Pi.forEach(e),Ns=n(pe,` as solution platforms.
Choose `),On=r(pe,"STRONG",{});var Ai=a(On);Ms=n(Ai,"Remote Machine"),Ai.forEach(e),xs=n(pe," as device."),pe.forEach(e),el=d(l),Fo=r(l,"H3",{});var Hi=a(Fo);Gs=n(Hi,"IP of your HoloLens2"),Hi.forEach(e),tl=d(l),vo=r(l,"P",{});var ul=a(vo);Us=n(ul,`To be able to deploy chARp via WiFi, you need to connect your machine that runs Unity to the same network (or a reachable network) as the HoloLens2.
Open the WiFi options on the HoloLens2 and click on `),Pn=r(ul,"STRONG",{});var Ni=a(Pn);Ls=n(Ni,"Adaptor Settings"),Ni.forEach(e),Cs=n(ul,`.
Scroll down until you can find the devices IP address.`),ul.forEach(e),ol=d(l),Qo=r(l,"BLOCKQUOTE",{});var Mi=a(Qo);Mo=r(Mi,"P",{});var dl=a(Mo);Is=n(dl,"Make sure that your HoloLens2 is in "),xo=r(dl,"A",{href:!0,rel:!0});var xi=a(xo);Bs=n(xi,"Developer Mode"),xi.forEach(e),Ds=n(dl,"."),dl.forEach(e),Mi.forEach(e),nl=d(l),zo=r(l,"H3",{});var Gi=a(zo);js=n(Gi,"Back to VS"),Gi.forEach(e),ll=d(l),ve=r(l,"P",{});var Be=a(ve);Ws=n(Be,"Right click "),An=r(Be,"STRONG",{});var Ui=a(An);qs=n(Ui,"chARpMolecularBuilder (Universal Windows)"),Ui.forEach(e),Fs=n(Be," in the solution explorer again and go to "),Hn=r(Be,"STRONG",{});var Li=a(Hn);Qs=n(Li,"Properties"),Li.forEach(e),zs=n(Be,`.
Make sure you’re on the same configuration and platform as set earlier.
Go to the section `),Nn=r(Be,"STRONG",{});var Ci=a(Nn);Vs=n(Ci,"Debugging"),Ci.forEach(e),Ks=n(Be," and put your devices IP address into the field "),Mn=r(Be,"STRONG",{});var Ii=a(Mn);$s=n(Ii,"Machine Name"),Ii.forEach(e),Ys=n(Be,`.
Confirm these settings by clicking `),xn=r(Be,"STRONG",{});var Bi=a(xn);Xs=n(Bi,"OK"),Bi.forEach(e),Js=n(Be,`.
In the main bar, click on `),Gn=r(Be,"STRONG",{});var Di=a(Gn);Zs=n(Di,"Debug"),Di.forEach(e),er=n(Be," and run the build + deploy by selecting "),Un=r(Be,"STRONG",{});var ji=a(Un);tr=n(ji,"Start Without Debugging"),ji.forEach(e),or=n(Be,"."),Be.forEach(e),sl=d(l),Vo=r(l,"BLOCKQUOTE",{});var Wi=a(Vo);fo=r(Wi,"P",{});var Jo=a(fo);nr=n(Jo,"Running this for the first time requires you to pair your HoloLens2 with Visual Studio."),lr=r(Jo,"BR",{}),sr=n(Jo,`
Check the `),Go=r(Jo,"A",{href:!0,rel:!0});var qi=a(Go);rr=n(qi,"Microsoft documentation"),qi.forEach(e),ir=n(Jo," for instructions."),Jo.forEach(e),Wi.forEach(e),rl=d(l),Ko=r(l,"P",{});var Fi=a(Ko);ar=n(Fi,`Successfully deploying chARp on the HoloLens2 should start it automatically.
Now you’re ready to use chARp.`),Fi.forEach(e),this.h()},h(){C(E,"href","https://unity.com/download"),C(E,"rel","nofollow"),C(T,"href","unityhub://2021.3.12f1/8af3c3e441b1"),C(U,"href","unityhub://2021.3.12f1/8af3c3e441b1"),C(he,"href","https://github.com/UniStuttgart-VISUS/chARpMolecularBuilder"),C(he,"rel","nofollow"),C(We,"class","language-bash"),C(Le,"href","https://www.microsoft.com/en-us/download/details.aspx?id=102778"),C(Le,"rel","nofollow"),C(Pe,"class","language-undefined"),C(Tt,"href","https://github.com/openbabel/openbabel/releases/latest"),C(Tt,"rel","nofollow"),C(St,"href","https://github.com/GlitchEnzo/NuGetForUnity/releases/latest"),C(St,"rel","nofollow"),C(So,"class","language-undefined"),C(Oo,"class","language-undefined"),C(Po,"class","language-undefined"),C(Ao,"class","language-undefined"),C(Ho,"href","https://learn.microsoft.com/en-us/windows/mixed-reality/develop/advanced-concepts/using-visual-studio?tabs=hl2"),C(Ho,"rel","nofollow"),C(No,"class","language-undefined"),C(xo,"href","https://learn.microsoft.com/en-us/windows/mixed-reality/develop/advanced-concepts/using-the-windows-device-portal"),C(xo,"rel","nofollow"),C(Go,"href","https://learn.microsoft.com/en-us/windows/mixed-reality/develop/advanced-concepts/using-the-windows-device-portal"),C(Go,"rel","nofollow")},m(l,y){i(l,b,y),t(b,j),i(l,N,y),i(l,m,y),t(m,R),t(m,E),t(E,H),t(m,q),t(m,T),t(T,k),t(m,W),t(m,G),t(G,w),t(m,$),t(m,U),t(U,g),t(m,z),t(m,L),t(L,F),t(m,V),t(m,I),t(I,M),t(m,Y),i(l,_,y),i(l,S,y),t(S,B),t(B,p),t(B,f),t(f,O),t(B,v),t(B,x),t(x,X),t(B,Z),t(B,K),t(K,ne),t(B,D),i(l,Q,y),i(l,J,y),t(J,re),t(J,ge),t(ge,Ye),t(J,ee),t(J,we),t(we,Xe),t(J,Me),t(J,ie),t(ie,Je),t(J,_e),i(l,Ae,y),i(l,Ze,y),t(Ze,et),i(l,De,y),i(l,be,y),t(be,dt),t(be,he),t(he,Lt),t(be,tt),t(be,He),t(He,ft),t(be,Ot),t(be,xe),t(xe,Pt),t(be,je),i(l,Ee,y),i(l,We,y),We.innerHTML=At,i(l,qe,y),i(l,ot,y),t(ot,pt),i(l,ke,y),i(l,ye,y),t(ye,mt),t(ye,ce),t(ce,Ct),t(ye,Fe),t(ye,bt),t(bt,It),t(ye,yt),t(ye,Te),t(Te,Bt),t(ye,vt),i(l,de,y),i(l,nt,y),t(nt,Ge),t(Ge,lt),i(l,st,y),i(l,Ue,y),t(Ue,Ht),i(l,Qe,y),i(l,ze,y),t(ze,Ne),i(l,rt,y),i(l,ue,y),t(ue,it),t(ue,Le),t(Le,Ve),t(ue,at),t(ue,Se),t(Se,Ce),t(ue,gt),t(ue,Ke),t(Ke,Dt),t(ue,Nt),i(l,Oe,y),i(l,Pe,y),Pe.innerHTML=jt,i(l,wt,y),i(l,me,y),t(me,c),t(me,A),t(A,h),t(me,P),t(me,_t),t(_t,Re),t(me,$e),i(l,Xt,y),i(l,Mt,y),t(Mt,so),i(l,Jt,y),i(l,ae,y),t(ae,Et),t(ae,Tt),t(Tt,Wt),t(ae,ro),t(ae,Rt),t(Rt,qt),t(ae,io),t(ae,xt),t(xt,Ft),t(ae,ao),t(ae,Qt),t(Qt,zt),t(ae,ho),t(ae,kt),t(kt,Vt),t(ae,co),i(l,ht,y),i(l,Gt,y),t(Gt,uo),i(l,Zt,y),i(l,Ie,y),t(Ie,Kt),t(Ie,St),t(St,$t),t(Ie,Yt),t(Ie,po),t(po,Uo),t(Ie,Lo),i(l,Ro,y),i(l,Co,y),t(Co,ko),t(ko,pl),t(ko,ml),t(ko,bl),i(l,Ln,y),i(l,ct,y),t(ct,yl),t(ct,Zo),t(Zo,vl),t(ct,gl),t(ct,en),t(en,wl),t(ct,_l),t(ct,tn),t(tn,El),t(ct,Tl),t(ct,on),t(on,Rl),t(ct,kl),i(l,Cn,y),i(l,So,y),So.innerHTML=zi,i(l,In,y),i(l,Io,y),t(Io,Sl),i(l,Bn,y),i(l,Oo,y),Oo.innerHTML=Vi,i(l,Dn,y),i(l,Bo,y),t(Bo,Ol),i(l,jn,y),i(l,Do,y),t(Do,Pl),i(l,Wn,y),i(l,Po,y),Po.innerHTML=Ki,i(l,qn,y),i(l,eo,y),t(eo,Al),t(eo,nn),t(nn,Hl),t(eo,Nl),t(eo,ln),t(ln,Ml),t(eo,xl),i(l,Fn,y),i(l,jo,y),t(jo,Gl),i(l,Qn,y),i(l,mo,y),t(mo,Ul),t(mo,sn),t(sn,Ll),t(mo,Cl),i(l,zn,y),i(l,Ao,y),Ao.innerHTML=$i,i(l,Vn,y),i(l,bo,y),t(bo,Il),t(bo,rn),t(rn,Bl),t(bo,Dl),i(l,Kn,y),i(l,Wo,y),t(Wo,jl),i(l,$n,y),i(l,le,y),t(le,Wl),t(le,an),t(an,ql),t(le,Fl),t(le,hn),t(hn,Ql),t(le,zl),t(le,cn),t(cn,Vl),t(le,Kl),t(le,un),t(un,$l),t(le,Yl),t(le,dn),t(dn,Xl),t(le,Jl),t(le,fn),t(fn,Zl),t(le,es),t(le,pn),t(pn,ts),t(le,os),t(le,mn),t(mn,ns),t(le,ls),t(le,bn),t(bn,ss),t(le,rs),t(le,yn),t(yn,is),t(le,as),i(l,Yn,y),i(l,qo,y),t(qo,hs),i(l,Xn,y),i(l,yo,y),t(yo,cs),t(yo,Ho),t(Ho,us),t(yo,ds),i(l,Jn,y),i(l,No,y),No.innerHTML=Yi,i(l,Zn,y),i(l,se,y),t(se,fs),t(se,vn),t(vn,ps),t(se,ms),t(se,gn),t(gn,bs),t(se,ys),t(se,wn),t(wn,vs),t(se,gs),t(se,_n),t(_n,ws),t(se,_s),t(se,En),t(En,Es),t(se,Ts),t(se,Tn),t(Tn,Rs),t(se,ks),t(se,Rn),t(Rn,Ss),t(se,Os),t(se,kn),t(kn,Ps),t(se,As),t(se,Sn),t(Sn,Hs),t(se,Ns),t(se,On),t(On,Ms),t(se,xs),i(l,el,y),i(l,Fo,y),t(Fo,Gs),i(l,tl,y),i(l,vo,y),t(vo,Us),t(vo,Pn),t(Pn,Ls),t(vo,Cs),i(l,ol,y),i(l,Qo,y),t(Qo,Mo),t(Mo,Is),t(Mo,xo),t(xo,Bs),t(Mo,Ds),i(l,nl,y),i(l,zo,y),t(zo,js),i(l,ll,y),i(l,ve,y),t(ve,Ws),t(ve,An),t(An,qs),t(ve,Fs),t(ve,Hn),t(Hn,Qs),t(ve,zs),t(ve,Nn),t(Nn,Vs),t(ve,Ks),t(ve,Mn),t(Mn,$s),t(ve,Ys),t(ve,xn),t(xn,Xs),t(ve,Js),t(ve,Gn),t(Gn,Zs),t(ve,er),t(ve,Un),t(Un,tr),t(ve,or),i(l,sl,y),i(l,Vo,y),t(Vo,fo),t(fo,nr),t(fo,lr),t(fo,sr),t(fo,Go),t(Go,rr),t(fo,ir),i(l,rl,y),i(l,Ko,y),t(Ko,ar)},p:te,i:te,o:te,d(l){l&&e(b),l&&e(N),l&&e(m),l&&e(_),l&&e(S),l&&e(Q),l&&e(J),l&&e(Ae),l&&e(Ze),l&&e(De),l&&e(be),l&&e(Ee),l&&e(We),l&&e(qe),l&&e(ot),l&&e(ke),l&&e(ye),l&&e(de),l&&e(nt),l&&e(st),l&&e(Ue),l&&e(Qe),l&&e(ze),l&&e(rt),l&&e(ue),l&&e(Oe),l&&e(Pe),l&&e(wt),l&&e(me),l&&e(Xt),l&&e(Mt),l&&e(Jt),l&&e(ae),l&&e(ht),l&&e(Gt),l&&e(Zt),l&&e(Ie),l&&e(Ro),l&&e(Co),l&&e(Ln),l&&e(ct),l&&e(Cn),l&&e(So),l&&e(In),l&&e(Io),l&&e(Bn),l&&e(Oo),l&&e(Dn),l&&e(Bo),l&&e(jn),l&&e(Do),l&&e(Wn),l&&e(Po),l&&e(qn),l&&e(eo),l&&e(Fn),l&&e(jo),l&&e(Qn),l&&e(mo),l&&e(zn),l&&e(Ao),l&&e(Vn),l&&e(bo),l&&e(Kn),l&&e(Wo),l&&e($n),l&&e(le),l&&e(Yn),l&&e(qo),l&&e(Xn),l&&e(yo),l&&e(Jn),l&&e(No),l&&e(Zn),l&&e(se),l&&e(el),l&&e(Fo),l&&e(tl),l&&e(vo),l&&e(ol),l&&e(Qo),l&&e(nl),l&&e(zo),l&&e(ll),l&&e(ve),l&&e(sl),l&&e(Vo),l&&e(rl),l&&e(Ko)}}}const ca={title:"Installation"};class ua extends oo{constructor(b){super(),no(this,b,null,ha,lo,{})}}const da=Object.freeze(Object.defineProperty({__proto__:null,default:ua,metadata:ca},Symbol.toStringTag,{value:"Module"}));function fa(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y,_,S,B,p,f,O,v,x,X,Z,K,ne,D,Q,J,re,ge,Ye,ee,we,Xe,Me,ie,Je,_e,Ae,Ze,et,De,be,dt,he,Lt,tt,He,ft,Ot,xe,Pt,je,Ee,We,At,qe,ot,pt,ke,ye,mt,ce,Ct,Fe,bt,It,yt,Te,Bt,vt,de,nt,Ge,lt,st,Ue,Ht,Qe,ze,Ne,rt,ue,it,Le,Ve,at,Se,Ce,gt,Ke,Dt,Nt,Oe,Pe,jt,wt,me;return{c(){b=s("h2"),j=o("Pressing Buttons"),N=u(),m=s("p"),R=o(`Pressing a button on the HoloLens2, feels maybe a bit off the first time you’re using it.
The best way is to pretend it’s a real button and try to press it all the way through.
When your finger gets close to the button, you should see some visual feedback.
When the button got pressed successfully you’ll be notified by kind of a clicking sound.`),E=u(),H=s("h2"),q=o("Menus"),T=u(),k=s("p"),W=o("Entering chARp you’re put into a menu environment, where you basically can choose the mode of operation."),G=u(),w=s("img"),U=u(),g=s("p"),z=o("The "),L=s("strong"),F=o("Login Menu"),V=o(" is designed as a so called "),I=s("strong"),M=o("Near Menu"),Y=o(`, which means by default it will follow you around.
To stop that behavior press the `),_=s("strong"),S=o("Follow Me"),B=o(` button.
This lets the menu stay in the same position in the room.
By grabbing the Login Menu on top or the boarders, you can place it somewhere else in the room.
Pressing the `),p=s("strong"),f=o("Follow Me"),O=o(` button again lets the menu follow you around again.
The button `),v=s("strong"),x=o("Quit"),X=o(" obviously closes chARp."),Z=u(),K=s("h4"),ne=o("Normal"),D=u(),Q=s("p"),J=o("Pressing the button "),re=s("strong"),ge=o("Normal"),Ye=o(` puts you into the main building environment.
For more details on this mode see the section `),ee=s("a"),we=o("Normal Mode"),Xe=o(" of the manual."),Me=u(),ie=s("h4"),Je=o("Connect"),_e=u(),Ae=s("p"),Ze=o("The button "),et=s("strong"),De=o("Connect"),be=o(` lets you connect to a chARp server that is hosted in your network.
The number in brackets behind the text gives an indication of how many servers are visible at the moment in the network.`),dt=u(),he=s("h4"),Lt=o("Host"),tt=u(),He=s("p"),ft=s("strong"),Ot=o("Host"),xe=o(" will start a dedicated server on the device or an instance of chARp on your workstation."),Pt=u(),je=s("blockquote"),Ee=s("p"),We=o("It is recommended to start the server via Unity on your workstation and not on the device."),At=u(),qe=s("p"),ot=o(`This is because not all features of the server are supported on the HoloLens2.
Additionally, running a server on the HoloLens2 can only work by starting chARp twice, once as dedicated server and once to connect as a client.`),pt=u(),ke=s("h4"),ye=o("Scan QR"),mt=u(),ce=s("p"),Ct=o("The button "),Fe=s("strong"),bt=o("Scan QR"),It=o(" lets you scan room anchors for collaboration in the same room."),yt=u(),Te=s("h4"),Bt=o("Debug Log"),vt=u(),de=s("p"),nt=o("Pressing the "),Ge=s("strong"),lt=o("Debug Log"),st=o(` button, opens the debug window (see below).
Similar to the functions of the `),Ue=s("strong"),Ht=o("Login Menu"),Qe=o(" the debug log has a follow me function and can be place by grabbing the top bar."),ze=u(),Ne=s("img"),ue=u(),it=s("p"),Le=o(`Each entry of the debug log is clickable to get access to the stack trace.
Using a scroll gesture like on a smart phone lets you scroll through the contents of the debug log.
Behind some message you will see a number in brackets.
This number indicates how often this message was written to the log.
If there is a severe problem, the number behind an error message will rise quickly.
Normal debug output is displayed in white text, warnings in orange and error messages are displayed in red color.
Checking the debug log and stack trace of the messages makes analyzing errors on the device significantly easier.`),Ve=u(),at=s("blockquote"),Se=s("p"),Ce=o("If you encounter any unexpected errors, please let us know via the "),gt=s("strong"),Ke=o("Issue Tracker"),Dt=o(" in our GitHub repository."),Nt=u(),Oe=s("p"),Pe=o("Just use the "),jt=s("strong"),wt=o("Go to GitHub"),me=o(" button in the navigation bar on top."),this.h()},l(c){b=r(c,"H2",{});var A=a(b);j=n(A,"Pressing Buttons"),A.forEach(e),N=d(c),m=r(c,"P",{});var h=a(m);R=n(h,`Pressing a button on the HoloLens2, feels maybe a bit off the first time you’re using it.
The best way is to pretend it’s a real button and try to press it all the way through.
When your finger gets close to the button, you should see some visual feedback.
When the button got pressed successfully you’ll be notified by kind of a clicking sound.`),h.forEach(e),E=d(c),H=r(c,"H2",{});var P=a(H);q=n(P,"Menus"),P.forEach(e),T=d(c),k=r(c,"P",{});var _t=a(k);W=n(_t,"Entering chARp you’re put into a menu environment, where you basically can choose the mode of operation."),_t.forEach(e),G=d(c),w=r(c,"IMG",{src:!0,alt:!0,class:!0}),U=d(c),g=r(c,"P",{});var Re=a(g);z=n(Re,"The "),L=r(Re,"STRONG",{});var $e=a(L);F=n($e,"Login Menu"),$e.forEach(e),V=n(Re," is designed as a so called "),I=r(Re,"STRONG",{});var Xt=a(I);M=n(Xt,"Near Menu"),Xt.forEach(e),Y=n(Re,`, which means by default it will follow you around.
To stop that behavior press the `),_=r(Re,"STRONG",{});var Mt=a(_);S=n(Mt,"Follow Me"),Mt.forEach(e),B=n(Re,` button.
This lets the menu stay in the same position in the room.
By grabbing the Login Menu on top or the boarders, you can place it somewhere else in the room.
Pressing the `),p=r(Re,"STRONG",{});var so=a(p);f=n(so,"Follow Me"),so.forEach(e),O=n(Re,` button again lets the menu follow you around again.
The button `),v=r(Re,"STRONG",{});var Jt=a(v);x=n(Jt,"Quit"),Jt.forEach(e),X=n(Re," obviously closes chARp."),Re.forEach(e),Z=d(c),K=r(c,"H4",{});var ae=a(K);ne=n(ae,"Normal"),ae.forEach(e),D=d(c),Q=r(c,"P",{});var Et=a(Q);J=n(Et,"Pressing the button "),re=r(Et,"STRONG",{});var Tt=a(re);ge=n(Tt,"Normal"),Tt.forEach(e),Ye=n(Et,` puts you into the main building environment.
For more details on this mode see the section `),ee=r(Et,"A",{href:!0});var Wt=a(ee);we=n(Wt,"Normal Mode"),Wt.forEach(e),Xe=n(Et," of the manual."),Et.forEach(e),Me=d(c),ie=r(c,"H4",{});var ro=a(ie);Je=n(ro,"Connect"),ro.forEach(e),_e=d(c),Ae=r(c,"P",{});var Rt=a(Ae);Ze=n(Rt,"The button "),et=r(Rt,"STRONG",{});var qt=a(et);De=n(qt,"Connect"),qt.forEach(e),be=n(Rt,` lets you connect to a chARp server that is hosted in your network.
The number in brackets behind the text gives an indication of how many servers are visible at the moment in the network.`),Rt.forEach(e),dt=d(c),he=r(c,"H4",{});var io=a(he);Lt=n(io,"Host"),io.forEach(e),tt=d(c),He=r(c,"P",{});var xt=a(He);ft=r(xt,"STRONG",{});var Ft=a(ft);Ot=n(Ft,"Host"),Ft.forEach(e),xe=n(xt," will start a dedicated server on the device or an instance of chARp on your workstation."),xt.forEach(e),Pt=d(c),je=r(c,"BLOCKQUOTE",{});var ao=a(je);Ee=r(ao,"P",{});var Qt=a(Ee);We=n(Qt,"It is recommended to start the server via Unity on your workstation and not on the device."),Qt.forEach(e),ao.forEach(e),At=d(c),qe=r(c,"P",{});var zt=a(qe);ot=n(zt,`This is because not all features of the server are supported on the HoloLens2.
Additionally, running a server on the HoloLens2 can only work by starting chARp twice, once as dedicated server and once to connect as a client.`),zt.forEach(e),pt=d(c),ke=r(c,"H4",{});var ho=a(ke);ye=n(ho,"Scan QR"),ho.forEach(e),mt=d(c),ce=r(c,"P",{});var kt=a(ce);Ct=n(kt,"The button "),Fe=r(kt,"STRONG",{});var Vt=a(Fe);bt=n(Vt,"Scan QR"),Vt.forEach(e),It=n(kt," lets you scan room anchors for collaboration in the same room."),kt.forEach(e),yt=d(c),Te=r(c,"H4",{});var co=a(Te);Bt=n(co,"Debug Log"),co.forEach(e),vt=d(c),de=r(c,"P",{});var ht=a(de);nt=n(ht,"Pressing the "),Ge=r(ht,"STRONG",{});var Gt=a(Ge);lt=n(Gt,"Debug Log"),Gt.forEach(e),st=n(ht,` button, opens the debug window (see below).
Similar to the functions of the `),Ue=r(ht,"STRONG",{});var uo=a(Ue);Ht=n(uo,"Login Menu"),uo.forEach(e),Qe=n(ht," the debug log has a follow me function and can be place by grabbing the top bar."),ht.forEach(e),ze=d(c),Ne=r(c,"IMG",{src:!0,alt:!0,class:!0}),ue=d(c),it=r(c,"P",{});var Zt=a(it);Le=n(Zt,`Each entry of the debug log is clickable to get access to the stack trace.
Using a scroll gesture like on a smart phone lets you scroll through the contents of the debug log.
Behind some message you will see a number in brackets.
This number indicates how often this message was written to the log.
If there is a severe problem, the number behind an error message will rise quickly.
Normal debug output is displayed in white text, warnings in orange and error messages are displayed in red color.
Checking the debug log and stack trace of the messages makes analyzing errors on the device significantly easier.`),Zt.forEach(e),Ve=d(c),at=r(c,"BLOCKQUOTE",{});var Ie=a(at);Se=r(Ie,"P",{});var Kt=a(Se);Ce=n(Kt,"If you encounter any unexpected errors, please let us know via the "),gt=r(Kt,"STRONG",{});var St=a(gt);Ke=n(St,"Issue Tracker"),St.forEach(e),Dt=n(Kt," in our GitHub repository."),Kt.forEach(e),Ie.forEach(e),Nt=d(c),Oe=r(c,"P",{});var $t=a(Oe);Pe=n($t,"Just use the "),jt=r($t,"STRONG",{});var Yt=a(jt);wt=n(Yt,"Go to GitHub"),Yt.forEach(e),me=n($t," button in the navigation bar on top."),$t.forEach(e),this.h()},h(){fl(w.src,$="/images/manual/login_screen.png")||C(w,"src",$),C(w,"alt","Login Screen Menu"),C(w,"class","mx-auto max-w-md"),C(ee,"href","/manual/02-normal_mode"),fl(Ne.src,rt="/images/manual/debug_log.png")||C(Ne,"src",rt),C(Ne,"alt","Debug Log"),C(Ne,"class","mx-auto max-w-sm")},m(c,A){i(c,b,A),t(b,j),i(c,N,A),i(c,m,A),t(m,R),i(c,E,A),i(c,H,A),t(H,q),i(c,T,A),i(c,k,A),t(k,W),i(c,G,A),i(c,w,A),i(c,U,A),i(c,g,A),t(g,z),t(g,L),t(L,F),t(g,V),t(g,I),t(I,M),t(g,Y),t(g,_),t(_,S),t(g,B),t(g,p),t(p,f),t(g,O),t(g,v),t(v,x),t(g,X),i(c,Z,A),i(c,K,A),t(K,ne),i(c,D,A),i(c,Q,A),t(Q,J),t(Q,re),t(re,ge),t(Q,Ye),t(Q,ee),t(ee,we),t(Q,Xe),i(c,Me,A),i(c,ie,A),t(ie,Je),i(c,_e,A),i(c,Ae,A),t(Ae,Ze),t(Ae,et),t(et,De),t(Ae,be),i(c,dt,A),i(c,he,A),t(he,Lt),i(c,tt,A),i(c,He,A),t(He,ft),t(ft,Ot),t(He,xe),i(c,Pt,A),i(c,je,A),t(je,Ee),t(Ee,We),i(c,At,A),i(c,qe,A),t(qe,ot),i(c,pt,A),i(c,ke,A),t(ke,ye),i(c,mt,A),i(c,ce,A),t(ce,Ct),t(ce,Fe),t(Fe,bt),t(ce,It),i(c,yt,A),i(c,Te,A),t(Te,Bt),i(c,vt,A),i(c,de,A),t(de,nt),t(de,Ge),t(Ge,lt),t(de,st),t(de,Ue),t(Ue,Ht),t(de,Qe),i(c,ze,A),i(c,Ne,A),i(c,ue,A),i(c,it,A),t(it,Le),i(c,Ve,A),i(c,at,A),t(at,Se),t(Se,Ce),t(Se,gt),t(gt,Ke),t(Se,Dt),i(c,Nt,A),i(c,Oe,A),t(Oe,Pe),t(Oe,jt),t(jt,wt),t(Oe,me)},p:te,i:te,o:te,d(c){c&&e(b),c&&e(N),c&&e(m),c&&e(E),c&&e(H),c&&e(T),c&&e(k),c&&e(G),c&&e(w),c&&e(U),c&&e(g),c&&e(Z),c&&e(K),c&&e(D),c&&e(Q),c&&e(Me),c&&e(ie),c&&e(_e),c&&e(Ae),c&&e(dt),c&&e(he),c&&e(tt),c&&e(He),c&&e(Pt),c&&e(je),c&&e(At),c&&e(qe),c&&e(pt),c&&e(ke),c&&e(mt),c&&e(ce),c&&e(yt),c&&e(Te),c&&e(vt),c&&e(de),c&&e(ze),c&&e(Ne),c&&e(ue),c&&e(it),c&&e(Ve),c&&e(at),c&&e(Nt),c&&e(Oe)}}}const pa={title:"Login Screen"};class ma extends oo{constructor(b){super(),no(this,b,null,fa,lo,{})}}const ba=Object.freeze(Object.defineProperty({__proto__:null,default:ma,metadata:pa},Symbol.toStringTag,{value:"Module"}));function ya(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y,_,S,B,p,f,O,v,x,X,Z,K,ne,D,Q,J,re,ge,Ye,ee,we,Xe,Me,ie,Je,_e,Ae,Ze,et,De,be,dt,he,Lt,tt,He,ft,Ot,xe,Pt,je,Ee,We,At,qe,ot,pt,ke,ye,mt,ce,Ct,Fe,bt,It,yt,Te,Bt,vt,de,nt,Ge,lt,st,Ue,Ht,Qe,ze,Ne,rt,ue,it,Le,Ve,at,Se,Ce,gt,Ke,Dt,Nt,Oe,Pe,jt,wt,me,c,A;return{c(){b=s("h2"),j=o("Overview"),N=u(),m=s("p"),R=o("The "),E=s("strong"),H=o("Normal Mode"),q=o(` is the standard working environment of chARp.
Here you can build and change molecules, inspect and manipulate structures and, load and save data.
Below the main menu of the normal mode is shown.`),T=u(),k=s("img"),G=u(),w=s("p"),$=o("Similar to the "),U=s("strong"),g=o("Login Menu"),z=o(" you can toggle the follow me mode using the "),L=s("strong"),F=o("Pin Button"),V=o(`.
The button `),I=s("strong"),M=o("Exit"),Y=o(" brings you back to the login screen."),_=u(),S=s("h3"),B=o("Toggle Log"),p=u(),f=s("p"),O=o("The "),v=s("strong"),x=o("Toggle Log"),X=o(` button shows and hides the debug log.
Note: changing scenes does not clear the debug log for easier error detection.`),Z=u(),K=s("h4"),ne=o("Toggle Mesh"),D=u(),Q=s("p"),J=o("This button turns the rendering of the spatial awareness of "),re=s("a"),ge=o("OpenXR"),Ye=o(` on and off.
The real world surroundings are detected by your device in a (usually) 2.5 second interval.
Toggling the button does not turn on/off the detection of your surroundings, just the rendered wireframe overlay.`),ee=u(),we=s("h3"),Xe=o("Toggle Force Field"),Me=u(),ie=s("p"),Je=o(`chARp calculates forces in the background to empirically simulate a semi-realistic molecule behavior.
The forces are integrated using a simple `),_e=s("a"),Ae=o("Euler integration"),Ze=o(`.
The force field is developed to be responsive, lightweight, and makes it easy to handle objects in the chARp Molecular Builder environment.
Toggling the force field off, stops any calculations in the background and lets every part of the molecule move unhindered (without any force feedback).
This mode comes in handy, when creating a bond within a molecule, but the force field makes it difficult to bring these two dummies together.`),et=u(),De=s("h3"),be=o("Undo"),dt=u(),he=s("p"),Lt=o(`Does what you would expect.
Pressing the `),tt=s("strong"),He=o("Undo"),ft=o(" button once or multiple times will bring the scene back to a state before the last interaction steps."),Ot=u(),xe=s("h3"),Pt=o("Clear All Molecules"),je=u(),Ee=s("p"),We=o("Triggering the "),At=s("strong"),qe=o("Clear All Molecules"),ot=o(` button empties the scene completely.
All atoms and molecules are deleted.`),pt=u(),ke=s("h3"),ye=o("Replace Dummies"),mt=u(),ce=s("p"),Ct=o(`Each spawned atom is created with bonded dummy atoms.
These dummy atoms can be switched to Hydrogen atoms with the `),Fe=s("strong"),bt=o("Replace Dummies"),It=o(" button."),yt=u(),Te=s("h3"),Bt=o("Create Atom"),vt=u(),de=s("p"),nt=o(`As already mentioned, atoms are created with dummies attached.
These dummies are used to create bonds or to be switched out for Hydrogen atoms.`),Ge=u(),lt=s("blockquote"),st=s("p"),Ue=o("Currently in development: Create any atom you want, not only carbon."),Ht=u(),Qe=s("p"),ze=o("The number of dummies depends on the hybridization of the atom."),Ne=u(),rt=s("blockquote"),ue=s("p"),it=o("Currently in development: Change the hybridization of a selected atom."),Le=u(),Ve=s("h3"),at=o("Save/Load"),Se=u(),Ce=s("p"),gt=o("The "),Ke=s("strong"),Dt=o("Save/Load"),Nt=o(` button opens another dialog that shows you all the molecule files on your device.
Loading a file adds its contents, which consists of one or multiple molecules, to the scene.
Saving to a file saves the whole content of the current scene.
The files are stored in chARp’s internal molecules/scene format.
For saving or loading to different file formats, you need to connect your device to a dedicated chARp server.
Check the later chapters for more information on how to do that.`),Oe=u(),Pe=s("h3"),jt=o("Layer Selection"),wt=u(),me=s("blockquote"),c=s("p"),A=o("Deprecated"),this.h()},l(h){b=r(h,"H2",{});var P=a(b);j=n(P,"Overview"),P.forEach(e),N=d(h),m=r(h,"P",{});var _t=a(m);R=n(_t,"The "),E=r(_t,"STRONG",{});var Re=a(E);H=n(Re,"Normal Mode"),Re.forEach(e),q=n(_t,` is the standard working environment of chARp.
Here you can build and change molecules, inspect and manipulate structures and, load and save data.
Below the main menu of the normal mode is shown.`),_t.forEach(e),T=d(h),k=r(h,"IMG",{src:!0,alt:!0,class:!0}),G=d(h),w=r(h,"P",{});var $e=a(w);$=n($e,"Similar to the "),U=r($e,"STRONG",{});var Xt=a(U);g=n(Xt,"Login Menu"),Xt.forEach(e),z=n($e," you can toggle the follow me mode using the "),L=r($e,"STRONG",{});var Mt=a(L);F=n(Mt,"Pin Button"),Mt.forEach(e),V=n($e,`.
The button `),I=r($e,"STRONG",{});var so=a(I);M=n(so,"Exit"),so.forEach(e),Y=n($e," brings you back to the login screen."),$e.forEach(e),_=d(h),S=r(h,"H3",{});var Jt=a(S);B=n(Jt,"Toggle Log"),Jt.forEach(e),p=d(h),f=r(h,"P",{});var ae=a(f);O=n(ae,"The "),v=r(ae,"STRONG",{});var Et=a(v);x=n(Et,"Toggle Log"),Et.forEach(e),X=n(ae,` button shows and hides the debug log.
Note: changing scenes does not clear the debug log for easier error detection.`),ae.forEach(e),Z=d(h),K=r(h,"H4",{});var Tt=a(K);ne=n(Tt,"Toggle Mesh"),Tt.forEach(e),D=d(h),Q=r(h,"P",{});var Wt=a(Q);J=n(Wt,"This button turns the rendering of the spatial awareness of "),re=r(Wt,"A",{href:!0,rel:!0});var ro=a(re);ge=n(ro,"OpenXR"),ro.forEach(e),Ye=n(Wt,` on and off.
The real world surroundings are detected by your device in a (usually) 2.5 second interval.
Toggling the button does not turn on/off the detection of your surroundings, just the rendered wireframe overlay.`),Wt.forEach(e),ee=d(h),we=r(h,"H3",{});var Rt=a(we);Xe=n(Rt,"Toggle Force Field"),Rt.forEach(e),Me=d(h),ie=r(h,"P",{});var qt=a(ie);Je=n(qt,`chARp calculates forces in the background to empirically simulate a semi-realistic molecule behavior.
The forces are integrated using a simple `),_e=r(qt,"A",{href:!0,rel:!0});var io=a(_e);Ae=n(io,"Euler integration"),io.forEach(e),Ze=n(qt,`.
The force field is developed to be responsive, lightweight, and makes it easy to handle objects in the chARp Molecular Builder environment.
Toggling the force field off, stops any calculations in the background and lets every part of the molecule move unhindered (without any force feedback).
This mode comes in handy, when creating a bond within a molecule, but the force field makes it difficult to bring these two dummies together.`),qt.forEach(e),et=d(h),De=r(h,"H3",{});var xt=a(De);be=n(xt,"Undo"),xt.forEach(e),dt=d(h),he=r(h,"P",{});var Ft=a(he);Lt=n(Ft,`Does what you would expect.
Pressing the `),tt=r(Ft,"STRONG",{});var ao=a(tt);He=n(ao,"Undo"),ao.forEach(e),ft=n(Ft," button once or multiple times will bring the scene back to a state before the last interaction steps."),Ft.forEach(e),Ot=d(h),xe=r(h,"H3",{});var Qt=a(xe);Pt=n(Qt,"Clear All Molecules"),Qt.forEach(e),je=d(h),Ee=r(h,"P",{});var zt=a(Ee);We=n(zt,"Triggering the "),At=r(zt,"STRONG",{});var ho=a(At);qe=n(ho,"Clear All Molecules"),ho.forEach(e),ot=n(zt,` button empties the scene completely.
All atoms and molecules are deleted.`),zt.forEach(e),pt=d(h),ke=r(h,"H3",{});var kt=a(ke);ye=n(kt,"Replace Dummies"),kt.forEach(e),mt=d(h),ce=r(h,"P",{});var Vt=a(ce);Ct=n(Vt,`Each spawned atom is created with bonded dummy atoms.
These dummy atoms can be switched to Hydrogen atoms with the `),Fe=r(Vt,"STRONG",{});var co=a(Fe);bt=n(co,"Replace Dummies"),co.forEach(e),It=n(Vt," button."),Vt.forEach(e),yt=d(h),Te=r(h,"H3",{});var ht=a(Te);Bt=n(ht,"Create Atom"),ht.forEach(e),vt=d(h),de=r(h,"P",{});var Gt=a(de);nt=n(Gt,`As already mentioned, atoms are created with dummies attached.
These dummies are used to create bonds or to be switched out for Hydrogen atoms.`),Gt.forEach(e),Ge=d(h),lt=r(h,"BLOCKQUOTE",{});var uo=a(lt);st=r(uo,"P",{});var Zt=a(st);Ue=n(Zt,"Currently in development: Create any atom you want, not only carbon."),Zt.forEach(e),uo.forEach(e),Ht=d(h),Qe=r(h,"P",{});var Ie=a(Qe);ze=n(Ie,"The number of dummies depends on the hybridization of the atom."),Ie.forEach(e),Ne=d(h),rt=r(h,"BLOCKQUOTE",{});var Kt=a(rt);ue=r(Kt,"P",{});var St=a(ue);it=n(St,"Currently in development: Change the hybridization of a selected atom."),St.forEach(e),Kt.forEach(e),Le=d(h),Ve=r(h,"H3",{});var $t=a(Ve);at=n($t,"Save/Load"),$t.forEach(e),Se=d(h),Ce=r(h,"P",{});var Yt=a(Ce);gt=n(Yt,"The "),Ke=r(Yt,"STRONG",{});var po=a(Ke);Dt=n(po,"Save/Load"),po.forEach(e),Nt=n(Yt,` button opens another dialog that shows you all the molecule files on your device.
Loading a file adds its contents, which consists of one or multiple molecules, to the scene.
Saving to a file saves the whole content of the current scene.
The files are stored in chARp’s internal molecules/scene format.
For saving or loading to different file formats, you need to connect your device to a dedicated chARp server.
Check the later chapters for more information on how to do that.`),Yt.forEach(e),Oe=d(h),Pe=r(h,"H3",{});var Uo=a(Pe);jt=n(Uo,"Layer Selection"),Uo.forEach(e),wt=d(h),me=r(h,"BLOCKQUOTE",{});var Lo=a(me);c=r(Lo,"P",{});var Ro=a(c);A=n(Ro,"Deprecated"),Ro.forEach(e),Lo.forEach(e),this.h()},h(){fl(k.src,W="/images/manual/normal_mode_menu.png")||C(k,"src",W),C(k,"alt","Normal Mode Menu"),C(k,"class","mx-auto max-w-md"),C(re,"href","https://www.khronos.org/OpenXR/"),C(re,"rel","nofollow"),C(_e,"href","https://en.wikipedia.org/wiki/Euler_method"),C(_e,"rel","nofollow")},m(h,P){i(h,b,P),t(b,j),i(h,N,P),i(h,m,P),t(m,R),t(m,E),t(E,H),t(m,q),i(h,T,P),i(h,k,P),i(h,G,P),i(h,w,P),t(w,$),t(w,U),t(U,g),t(w,z),t(w,L),t(L,F),t(w,V),t(w,I),t(I,M),t(w,Y),i(h,_,P),i(h,S,P),t(S,B),i(h,p,P),i(h,f,P),t(f,O),t(f,v),t(v,x),t(f,X),i(h,Z,P),i(h,K,P),t(K,ne),i(h,D,P),i(h,Q,P),t(Q,J),t(Q,re),t(re,ge),t(Q,Ye),i(h,ee,P),i(h,we,P),t(we,Xe),i(h,Me,P),i(h,ie,P),t(ie,Je),t(ie,_e),t(_e,Ae),t(ie,Ze),i(h,et,P),i(h,De,P),t(De,be),i(h,dt,P),i(h,he,P),t(he,Lt),t(he,tt),t(tt,He),t(he,ft),i(h,Ot,P),i(h,xe,P),t(xe,Pt),i(h,je,P),i(h,Ee,P),t(Ee,We),t(Ee,At),t(At,qe),t(Ee,ot),i(h,pt,P),i(h,ke,P),t(ke,ye),i(h,mt,P),i(h,ce,P),t(ce,Ct),t(ce,Fe),t(Fe,bt),t(ce,It),i(h,yt,P),i(h,Te,P),t(Te,Bt),i(h,vt,P),i(h,de,P),t(de,nt),i(h,Ge,P),i(h,lt,P),t(lt,st),t(st,Ue),i(h,Ht,P),i(h,Qe,P),t(Qe,ze),i(h,Ne,P),i(h,rt,P),t(rt,ue),t(ue,it),i(h,Le,P),i(h,Ve,P),t(Ve,at),i(h,Se,P),i(h,Ce,P),t(Ce,gt),t(Ce,Ke),t(Ke,Dt),t(Ce,Nt),i(h,Oe,P),i(h,Pe,P),t(Pe,jt),i(h,wt,P),i(h,me,P),t(me,c),t(c,A)},p:te,i:te,o:te,d(h){h&&e(b),h&&e(N),h&&e(m),h&&e(T),h&&e(k),h&&e(G),h&&e(w),h&&e(_),h&&e(S),h&&e(p),h&&e(f),h&&e(Z),h&&e(K),h&&e(D),h&&e(Q),h&&e(ee),h&&e(we),h&&e(Me),h&&e(ie),h&&e(et),h&&e(De),h&&e(dt),h&&e(he),h&&e(Ot),h&&e(xe),h&&e(je),h&&e(Ee),h&&e(pt),h&&e(ke),h&&e(mt),h&&e(ce),h&&e(yt),h&&e(Te),h&&e(vt),h&&e(de),h&&e(Ge),h&&e(lt),h&&e(Ht),h&&e(Qe),h&&e(Ne),h&&e(rt),h&&e(Le),h&&e(Ve),h&&e(Se),h&&e(Ce),h&&e(Oe),h&&e(Pe),h&&e(wt),h&&e(me)}}}const va={title:"Menu"};class ga extends oo{constructor(b){super(),no(this,b,null,ya,lo,{})}}const wa=Object.freeze(Object.defineProperty({__proto__:null,default:ga,metadata:va},Symbol.toStringTag,{value:"Module"}));function _a(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y,_,S,B,p;return{c(){b=s("h2"),j=o("Moving Atoms"),N=u(),m=s("p"),R=o(`There are two basic ways of interaction with the molecule and atom data in the scene.
The fist and probably most intuitive way is to grab an atom with two fingers (the index finger and the thumb) and move it as if you’re holding it with your hand.
Here you can completely close the gap between the fingers or leave it a little open (up to 10 mm).
With activated force field, the rest of the molecule follows the dragged atom.
The currently grabbed atom is highlighted by a blue halo around it.
While interacting with atoms, you can use both hands to grab two different atoms and, for example, bring them together.`),E=u(),H=s("blockquote"),q=s("p"),T=o("Picture"),k=u(),W=s("h2"),G=o("Moving the whole molecule"),w=u(),$=s("p"),U=o(`When moving your hand close to the molecule, the edges of an enclosing bounding box are showing.
The corners of this bounding box are a bit larger, what emphasizes their ability to be interacted with.
Grabbing the corner again with two fingers (index and thumb) shows the whole box around the molecule and changes its color to blue;
While holding the corner, you can move the whole atom without inducing any forces.
Additionally, the rotation of the hand can be utilized for easy positioning of the molecule.`),g=u(),z=s("h2"),L=o("Create Bonds"),F=u(),V=s("p"),I=o(`Every atom is created with dummy atoms corresponding to their current hybridization.
Using the interaction methods explained above, the dummy atoms of two different molecules can be overlapped.
That should color the two dummies blue.
When the currently grabbed molecule/atom is released while blue, a bond is created.
Creating bonds also works within a single molecule.`),M=u(),Y=s("h2"),_=o("Selection"),S=u(),B=s("p"),p=o(`You can select a single or multiple atoms.
For this, you grab the atom just for a brief moment.
The current threshold for the interaction is set to below 200ms, which should give a similar behavior like a mouse click.
The selection highlights the atom and spawns a tool tip.
The tool tip consists of a small frame that shows information and provides the ability for manipulation, and a line that connects the selected atom/object and the tool tip frame.
To deselect an atom, either click on the atom again or press the close button (X) in the tool tip frame.`)},l(f){b=r(f,"H2",{});var O=a(b);j=n(O,"Moving Atoms"),O.forEach(e),N=d(f),m=r(f,"P",{});var v=a(m);R=n(v,`There are two basic ways of interaction with the molecule and atom data in the scene.
The fist and probably most intuitive way is to grab an atom with two fingers (the index finger and the thumb) and move it as if you’re holding it with your hand.
Here you can completely close the gap between the fingers or leave it a little open (up to 10 mm).
With activated force field, the rest of the molecule follows the dragged atom.
The currently grabbed atom is highlighted by a blue halo around it.
While interacting with atoms, you can use both hands to grab two different atoms and, for example, bring them together.`),v.forEach(e),E=d(f),H=r(f,"BLOCKQUOTE",{});var x=a(H);q=r(x,"P",{});var X=a(q);T=n(X,"Picture"),X.forEach(e),x.forEach(e),k=d(f),W=r(f,"H2",{});var Z=a(W);G=n(Z,"Moving the whole molecule"),Z.forEach(e),w=d(f),$=r(f,"P",{});var K=a($);U=n(K,`When moving your hand close to the molecule, the edges of an enclosing bounding box are showing.
The corners of this bounding box are a bit larger, what emphasizes their ability to be interacted with.
Grabbing the corner again with two fingers (index and thumb) shows the whole box around the molecule and changes its color to blue;
While holding the corner, you can move the whole atom without inducing any forces.
Additionally, the rotation of the hand can be utilized for easy positioning of the molecule.`),K.forEach(e),g=d(f),z=r(f,"H2",{});var ne=a(z);L=n(ne,"Create Bonds"),ne.forEach(e),F=d(f),V=r(f,"P",{});var D=a(V);I=n(D,`Every atom is created with dummy atoms corresponding to their current hybridization.
Using the interaction methods explained above, the dummy atoms of two different molecules can be overlapped.
That should color the two dummies blue.
When the currently grabbed molecule/atom is released while blue, a bond is created.
Creating bonds also works within a single molecule.`),D.forEach(e),M=d(f),Y=r(f,"H2",{});var Q=a(Y);_=n(Q,"Selection"),Q.forEach(e),S=d(f),B=r(f,"P",{});var J=a(B);p=n(J,`You can select a single or multiple atoms.
For this, you grab the atom just for a brief moment.
The current threshold for the interaction is set to below 200ms, which should give a similar behavior like a mouse click.
The selection highlights the atom and spawns a tool tip.
The tool tip consists of a small frame that shows information and provides the ability for manipulation, and a line that connects the selected atom/object and the tool tip frame.
To deselect an atom, either click on the atom again or press the close button (X) in the tool tip frame.`),J.forEach(e)},m(f,O){i(f,b,O),t(b,j),i(f,N,O),i(f,m,O),t(m,R),i(f,E,O),i(f,H,O),t(H,q),t(q,T),i(f,k,O),i(f,W,O),t(W,G),i(f,w,O),i(f,$,O),t($,U),i(f,g,O),i(f,z,O),t(z,L),i(f,F,O),i(f,V,O),t(V,I),i(f,M,O),i(f,Y,O),t(Y,_),i(f,S,O),i(f,B,O),t(B,p)},p:te,i:te,o:te,d(f){f&&e(b),f&&e(N),f&&e(m),f&&e(E),f&&e(H),f&&e(k),f&&e(W),f&&e(w),f&&e($),f&&e(g),f&&e(z),f&&e(F),f&&e(V),f&&e(M),f&&e(Y),f&&e(S),f&&e(B)}}}const Ea={title:"Interacting with Molecules"};class Ta extends oo{constructor(b){super(),no(this,b,null,_a,lo,{})}}const Ra=Object.freeze(Object.defineProperty({__proto__:null,default:Ta,metadata:Ea},Symbol.toStringTag,{value:"Module"}));function ka(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y,_,S,B;return{c(){b=s("h2"),j=o("Single Bonds"),N=u(),m=s("p"),R=o(`The next step from selecting a single atom is to select two connected atoms.
Successfully highlighting two connected atoms with the click gesture, highlights the two atoms and their bond in a different color.
Additionally, the tool tip frame now displays information about the bond between the atoms.
The `),E=s("strong"),H=o("Modify"),q=o(` button opens a dialog with text input fields, where you’re able to change the parameters of the bond.
For a single bond these parameters are the equilibrium distance of the atoms and the strength of the bond.`),T=u(),k=s("h2"),W=o("Angle Bond"),G=u(),w=s("p"),$=o(`Selecting a third atom that is connected to one of the other two already selected ones, again swaps the information in the tool tip for the information of the corresponding angle bond that is formed by the three selected atoms.
In the same way as for the single bond the equilibrium angle and the strength of the bond are modifiable.`),U=u(),g=s("h2"),z=o("Torsion Bond"),L=u(),F=s("p"),V=o(`Selecting a forth atom that is connected to one of the three already selected ones, gives the option to manipulate the torsion bond term.
Torsion bonds are characterized by their dihedral angle.
Three atoms form a plane in 3D space, therefore the plane of the first three atoms and the plane of the last three atoms are oriented with an angle in between them.
This angle is again modifiable by the equilibrium angle parameter, as well as the corresponding bond strength.
The case of four consecutively connected atoms is also known as a proper torsion.
The improper torsion describes any other combination of four atoms that are connected but not consecutively.`),I=u(),M=s("h2"),Y=o("Selection on Force Field"),_=u(),S=s("p"),B=o(`If your selection has a bond term in the force field, this bond term is highlighted and made available for manipulation.
In case your for example four atom selection is not highlighted as torsion, there is also no torsion term for these four atoms in the force field.`)},l(p){b=r(p,"H2",{});var f=a(b);j=n(f,"Single Bonds"),f.forEach(e),N=d(p),m=r(p,"P",{});var O=a(m);R=n(O,`The next step from selecting a single atom is to select two connected atoms.
Successfully highlighting two connected atoms with the click gesture, highlights the two atoms and their bond in a different color.
Additionally, the tool tip frame now displays information about the bond between the atoms.
The `),E=r(O,"STRONG",{});var v=a(E);H=n(v,"Modify"),v.forEach(e),q=n(O,` button opens a dialog with text input fields, where you’re able to change the parameters of the bond.
For a single bond these parameters are the equilibrium distance of the atoms and the strength of the bond.`),O.forEach(e),T=d(p),k=r(p,"H2",{});var x=a(k);W=n(x,"Angle Bond"),x.forEach(e),G=d(p),w=r(p,"P",{});var X=a(w);$=n(X,`Selecting a third atom that is connected to one of the other two already selected ones, again swaps the information in the tool tip for the information of the corresponding angle bond that is formed by the three selected atoms.
In the same way as for the single bond the equilibrium angle and the strength of the bond are modifiable.`),X.forEach(e),U=d(p),g=r(p,"H2",{});var Z=a(g);z=n(Z,"Torsion Bond"),Z.forEach(e),L=d(p),F=r(p,"P",{});var K=a(F);V=n(K,`Selecting a forth atom that is connected to one of the three already selected ones, gives the option to manipulate the torsion bond term.
Torsion bonds are characterized by their dihedral angle.
Three atoms form a plane in 3D space, therefore the plane of the first three atoms and the plane of the last three atoms are oriented with an angle in between them.
This angle is again modifiable by the equilibrium angle parameter, as well as the corresponding bond strength.
The case of four consecutively connected atoms is also known as a proper torsion.
The improper torsion describes any other combination of four atoms that are connected but not consecutively.`),K.forEach(e),I=d(p),M=r(p,"H2",{});var ne=a(M);Y=n(ne,"Selection on Force Field"),ne.forEach(e),_=d(p),S=r(p,"P",{});var D=a(S);B=n(D,`If your selection has a bond term in the force field, this bond term is highlighted and made available for manipulation.
In case your for example four atom selection is not highlighted as torsion, there is also no torsion term for these four atoms in the force field.`),D.forEach(e)},m(p,f){i(p,b,f),t(b,j),i(p,N,f),i(p,m,f),t(m,R),t(m,E),t(E,H),t(m,q),i(p,T,f),i(p,k,f),t(k,W),i(p,G,f),i(p,w,f),t(w,$),i(p,U,f),i(p,g,f),t(g,z),i(p,L,f),i(p,F,f),t(F,V),i(p,I,f),i(p,M,f),t(M,Y),i(p,_,f),i(p,S,f),t(S,B)},p:te,i:te,o:te,d(p){p&&e(b),p&&e(N),p&&e(m),p&&e(T),p&&e(k),p&&e(G),p&&e(w),p&&e(U),p&&e(g),p&&e(L),p&&e(F),p&&e(I),p&&e(M),p&&e(_),p&&e(S)}}}const Sa={title:"Manipulate Bonds"};class Oa extends oo{constructor(b){super(),no(this,b,null,ka,lo,{})}}const Pa=Object.freeze(Object.defineProperty({__proto__:null,default:Oa,metadata:Sa},Symbol.toStringTag,{value:"Module"}));function Aa(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$='<code class="language-undefined">Assets &gt; scripts &gt; networking &gt; LoginData.cs</code>',U,g,z,L,F,V,I,M,Y='<code class="language-undefined">Assets &gt; Scenes &gt; ServerScene</code>',_,S,B,p,f,O;return{c(){b=s("h2"),j=o("Collaboration"),N=u(),m=s("p"),R=o(`The package chARp also supports collaboration with multiple client devices.
Currently, this restricts the list of devices to the HoloLens2.
However, we’re planning on increasing the pool of supported devices and also allow hybrid environments, such as AR and VR in the same scene.`),E=u(),H=s("h2"),q=o("Hosting"),T=u(),k=s("p"),W=o(`It is recommended to either start the server scene in the Unity editor or run a build of chARp on a normal desktop machine.
Make sure the machine that operates the server is reachable in the network and from the devices.
The connection operates on port 9050 and the LAN discovery on port 9051.
If you want to connect to a machine outside of your network make also sure that port 9050 is forwarded to the machine that acts as server.
In case you cannot operate on these two ports, you have to go to`),G=u(),w=s("pre"),U=u(),g=s("p"),z=o(`and change the port information in this file.
To be able to benefit from these changes, all compiled and deployed versions of chARp have to be recompiled and redeployed.`),L=u(),F=s("p"),V=o("When everything is set up to start the server either start the server scene directly by double clicking"),I=u(),M=s("pre"),_=u(),S=s("p"),B=o("in Unity editor directly, or press the "),p=s("strong"),f=o("Host"),O=o(" button in the login screen."),this.h()},l(v){b=r(v,"H2",{});var x=a(b);j=n(x,"Collaboration"),x.forEach(e),N=d(v),m=r(v,"P",{});var X=a(m);R=n(X,`The package chARp also supports collaboration with multiple client devices.
Currently, this restricts the list of devices to the HoloLens2.
However, we’re planning on increasing the pool of supported devices and also allow hybrid environments, such as AR and VR in the same scene.`),X.forEach(e),E=d(v),H=r(v,"H2",{});var Z=a(H);q=n(Z,"Hosting"),Z.forEach(e),T=d(v),k=r(v,"P",{});var K=a(k);W=n(K,`It is recommended to either start the server scene in the Unity editor or run a build of chARp on a normal desktop machine.
Make sure the machine that operates the server is reachable in the network and from the devices.
The connection operates on port 9050 and the LAN discovery on port 9051.
If you want to connect to a machine outside of your network make also sure that port 9050 is forwarded to the machine that acts as server.
In case you cannot operate on these two ports, you have to go to`),K.forEach(e),G=d(v),w=r(v,"PRE",{class:!0});var ne=a(w);ne.forEach(e),U=d(v),g=r(v,"P",{});var D=a(g);z=n(D,`and change the port information in this file.
To be able to benefit from these changes, all compiled and deployed versions of chARp have to be recompiled and redeployed.`),D.forEach(e),L=d(v),F=r(v,"P",{});var Q=a(F);V=n(Q,"When everything is set up to start the server either start the server scene directly by double clicking"),Q.forEach(e),I=d(v),M=r(v,"PRE",{class:!0});var J=a(M);J.forEach(e),_=d(v),S=r(v,"P",{});var re=a(S);B=n(re,"in Unity editor directly, or press the "),p=r(re,"STRONG",{});var ge=a(p);f=n(ge,"Host"),ge.forEach(e),O=n(re," button in the login screen."),re.forEach(e),this.h()},h(){C(w,"class","language-undefined"),C(M,"class","language-undefined")},m(v,x){i(v,b,x),t(b,j),i(v,N,x),i(v,m,x),t(m,R),i(v,E,x),i(v,H,x),t(H,q),i(v,T,x),i(v,k,x),t(k,W),i(v,G,x),i(v,w,x),w.innerHTML=$,i(v,U,x),i(v,g,x),t(g,z),i(v,L,x),i(v,F,x),t(F,V),i(v,I,x),i(v,M,x),M.innerHTML=Y,i(v,_,x),i(v,S,x),t(S,B),t(S,p),t(p,f),t(S,O)},p:te,i:te,o:te,d(v){v&&e(b),v&&e(N),v&&e(m),v&&e(E),v&&e(H),v&&e(T),v&&e(k),v&&e(G),v&&e(w),v&&e(U),v&&e(g),v&&e(L),v&&e(F),v&&e(I),v&&e(M),v&&e(_),v&&e(S)}}}const Ha={title:"Start Server"};class Na extends oo{constructor(b){super(),no(this,b,null,Aa,lo,{})}}const Ma=Object.freeze(Object.defineProperty({__proto__:null,default:Na,metadata:Ha},Symbol.toStringTag,{value:"Module"}));function xa(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y;return{c(){b=s("h2"),j=o("Place a QR code"),N=u(),m=s("p"),R=o(`In order to have to contents of the scene in a reasonable space in your laboratory, you need to place a QR code on one of the walls.
We recommend a QR code printed on a at least DIN A4 sized paper.
To save you some hassle to find or create your own QR code, you can `),E=s("a"),H=o("download this one here"),q=o(`.
A good position for such a QR code is an open spot at your wall at standing height, that is easy to access or get close to.`),T=u(),k=s("h2"),W=o("Scanning"),G=u(),w=s("p"),$=o(`In case of an in-person scenario where all collaborators are in the same laboratory, each device has to scan the QR code before connecting to the server.
Start chARp and select `),U=s("strong"),g=o("Scan QR"),z=o(` in the login screen.
Look at the QR code on the wall, you will see a white plane over the code and on the corner of the plane is an axis system with a z-axis pointing away from the wall.
Usually, the z-axis wiggles a little bit because of scanning inaccuracy.
Look at the code from different angles and distances and press the button `),L=s("strong"),F=o("Stop Scan"),V=o(" that should follow you around when the wiggle is least noticeable."),I=u(),M=s("p"),Y=o(`In case of a remote collaboration, a similar placement of QR codes is recommended to reflect the scene correctly.
For example, one client puts the code on the wall and the other puts the code on the ground.
Any interaction with the scene results in movements in the wrong direction.
The same is true for a differently oriented QR code.
We recommend to hang the QR code with the three large squares on the left bottom, left top and right top.`),this.h()},l(_){b=r(_,"H2",{});var S=a(b);j=n(S,"Place a QR code"),S.forEach(e),N=d(_),m=r(_,"P",{});var B=a(m);R=n(B,`In order to have to contents of the scene in a reasonable space in your laboratory, you need to place a QR code on one of the walls.
We recommend a QR code printed on a at least DIN A4 sized paper.
To save you some hassle to find or create your own QR code, you can `),E=r(B,"A",{href:!0,target:!0});var p=a(E);H=n(p,"download this one here"),p.forEach(e),q=n(B,`.
A good position for such a QR code is an open spot at your wall at standing height, that is easy to access or get close to.`),B.forEach(e),T=d(_),k=r(_,"H2",{});var f=a(k);W=n(f,"Scanning"),f.forEach(e),G=d(_),w=r(_,"P",{});var O=a(w);$=n(O,`In case of an in-person scenario where all collaborators are in the same laboratory, each device has to scan the QR code before connecting to the server.
Start chARp and select `),U=r(O,"STRONG",{});var v=a(U);g=n(v,"Scan QR"),v.forEach(e),z=n(O,` in the login screen.
Look at the QR code on the wall, you will see a white plane over the code and on the corner of the plane is an axis system with a z-axis pointing away from the wall.
Usually, the z-axis wiggles a little bit because of scanning inaccuracy.
Look at the code from different angles and distances and press the button `),L=r(O,"STRONG",{});var x=a(L);F=n(x,"Stop Scan"),x.forEach(e),V=n(O," that should follow you around when the wiggle is least noticeable."),O.forEach(e),I=d(_),M=r(_,"P",{});var X=a(M);Y=n(X,`In case of a remote collaboration, a similar placement of QR codes is recommended to reflect the scene correctly.
For example, one client puts the code on the wall and the other puts the code on the ground.
Any interaction with the scene results in movements in the wrong direction.
The same is true for a differently oriented QR code.
We recommend to hang the QR code with the three large squares on the left bottom, left top and right top.`),X.forEach(e),this.h()},h(){C(E,"href","/qr_dina4.pdf"),C(E,"target","_blank")},m(_,S){i(_,b,S),t(b,j),i(_,N,S),i(_,m,S),t(m,R),t(m,E),t(E,H),t(m,q),i(_,T,S),i(_,k,S),t(k,W),i(_,G,S),i(_,w,S),t(w,$),t(w,U),t(U,g),t(w,z),t(w,L),t(L,F),t(w,V),i(_,I,S),i(_,M,S),t(M,Y)},p:te,i:te,o:te,d(_){_&&e(b),_&&e(N),_&&e(m),_&&e(T),_&&e(k),_&&e(G),_&&e(w),_&&e(I),_&&e(M)}}}const Ga={title:"Room Anchor"};class Ua extends oo{constructor(b){super(),no(this,b,null,xa,lo,{})}}const La=Object.freeze(Object.defineProperty({__proto__:null,default:Ua,metadata:Ga},Symbol.toStringTag,{value:"Module"}));function Ca(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y,_,S,B;return{c(){b=s("h2"),j=o("Server List"),N=u(),m=s("p"),R=o(`After turning on the server, putting up the QR code and scanning it, you’re finally ready to connect.
In the login screen press the button `),E=s("strong"),H=o("Connect"),q=o(`.
If there is a number in the brackets behind the text `),T=s("strong"),k=o("Connect"),W=o(", the chances are high that your server is already listed."),G=u(),w=s("img"),U=o(`
In the picture you can see an example of the server list.
Here, two servers are detected in the network.
If your server does not show up in the list, there is always the option to add the IP manually.
Click on the **list with a plus** symbol.
Fill out the fields of the dialog and press **Add**.
This puts your custom IP in the list and you can click on it.
Another dialog shows up to double check if you really want to connect to this IP.
By answering this dialog with OK should put you on your server.
`),g=s("p"),z=o(`If the connection to the server is not working, you’ll get another dialog that tells you what is wrong.
Pressing `),L=s("strong"),F=o("OK"),V=o(" on this dialog will put you back to the login screen."),I=u(),M=s("p"),Y=o(`For developing and testing, you don’t always want to put on your HoloLens2.
Therefore, you can connect to your machine (127.0.0.1) by pressing the `),_=s("strong"),S=o("Home"),B=o(` button in the server list.
To be able to run two Unity editor instances of chARp, you need to make a copy of the whole project.`),this.h()},l(p){b=r(p,"H2",{});var f=a(b);j=n(f,"Server List"),f.forEach(e),N=d(p),m=r(p,"P",{});var O=a(m);R=n(O,`After turning on the server, putting up the QR code and scanning it, you’re finally ready to connect.
In the login screen press the button `),E=r(O,"STRONG",{});var v=a(E);H=n(v,"Connect"),v.forEach(e),q=n(O,`.
If there is a number in the brackets behind the text `),T=r(O,"STRONG",{});var x=a(T);k=n(x,"Connect"),x.forEach(e),W=n(O,", the chances are high that your server is already listed."),O.forEach(e),G=d(p),w=r(p,"IMG",{src:!0,alt:!0,class:!0}),U=n(p,`
In the picture you can see an example of the server list.
Here, two servers are detected in the network.
If your server does not show up in the list, there is always the option to add the IP manually.
Click on the **list with a plus** symbol.
Fill out the fields of the dialog and press **Add**.
This puts your custom IP in the list and you can click on it.
Another dialog shows up to double check if you really want to connect to this IP.
By answering this dialog with OK should put you on your server.
`),g=r(p,"P",{});var X=a(g);z=n(X,`If the connection to the server is not working, you’ll get another dialog that tells you what is wrong.
Pressing `),L=r(X,"STRONG",{});var Z=a(L);F=n(Z,"OK"),Z.forEach(e),V=n(X," on this dialog will put you back to the login screen."),X.forEach(e),I=d(p),M=r(p,"P",{});var K=a(M);Y=n(K,`For developing and testing, you don’t always want to put on your HoloLens2.
Therefore, you can connect to your machine (127.0.0.1) by pressing the `),_=r(K,"STRONG",{});var ne=a(_);S=n(ne,"Home"),ne.forEach(e),B=n(K,` button in the server list.
To be able to run two Unity editor instances of chARp, you need to make a copy of the whole project.`),K.forEach(e),this.h()},h(){fl(w.src,$="/images/manual/server_list.png")||C(w,"src",$),C(w,"alt","Debug Log"),C(w,"class","mx-auto max-w-md")},m(p,f){i(p,b,f),t(b,j),i(p,N,f),i(p,m,f),t(m,R),t(m,E),t(E,H),t(m,q),t(m,T),t(T,k),t(m,W),i(p,G,f),i(p,w,f),i(p,U,f),i(p,g,f),t(g,z),t(g,L),t(L,F),t(g,V),i(p,I,f),i(p,M,f),t(M,Y),t(M,_),t(_,S),t(M,B)},p:te,i:te,o:te,d(p){p&&e(b),p&&e(N),p&&e(m),p&&e(G),p&&e(w),p&&e(U),p&&e(g),p&&e(I),p&&e(M)}}}const Ia={title:"Connect"};class Ba extends oo{constructor(b){super(),no(this,b,null,Ca,lo,{})}}const Da=Object.freeze(Object.defineProperty({__proto__:null,default:Ba,metadata:Ia},Symbol.toStringTag,{value:"Module"}));function ja(oe){let b,j,N,m,R,E,H,q,T,k,W,G,w,$,U,g,z,L,F,V,I,M,Y,_,S,B,p,f,O,v,x,X,Z,K,ne;return{c(){b=s("h2"),j=o("Camera"),N=u(),m=s("p"),R=o(`In the server scene you have several interaction possibilities.
In the case of multiple connected clients, the buttons on the bottom right labeled `),E=s("strong"),H=o("next"),q=o(" and "),T=s("strong"),k=o("previous"),W=o(` let you switch your current view between the clients.
The view then shows what the selected client sees.`),G=u(),w=s("h2"),$=o("Loading and Saving"),U=u(),g=s("p"),z=o("In the bottom right, there are two additional buttons "),L=s("strong"),F=o("Load"),V=o(" and "),I=s("strong"),M=o("Save"),Y=o(`.
The `),_=s("strong"),S=o("Load"),B=o(" button opens a file dialog and lets you import all file formats supported by "),p=s("strong"),f=o("OpenBabel"),O=o(`.
The loaded molecule appears in front of the currently selected client.
You can select a molecule in the active scene under the section `),v=s("strong"),x=o("AtomWorld"),X=o(" and press the "),Z=s("strong"),K=o("Save"),ne=o(` button to store the data in a file.
Here, you have the option to pick a supported output format (by adding the corresponding file extension) and the data is automatically converted and saved in this format.`)},l(D){b=r(D,"H2",{});var Q=a(b);j=n(Q,"Camera"),Q.forEach(e),N=d(D),m=r(D,"P",{});var J=a(m);R=n(J,`In the server scene you have several interaction possibilities.
In the case of multiple connected clients, the buttons on the bottom right labeled `),E=r(J,"STRONG",{});var re=a(E);H=n(re,"next"),re.forEach(e),q=n(J," and "),T=r(J,"STRONG",{});var ge=a(T);k=n(ge,"previous"),ge.forEach(e),W=n(J,` let you switch your current view between the clients.
The view then shows what the selected client sees.`),J.forEach(e),G=d(D),w=r(D,"H2",{});var Ye=a(w);$=n(Ye,"Loading and Saving"),Ye.forEach(e),U=d(D),g=r(D,"P",{});var ee=a(g);z=n(ee,"In the bottom right, there are two additional buttons "),L=r(ee,"STRONG",{});var we=a(L);F=n(we,"Load"),we.forEach(e),V=n(ee," and "),I=r(ee,"STRONG",{});var Xe=a(I);M=n(Xe,"Save"),Xe.forEach(e),Y=n(ee,`.
The `),_=r(ee,"STRONG",{});var Me=a(_);S=n(Me,"Load"),Me.forEach(e),B=n(ee," button opens a file dialog and lets you import all file formats supported by "),p=r(ee,"STRONG",{});var ie=a(p);f=n(ie,"OpenBabel"),ie.forEach(e),O=n(ee,`.
The loaded molecule appears in front of the currently selected client.
You can select a molecule in the active scene under the section `),v=r(ee,"STRONG",{});var Je=a(v);x=n(Je,"AtomWorld"),Je.forEach(e),X=n(ee," and press the "),Z=r(ee,"STRONG",{});var _e=a(Z);K=n(_e,"Save"),_e.forEach(e),ne=n(ee,` button to store the data in a file.
Here, you have the option to pick a supported output format (by adding the corresponding file extension) and the data is automatically converted and saved in this format.`),ee.forEach(e)},m(D,Q){i(D,b,Q),t(b,j),i(D,N,Q),i(D,m,Q),t(m,R),t(m,E),t(E,H),t(m,q),t(m,T),t(T,k),t(m,W),i(D,G,Q),i(D,w,Q),t(w,$),i(D,U,Q),i(D,g,Q),t(g,z),t(g,L),t(L,F),t(g,V),t(g,I),t(I,M),t(g,Y),t(g,_),t(_,S),t(g,B),t(g,p),t(p,f),t(g,O),t(g,v),t(v,x),t(g,X),t(g,Z),t(Z,K),t(g,ne)},p:te,i:te,o:te,d(D){D&&e(b),D&&e(N),D&&e(m),D&&e(G),D&&e(w),D&&e(U),D&&e(g)}}}const Wa={title:"Server Controls"};class qa extends oo{constructor(b){super(),no(this,b,null,ja,lo,{})}}const Fa=Object.freeze(Object.defineProperty({__proto__:null,default:qa,metadata:Wa},Symbol.toStringTag,{value:"Module"}));function Qa(oe,b){return oe.prio-b.prio}function Qi(oe){return oe.split("-")[1].split("_").map(R=>R.charAt(0).toUpperCase()+R.slice(1)).join(" ")}function za(){let b=la(Object.assign({"/src/routes/manual/00-getting_started/00-introduction.md":aa,"/src/routes/manual/00-getting_started/01-installation.md":da,"/src/routes/manual/01-first_start/00-login_screen.md":ba,"/src/routes/manual/02-normal_mode/00-menu.md":wa,"/src/routes/manual/02-normal_mode/01-interacting_with_molecules.md":Ra,"/src/routes/manual/02-normal_mode/02-manipulate_bonds.md":Pa,"/src/routes/manual/03-collaboration/00-start_server.md":Ma,"/src/routes/manual/03-collaboration/01-room_anchor.md":La,"/src/routes/manual/03-collaboration/02-connect.md":Da,"/src/routes/manual/03-collaboration/03-server_controls.md":Fa}));const j=[];b.forEach(R=>{const E=R.path.split("/").slice(-2)[0],H=Qi(E),q=E.split("-")[0],T=R.key.replace(".md",""),k="/"+T.split("/").slice(-3)[0]+"/"+T.split("/").slice(-2)[0]+"/"+T.split("/").slice(-1)[0],W=T.split("/").slice(-2)[0]+"/"+T.split("/").slice(-1)[0],G=T.split("/").slice(-1)[0],w="/"+T.split("/").slice(-3)[0]+"/"+T.split("/").slice(-2)[0],$=R.path.split("/").slice(-1)[0].split("-")[0],U=q+$;R.section=E,R.sectionTitle=H,R.absRoute=k,R.route=W,R.pageRoute=G,R.absSectionRoute=w,R.prio=U,j.push(R)}),j.sort(Qa);let N=j.reduce(function(R,E){let H=E.section;return H in R||(R[H]=[]),R[H].push(E),R},{});return Object.keys(N).map(function(R){return{name:R,title:Qi(R),absRoute:"/manual/"+R,pages:N[R]}})}function Va(){try{return{sections:za()}}catch(oe){return console.error(oe),{sections:[]}}}const Ya=Object.freeze(Object.defineProperty({__proto__:null,load:Va},Symbol.toStringTag,{value:"Module"}));export{Ya as _,Va as l};
