import{S as Ft,i as qt,s as zt,k as r,q as o,a as c,l as i,m as a,r as n,h as e,c as f,n as N,b as s,W as t,G as se,a1 as Xt}from"./index.7e84a433.mjs";import{g as Da}from"./globToArray.54c2d47d.mjs";function Wa(he){let p,F,G,g,O,P,H,z;return{c(){p=r("h2"),F=o("What is chARp?"),G=c(),g=r("p"),O=o(`The chemistry Augmented Reality package (chARp) Molecular Builder offers all features a quantum chemistry researcher needs.
Beyond the ability to load and store in all file types `),P=r("a"),H=o("OpenBabel"),z=o(" supports, chARp fully supports a collaborative environment to create and discuss structures, results, and much more with colleagues."),this.h()},l(k){p=i(k,"H2",{});var E=a(p);F=n(E,"What is chARp?"),E.forEach(e),G=f(k),g=i(k,"P",{});var q=a(g);O=n(q,`The chemistry Augmented Reality package (chARp) Molecular Builder offers all features a quantum chemistry researcher needs.
Beyond the ability to load and store in all file types `),P=i(q,"A",{href:!0,rel:!0});var x=a(P);H=n(x,"OpenBabel"),x.forEach(e),z=n(q," supports, chARp fully supports a collaborative environment to create and discuss structures, results, and much more with colleagues."),q.forEach(e),this.h()},h(){N(P,"href","https://github.com/openbabel/openbabel"),N(P,"rel","nofollow")},m(k,E){s(k,p,E),t(p,F),s(k,G,E),s(k,g,E),t(g,O),t(g,P),t(P,H),t(g,z)},p:se,i:se,o:se,d(k){k&&e(p),k&&e(G),k&&e(g)}}}const Fa={title:"Introduction"};class qa extends Ft{constructor(p){super(),qt(this,p,null,Wa,zt,{})}}const za=Object.freeze(Object.defineProperty({__proto__:null,default:qa,metadata:Fa},Symbol.toStringTag,{value:"Module"}));function Qa(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J,y,M,K,v,A,Q,$,W,ie,h,_,ne,le,re,ue,Y,ae,oe,be,b,V,ve,Ee,tt,Oe,Ae,ot,Me,Te,Ue,je,ge,ce,nt,He,Ye,lt,De,st,Et,Le,We,Tt,Ie,Xe,Qt='<code class="language-bash"><span class="token function">git</span> clone <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">1</span> https://github.com/UniStuttgart-VISUS/chARpMolecularBuilder.git</code>',Ge,Re,Je,Rt,ke,rt,Fe,It,it,Se,kt,qe,dt,St,ze,Pt,Ze,Ne,Qe,pt,et,at,mt,xe,ht,Ce,ye,bt,u,j,yt,Be,Ve,Ot,At,Vt,d,C,vt,wo=`<code class="language-undefined">Mixed Reality Toolkit &gt;
Mixed Reality Toolkit Foundations
Mixed Reality Toolkit Extensions
Mixed Reality Toolkit Examples
Mixed Reality Toolkit Standard Assets

Platform Support &gt;
Mixed Reality OpenXR Plugin</code>`,Ht,fe,Jt,gt,Zt,eo,Ct,to,wt,Kt,Nt,Bt,Mt,de,oo,ut,no,lo,jt,Dt,so,_t,ro,xo,Gt,Uo,Lo,ao,Io,ho,_o,Wt,Co,zn,ct,kl,tn,Sl,Pl,Eo,Ol,Al,on,Hl,Nl,nn,Ml,Gl,Qn,Bo,ln,xl,Vn,Ke,Ul,sn,Ll,Il,rn,Cl,Bl,an,jl,Dl,hn,Wl,Fl,un,ql,zl,Kn,To,Pa='<code class="language-undefined">NuGet &gt; Manage NuGet Packages</code>',$n,jo,Ql,Yn,Ro,Oa=`<code class="language-undefined">Microsoft.MixedReality.QR
Microsoft.VCRTForwarders.140</code>`,Xn,Do,Vl,Jn,Wo,Kl,Zn,ko,Aa='<code class="language-undefined">File &gt; Build Settings ...</code>',el,$t,$l,cn,Yl,Xl,fn,Jl,Zl,tl,Fo,es,ol,uo,ts,dn,os,ns,nl,So,Ha='<code class="language-undefined">Assets &gt; Scenes</code>',ll,xt,ls,pn,ss,rs,mn,is,as,bn,hs,us,sl,Po,Na='<code class="language-undefined">Mixed Reality &gt; Toolkit &gt; Utilities &gt; Upgrade MRTK Standard Shader to Universal Render Pipeline</code>',rl,qo,cs,il,Oo,xr,al,zo,fs,hl,pe,ds,yn,ps,ms,vn,bs,ys,gn,vs,gs,wn,ws,_s,_n,Es,Ts,En,Rs,ks,Tn,Ss,Ps,Rn,Os,As,kn,Hs,Ns,Sn,Ms,Gs,ul,Qo,xs,cl,co,Us,Ao,Ls,Is,fl,Ho,Ma='<code class="language-undefined">File &gt; Build Settings ...</code>',dl,me,Cs,Pn,Bs,js,On,Ds,Ws,An,Fs,qs,Hn,zs,Qs,Nn,Vs,Ks,Mn,$s,Ys,Gn,Xs,Js,xn,Zs,er,Un,tr,or,Ln,nr,lr,pl,Vo,sr,ml,fo,rr,In,ir,ar,bl,Ko,No,hr,Mo,ur,cr,yl,$o,fr,vl,Pe,dr,Cn,pr,mr,Bn,br,yr,jn,vr,gr,Dn,wr,_r,Wn,Er,Tr,Fn,Rr,kr,qn,Sr,Pr,gl,Yo,io,Or,Ar,Hr,Go,Nr,Mr,wl,Xo,Gr;return{c(){p=r("h2"),F=o("Disclaimer"),G=c(),g=r("p"),O=o(`The here described installation process is for developers.
Currently, non-dev users have to go through the same installation process.
However, in the future we’re going to offer a binary installation that makes chARp a lot more accessible.`),P=c(),H=r("h2"),z=o("Unity"),k=c(),E=r("p"),q=o(`Since chARp is developed using the game engine Unity, we first need to install it.
Go to the `),x=r("a"),T=o("download page of Unity"),ee=o(` and download Unity Hub on your computer.
Unity Hub is a management tool that will help you download and install different versions of Unity.
Once the download is complete, run the installer and follow the on-screen instructions to install Unity Hub.
Here we need to install the correct version of Unity which is `),U=r("a"),w=o("2021.3.12f1"),Z=o(`.
You can also download the newest version of Unity and update the project, but this is `),L=r("strong"),D=o("not recommended"),X=o(`.
Download and install version `),I=r("a"),B=o("2021.3.12f1"),te=o(` of Unity.
Make sure that you add the modules `),R=r("strong"),S=o("Universal Windows Platform Build"),J=o(" and "),y=r("strong"),M=o("Windows Build Support (IL2CPP)"),K=o(" to be able to deploy chARp on the HoloLens2."),v=c(),A=r("blockquote"),Q=r("p"),$=o("Unity also installs "),W=r("strong"),ie=o("Visual Studio (VS) 2019 Community Edition"),h=o(`  by default.
If you want to develop Unity apps, you’ll need to add the package `),_=r("strong"),ne=o("Game development with Unity"),le=o(`.
To be able to deploy chARp on the HoloLens2 also install the VS module `),re=r("strong"),ue=o("Universal Windows Platform development"),Y=o("."),ae=c(),oe=r("p"),be=o("For an already installed Visual Studio, you have to add the modules mentioned above via the "),b=r("strong"),V=o("Visual Studio Installer"),ve=o(`.
Open the installer and click on `),Ee=r("strong"),tt=o("Modify"),Oe=o(` at your preferred version of Visual Studio.
Enable the modules and `),Ae=r("strong"),ot=o("Modify"),Me=o(" in the bottom right corner to install them."),Te=c(),Ue=r("h2"),je=o("Download"),ge=c(),ce=r("p"),nt=o("To load chARp into Unity you first need to download chARp from our "),He=r("a"),Ye=o("GitHub repository"),lt=o(`.
You click on the green Button `),De=r("strong"),st=o("code"),Et=o(" and select "),Le=r("code"),We=o("Download ZIP"),Tt=o(" or you use git to clone the project to your disk"),Ie=c(),Xe=r("pre"),Ge=c(),Re=r("h2"),Je=o("Prepare the Project"),Rt=c(),ke=r("p"),rt=o("Open Unity Hub and select the "),Fe=r("strong"),It=o("Projects"),it=o(` tab.
Use the dropdown next to the button `),Se=r("strong"),kt=o("Open"),qe=o(" and select "),dt=r("strong"),St=o("Add project from disk"),ze=o(`.
Put in the location to the root folder of your copy of chARp and confirm the selection.
The project should now show in the list of projects.`),Pt=c(),Ze=r("blockquote"),Ne=r("p"),Qe=o("Before we can start the project, we first need to apply some more steps."),pt=c(),et=r("p"),at=o("Since chARp runs on the HoloLens2, we need to add Microsoft’s MRTK tarballs."),mt=c(),xe=r("h3"),ht=o("MRTK"),Ce=c(),ye=r("p"),bt=o(`Because of their size, MRTK tarballs are not checked into the git repository.
Therefore, the used MRTK packages have to be reinstalled.
Download and run the `),u=r("a"),j=o("MixedRealityFeatureTool"),yt=o(" and select chARp’s root folder as "),Be=r("strong"),Ve=o("Project Path"),Ot=o(`.
Click `),At=r("strong"),Vt=o("Discover Features"),d=o(" and activate the following features:"),C=c(),vt=r("pre"),Ht=c(),fe=r("p"),Jt=o(`All these features should also appear with the tag “Version x.x.x currently installed”.
Click `),gt=r("strong"),Zt=o("Get Features"),eo=o(" and confirm that step by clicking "),Ct=r("strong"),to=o("Import"),wt=o("."),Kt=c(),Nt=r("h3"),Bt=o("OpenBabel"),Mt=c(),de=r("p"),oo=o("For server support of OpenBabel please install the "),ut=r("a"),no=o("latest"),lo=o(` version (x64 exe).
Take the `),jt=r("code"),Dt=o("OBDotNet.dll"),so=o(" from the OpenBabel install directory and copy it into "),_t=r("code"),ro=o("Assets/plugins"),xo=o(`.
If your system if having trouble to detect all necessary DLLs, check if the OpenBabel install path is added to your `),Gt=r("code"),Uo=o("PATH"),Lo=o(`.
Under Windows go to “Edit the system environment variables” under “Environment Variables…” add the OpenBabel install path to your “Path” variable in the system variables.
Under Linux add the OpenBabel install path to your `),ao=r("code"),Io=o("PATH"),ho=o(" variable."),_o=c(),Wt=r("h3"),Co=o("NuGet"),zn=c(),ct=r("p"),kl=o("Download the file "),tn=r("code"),Sl=o("NuGetForUnity.*.unitypackage"),Pl=o(" from the latest release of "),Eo=r("a"),Ol=o("NuGet for Unity"),Al=o(` (Note: Look for the release page of that project, no need to clone the source tree).
To be able to install the `),on=r("code"),Hl=o(".unitypackage"),Nl=o(" file of "),nn=r("strong"),Ml=o("NuGetForUnity"),Gl=o(" you have to start the project for the first time."),Qn=c(),Bo=r("blockquote"),ln=r("p"),xl=o("Go to UnityHub and single click the project to start it."),Vn=c(),Ke=r("p"),Ul=o(`This process can take a while.
During the startup Unity will show you an error message, since not all components are installed yet.
For now, you can click `),sn=r("strong"),Ll=o("Ignore"),Il=o(` and continue with the installation process.
Drag-and-drop the `),rn=r("code"),Cl=o(".unitypackage"),Bl=o(" into the "),an=r("strong"),jl=o("Project"),Dl=o(` section of your Unity window to install it.
A pop-up should open and shows you the files that will be added to the project, click `),hn=r("strong"),Wl=o("Import"),Fl=o(`.
This should add a `),un=r("strong"),ql=o("NuGet"),zl=o(` option to the menu bar of Unity.
Click on`),Kn=c(),To=r("pre"),$n=c(),jo=r("p"),Ql=o(`to open the package manager.
In the search bar type in the following packages one by one and install them`),Yn=c(),Ro=r("pre"),Xn=c(),Do=r("h3"),Vl=o("UWP"),Jn=c(),Wo=r("p"),Kl=o("Next, go to the menu bar of Unity and click"),Zn=c(),ko=r("pre"),el=c(),$t=r("p"),$l=o("Select the option "),cn=r("strong"),Yl=o("Universal Windows Platform"),Xl=o(" on the left and click on "),fn=r("strong"),Jl=o("Switch Platform"),Zl=o("."),tl=c(),Fo=r("h2"),es=o("Test Run"),ol=c(),uo=r("p"),ts=o(`Now chARp should be set up for the first test run.
In the `),dn=r("strong"),os=o("Project"),ns=o(" window of Unity go to"),nl=c(),So=r("pre"),ll=c(),xt=r("p"),ls=o("and double click "),pn=r("strong"),ss=o("LoginScreenScene"),rs=o(`.
Press the play button (top center of the Unity window) for running the test.
If the content of the `),mn=r("strong"),is=o("LoginScreenScene"),as=o(" or the "),bn=r("strong"),hs=o("MainScene"),us=o(` occur in purple, you’ll need to upgrade the MRTK Standard Shader to Universal Render Pipeline (URP).
Running`),sl=c(),Po=r("pre"),rl=c(),qo=r("p"),cs=o("should fix the problem, and you will be able to see the GUI when running the program."),il=c(),Oo=r("img"),al=c(),zo=r("h3"),fs=o("Interactions inside Unity editor"),hl=c(),pe=r("p"),ds=o(`Now chARp is running inside Unity editor.
To interact with the menus you can hold `),yn=r("code"),ps=o("shift"),ms=o(" to simulate the left hand and "),vn=r("code"),bs=o("space bar"),ys=o(` to simulate the right hand.
The keys `),gn=r("code"),vs=o("W"),gs=o(", "),wn=r("code"),ws=o("A"),_s=o(", "),_n=r("code"),Es=o("S"),Ts=o(" and "),En=r("code"),Rs=o("D"),ks=o(` can be used to move in the scene.
`),Tn=r("code"),Ss=o("E"),Ps=o(" will move you up and "),Rn=r("code"),Os=o("Q"),As=o(` will move you down.
Holding `),kn=r("code"),Hs=o("right click"),Ns=o(` lets you look around in the scene.
Another important interaction is the `),Sn=r("code"),Ms=o("mousewheel"),Gs=o(`.
Scrolling with the mouse wheel moves the currently activated hand forward and backward.
Using the mouse wheel makes it easy to press buttons in chARp.`),ul=c(),Qo=r("h2"),xs=o("Deploy on Device"),cl=c(),co=r("p"),Us=o("The basic steps are also fund on the official Microsoft page "),Ao=r("a"),Ls=o("here"),Is=o(`.
When the test was successful, you’re now ready to deploy chARp to your HoloLens2.
Again, go to`),fl=c(),Ho=r("pre"),dl=c(),me=r("p"),Cs=o("This time, click on "),Pn=r("strong"),Bs=o("Build"),js=o(`, which opens a folder dialog.
Create a folder named `),On=r("strong"),Ds=o("build"),Ws=o(` inside the chARp project folder and select it using the dialog.
Unity should start the `),An=r("strong"),Fs=o("Building Player"),qs=o(` process.
When finished, got to the freshly created `),Hn=r("strong"),zs=o("build"),Qs=o(" folder and open the "),Nn=r("code"),Vs=o(".sln"),Ks=o(` file that is located there.
This will start up Visual Studio.
In the solution explorer, right click `),Mn=r("strong"),$s=o("chARpMolecularBuilder (Universal Windows)"),Ys=o(" and select "),Gn=r("strong"),Xs=o("Set as Startup Project"),Js=o(`.
Set `),xn=r("strong"),Zs=o("Release"),er=o(" as solution configuration and "),Un=r("strong"),tr=o("ARM64"),or=o(` as solution platforms.
Choose `),Ln=r("strong"),nr=o("Remote Machine"),lr=o(" as device."),pl=c(),Vo=r("h3"),sr=o("IP of your HoloLens2"),ml=c(),fo=r("p"),rr=o(`To be able to deploy chARp via WiFi, you need to connect your machine that runs Unity to the same network (or a reachable network) as the HoloLens2.
Open the WiFi options on the HoloLens2 and click on `),In=r("strong"),ir=o("Adaptor Settings"),ar=o(`.
Scroll down until you can find the devices IP address.`),bl=c(),Ko=r("blockquote"),No=r("p"),hr=o("Make sure that your HoloLens2 is in "),Mo=r("a"),ur=o("Developer Mode"),cr=o("."),yl=c(),$o=r("h3"),fr=o("Back to VS"),vl=c(),Pe=r("p"),dr=o("Right click "),Cn=r("strong"),pr=o("chARpMolecularBuilder (Universal Windows)"),mr=o(" in the solution explorer again and go to "),Bn=r("strong"),br=o("Properties"),yr=o(`.
Make sure you’re on the same configuration and platform as set earlier.
Go to the section `),jn=r("strong"),vr=o("Debugging"),gr=o(" and put your devices IP address into the field "),Dn=r("strong"),wr=o("Machine Name"),_r=o(`.
Confirm these settings by clicking `),Wn=r("strong"),Er=o("OK"),Tr=o(`.
In the main bar, click on `),Fn=r("strong"),Rr=o("Debug"),kr=o(" and run the build + deploy by selecting "),qn=r("strong"),Sr=o("Start Without Debugging"),Pr=o("."),gl=c(),Yo=r("blockquote"),io=r("p"),Or=o("Running this for the first time requires you to pair your HoloLens2 with Visual Studio."),Ar=r("br"),Hr=o(`
Check the `),Go=r("a"),Nr=o("Microsoft documentation"),Mr=o(" for instructions."),wl=c(),Xo=r("p"),Gr=o(`Successfully deploying chARp on the HoloLens2 should start it automatically.
Now you’re ready to use chARp.`),this.h()},l(l){p=i(l,"H2",{});var m=a(p);F=n(m,"Disclaimer"),m.forEach(e),G=f(l),g=i(l,"P",{});var Ur=a(g);O=n(Ur,`The here described installation process is for developers.
Currently, non-dev users have to go through the same installation process.
However, in the future we’re going to offer a binary installation that makes chARp a lot more accessible.`),Ur.forEach(e),P=f(l),H=i(l,"H2",{});var Lr=a(H);z=n(Lr,"Unity"),Lr.forEach(e),k=f(l),E=i(l,"P",{});var ft=a(E);q=n(ft,`Since chARp is developed using the game engine Unity, we first need to install it.
Go to the `),x=i(ft,"A",{href:!0,target:!0});var Ir=a(x);T=n(Ir,"download page of Unity"),Ir.forEach(e),ee=n(ft,` and download Unity Hub on your computer.
Unity Hub is a management tool that will help you download and install different versions of Unity.
Once the download is complete, run the installer and follow the on-screen instructions to install Unity Hub.
Here we need to install the correct version of Unity which is `),U=i(ft,"A",{href:!0,target:!0});var Cr=a(U);w=n(Cr,"2021.3.12f1"),Cr.forEach(e),Z=n(ft,`.
You can also download the newest version of Unity and update the project, but this is `),L=i(ft,"STRONG",{});var Br=a(L);D=n(Br,"not recommended"),Br.forEach(e),X=n(ft,`.
Download and install version `),I=i(ft,"A",{href:!0,target:!0});var jr=a(I);B=n(jr,"2021.3.12f1"),jr.forEach(e),te=n(ft,` of Unity.
Make sure that you add the modules `),R=i(ft,"STRONG",{});var Dr=a(R);S=n(Dr,"Universal Windows Platform Build"),Dr.forEach(e),J=n(ft," and "),y=i(ft,"STRONG",{});var Wr=a(y);M=n(Wr,"Windows Build Support (IL2CPP)"),Wr.forEach(e),K=n(ft," to be able to deploy chARp on the HoloLens2."),ft.forEach(e),v=f(l),A=i(l,"BLOCKQUOTE",{});var Fr=a(A);Q=i(Fr,"P",{});var po=a(Q);$=n(po,"Unity also installs "),W=i(po,"STRONG",{});var qr=a(W);ie=n(qr,"Visual Studio (VS) 2019 Community Edition"),qr.forEach(e),h=n(po,`  by default.
If you want to develop Unity apps, you’ll need to add the package `),_=i(po,"STRONG",{});var zr=a(_);ne=n(zr,"Game development with Unity"),zr.forEach(e),le=n(po,`.
To be able to deploy chARp on the HoloLens2 also install the VS module `),re=i(po,"STRONG",{});var Qr=a(re);ue=n(Qr,"Universal Windows Platform development"),Qr.forEach(e),Y=n(po,"."),po.forEach(e),Fr.forEach(e),ae=f(l),oe=i(l,"P",{});var mo=a(oe);be=n(mo,"For an already installed Visual Studio, you have to add the modules mentioned above via the "),b=i(mo,"STRONG",{});var Vr=a(b);V=n(Vr,"Visual Studio Installer"),Vr.forEach(e),ve=n(mo,`.
Open the installer and click on `),Ee=i(mo,"STRONG",{});var Kr=a(Ee);tt=n(Kr,"Modify"),Kr.forEach(e),Oe=n(mo,` at your preferred version of Visual Studio.
Enable the modules and `),Ae=i(mo,"STRONG",{});var $r=a(Ae);ot=n($r,"Modify"),$r.forEach(e),Me=n(mo," in the bottom right corner to install them."),mo.forEach(e),Te=f(l),Ue=i(l,"H2",{});var Yr=a(Ue);je=n(Yr,"Download"),Yr.forEach(e),ge=f(l),ce=i(l,"P",{});var bo=a(ce);nt=n(bo,"To load chARp into Unity you first need to download chARp from our "),He=i(bo,"A",{href:!0,target:!0});var Xr=a(He);Ye=n(Xr,"GitHub repository"),Xr.forEach(e),lt=n(bo,`.
You click on the green Button `),De=i(bo,"STRONG",{});var Jr=a(De);st=n(Jr,"code"),Jr.forEach(e),Et=n(bo," and select "),Le=i(bo,"CODE",{});var Zr=a(Le);We=n(Zr,"Download ZIP"),Zr.forEach(e),Tt=n(bo," or you use git to clone the project to your disk"),bo.forEach(e),Ie=f(l),Xe=i(l,"PRE",{class:!0});var Ga=a(Xe);Ga.forEach(e),Ge=f(l),Re=i(l,"H2",{});var ei=a(Re);Je=n(ei,"Prepare the Project"),ei.forEach(e),Rt=f(l),ke=i(l,"P",{});var yo=a(ke);rt=n(yo,"Open Unity Hub and select the "),Fe=i(yo,"STRONG",{});var ti=a(Fe);It=n(ti,"Projects"),ti.forEach(e),it=n(yo,` tab.
Use the dropdown next to the button `),Se=i(yo,"STRONG",{});var oi=a(Se);kt=n(oi,"Open"),oi.forEach(e),qe=n(yo," and select "),dt=i(yo,"STRONG",{});var ni=a(dt);St=n(ni,"Add project from disk"),ni.forEach(e),ze=n(yo,`.
Put in the location to the root folder of your copy of chARp and confirm the selection.
The project should now show in the list of projects.`),yo.forEach(e),Pt=f(l),Ze=i(l,"BLOCKQUOTE",{});var li=a(Ze);Ne=i(li,"P",{});var si=a(Ne);Qe=n(si,"Before we can start the project, we first need to apply some more steps."),si.forEach(e),li.forEach(e),pt=f(l),et=i(l,"P",{});var ri=a(et);at=n(ri,"Since chARp runs on the HoloLens2, we need to add Microsoft’s MRTK tarballs."),ri.forEach(e),mt=f(l),xe=i(l,"H3",{});var ii=a(xe);ht=n(ii,"MRTK"),ii.forEach(e),Ce=f(l),ye=i(l,"P",{});var vo=a(ye);bt=n(vo,`Because of their size, MRTK tarballs are not checked into the git repository.
Therefore, the used MRTK packages have to be reinstalled.
Download and run the `),u=i(vo,"A",{href:!0,target:!0});var ai=a(u);j=n(ai,"MixedRealityFeatureTool"),ai.forEach(e),yt=n(vo," and select chARp’s root folder as "),Be=i(vo,"STRONG",{});var hi=a(Be);Ve=n(hi,"Project Path"),hi.forEach(e),Ot=n(vo,`.
Click `),At=i(vo,"STRONG",{});var ui=a(At);Vt=n(ui,"Discover Features"),ui.forEach(e),d=n(vo," and activate the following features:"),vo.forEach(e),C=f(l),vt=i(l,"PRE",{class:!0});var xa=a(vt);xa.forEach(e),Ht=f(l),fe=i(l,"P",{});var Jo=a(fe);Jt=n(Jo,`All these features should also appear with the tag “Version x.x.x currently installed”.
Click `),gt=i(Jo,"STRONG",{});var ci=a(gt);Zt=n(ci,"Get Features"),ci.forEach(e),eo=n(Jo," and confirm that step by clicking "),Ct=i(Jo,"STRONG",{});var fi=a(Ct);to=n(fi,"Import"),fi.forEach(e),wt=n(Jo,"."),Jo.forEach(e),Kt=f(l),Nt=i(l,"H3",{});var di=a(Nt);Bt=n(di,"OpenBabel"),di.forEach(e),Mt=f(l),de=i(l,"P",{});var Ut=a(de);oo=n(Ut,"For server support of OpenBabel please install the "),ut=i(Ut,"A",{href:!0,target:!0});var pi=a(ut);no=n(pi,"latest"),pi.forEach(e),lo=n(Ut,` version (x64 exe).
Take the `),jt=i(Ut,"CODE",{});var mi=a(jt);Dt=n(mi,"OBDotNet.dll"),mi.forEach(e),so=n(Ut," from the OpenBabel install directory and copy it into "),_t=i(Ut,"CODE",{});var bi=a(_t);ro=n(bi,"Assets/plugins"),bi.forEach(e),xo=n(Ut,`.
If your system if having trouble to detect all necessary DLLs, check if the OpenBabel install path is added to your `),Gt=i(Ut,"CODE",{});var yi=a(Gt);Uo=n(yi,"PATH"),yi.forEach(e),Lo=n(Ut,`.
Under Windows go to “Edit the system environment variables” under “Environment Variables…” add the OpenBabel install path to your “Path” variable in the system variables.
Under Linux add the OpenBabel install path to your `),ao=i(Ut,"CODE",{});var vi=a(ao);Io=n(vi,"PATH"),vi.forEach(e),ho=n(Ut," variable."),Ut.forEach(e),_o=f(l),Wt=i(l,"H3",{});var gi=a(Wt);Co=n(gi,"NuGet"),gi.forEach(e),zn=f(l),ct=i(l,"P",{});var Yt=a(ct);kl=n(Yt,"Download the file "),tn=i(Yt,"CODE",{});var wi=a(tn);Sl=n(wi,"NuGetForUnity.*.unitypackage"),wi.forEach(e),Pl=n(Yt," from the latest release of "),Eo=i(Yt,"A",{href:!0,target:!0});var _i=a(Eo);Ol=n(_i,"NuGet for Unity"),_i.forEach(e),Al=n(Yt,` (Note: Look for the release page of that project, no need to clone the source tree).
To be able to install the `),on=i(Yt,"CODE",{});var Ei=a(on);Hl=n(Ei,".unitypackage"),Ei.forEach(e),Nl=n(Yt," file of "),nn=i(Yt,"STRONG",{});var Ti=a(nn);Ml=n(Ti,"NuGetForUnity"),Ti.forEach(e),Gl=n(Yt," you have to start the project for the first time."),Yt.forEach(e),Qn=f(l),Bo=i(l,"BLOCKQUOTE",{});var Ri=a(Bo);ln=i(Ri,"P",{});var ki=a(ln);xl=n(ki,"Go to UnityHub and single click the project to start it."),ki.forEach(e),Ri.forEach(e),Vn=f(l),Ke=i(l,"P",{});var Lt=a(Ke);Ul=n(Lt,`This process can take a while.
During the startup Unity will show you an error message, since not all components are installed yet.
For now, you can click `),sn=i(Lt,"STRONG",{});var Si=a(sn);Ll=n(Si,"Ignore"),Si.forEach(e),Il=n(Lt,` and continue with the installation process.
Drag-and-drop the `),rn=i(Lt,"CODE",{});var Pi=a(rn);Cl=n(Pi,".unitypackage"),Pi.forEach(e),Bl=n(Lt," into the "),an=i(Lt,"STRONG",{});var Oi=a(an);jl=n(Oi,"Project"),Oi.forEach(e),Dl=n(Lt,` section of your Unity window to install it.
A pop-up should open and shows you the files that will be added to the project, click `),hn=i(Lt,"STRONG",{});var Ai=a(hn);Wl=n(Ai,"Import"),Ai.forEach(e),Fl=n(Lt,`.
This should add a `),un=i(Lt,"STRONG",{});var Hi=a(un);ql=n(Hi,"NuGet"),Hi.forEach(e),zl=n(Lt,` option to the menu bar of Unity.
Click on`),Lt.forEach(e),Kn=f(l),To=i(l,"PRE",{class:!0});var Ua=a(To);Ua.forEach(e),$n=f(l),jo=i(l,"P",{});var Ni=a(jo);Ql=n(Ni,`to open the package manager.
In the search bar type in the following packages one by one and install them`),Ni.forEach(e),Yn=f(l),Ro=i(l,"PRE",{class:!0});var La=a(Ro);La.forEach(e),Xn=f(l),Do=i(l,"H3",{});var Mi=a(Do);Vl=n(Mi,"UWP"),Mi.forEach(e),Jn=f(l),Wo=i(l,"P",{});var Gi=a(Wo);Kl=n(Gi,"Next, go to the menu bar of Unity and click"),Gi.forEach(e),Zn=f(l),ko=i(l,"PRE",{class:!0});var Ia=a(ko);Ia.forEach(e),el=f(l),$t=i(l,"P",{});var Zo=a($t);$l=n(Zo,"Select the option "),cn=i(Zo,"STRONG",{});var xi=a(cn);Yl=n(xi,"Universal Windows Platform"),xi.forEach(e),Xl=n(Zo," on the left and click on "),fn=i(Zo,"STRONG",{});var Ui=a(fn);Jl=n(Ui,"Switch Platform"),Ui.forEach(e),Zl=n(Zo,"."),Zo.forEach(e),tl=f(l),Fo=i(l,"H2",{});var Li=a(Fo);es=n(Li,"Test Run"),Li.forEach(e),ol=f(l),uo=i(l,"P",{});var _l=a(uo);ts=n(_l,`Now chARp should be set up for the first test run.
In the `),dn=i(_l,"STRONG",{});var Ii=a(dn);os=n(Ii,"Project"),Ii.forEach(e),ns=n(_l," window of Unity go to"),_l.forEach(e),nl=f(l),So=i(l,"PRE",{class:!0});var Ca=a(So);Ca.forEach(e),ll=f(l),xt=i(l,"P",{});var go=a(xt);ls=n(go,"and double click "),pn=i(go,"STRONG",{});var Ci=a(pn);ss=n(Ci,"LoginScreenScene"),Ci.forEach(e),rs=n(go,`.
Press the play button (top center of the Unity window) for running the test.
If the content of the `),mn=i(go,"STRONG",{});var Bi=a(mn);is=n(Bi,"LoginScreenScene"),Bi.forEach(e),as=n(go," or the "),bn=i(go,"STRONG",{});var ji=a(bn);hs=n(ji,"MainScene"),ji.forEach(e),us=n(go,` occur in purple, you’ll need to upgrade the MRTK Standard Shader to Universal Render Pipeline (URP).
Running`),go.forEach(e),sl=f(l),Po=i(l,"PRE",{class:!0});var Ba=a(Po);Ba.forEach(e),rl=f(l),qo=i(l,"P",{});var Di=a(qo);cs=n(Di,"should fix the problem, and you will be able to see the GUI when running the program."),Di.forEach(e),il=f(l),Oo=i(l,"IMG",{src:!0,class:!0}),al=f(l),zo=i(l,"H3",{});var Wi=a(zo);fs=n(Wi,"Interactions inside Unity editor"),Wi.forEach(e),hl=f(l),pe=i(l,"P",{});var we=a(pe);ds=n(we,`Now chARp is running inside Unity editor.
To interact with the menus you can hold `),yn=i(we,"CODE",{});var Fi=a(yn);ps=n(Fi,"shift"),Fi.forEach(e),ms=n(we," to simulate the left hand and "),vn=i(we,"CODE",{});var qi=a(vn);bs=n(qi,"space bar"),qi.forEach(e),ys=n(we,` to simulate the right hand.
The keys `),gn=i(we,"CODE",{});var zi=a(gn);vs=n(zi,"W"),zi.forEach(e),gs=n(we,", "),wn=i(we,"CODE",{});var Qi=a(wn);ws=n(Qi,"A"),Qi.forEach(e),_s=n(we,", "),_n=i(we,"CODE",{});var Vi=a(_n);Es=n(Vi,"S"),Vi.forEach(e),Ts=n(we," and "),En=i(we,"CODE",{});var Ki=a(En);Rs=n(Ki,"D"),Ki.forEach(e),ks=n(we,` can be used to move in the scene.
`),Tn=i(we,"CODE",{});var $i=a(Tn);Ss=n($i,"E"),$i.forEach(e),Ps=n(we," will move you up and "),Rn=i(we,"CODE",{});var Yi=a(Rn);Os=n(Yi,"Q"),Yi.forEach(e),As=n(we,` will move you down.
Holding `),kn=i(we,"CODE",{});var Xi=a(kn);Hs=n(Xi,"right click"),Xi.forEach(e),Ns=n(we,` lets you look around in the scene.
Another important interaction is the `),Sn=i(we,"CODE",{});var Ji=a(Sn);Ms=n(Ji,"mousewheel"),Ji.forEach(e),Gs=n(we,`.
Scrolling with the mouse wheel moves the currently activated hand forward and backward.
Using the mouse wheel makes it easy to press buttons in chARp.`),we.forEach(e),ul=f(l),Qo=i(l,"H2",{});var Zi=a(Qo);xs=n(Zi,"Deploy on Device"),Zi.forEach(e),cl=f(l),co=i(l,"P",{});var El=a(co);Us=n(El,"The basic steps are also fund on the official Microsoft page "),Ao=i(El,"A",{href:!0,rel:!0});var ea=a(Ao);Ls=n(ea,"here"),ea.forEach(e),Is=n(El,`.
When the test was successful, you’re now ready to deploy chARp to your HoloLens2.
Again, go to`),El.forEach(e),fl=f(l),Ho=i(l,"PRE",{class:!0});var ja=a(Ho);ja.forEach(e),dl=f(l),me=i(l,"P",{});var _e=a(me);Cs=n(_e,"This time, click on "),Pn=i(_e,"STRONG",{});var ta=a(Pn);Bs=n(ta,"Build"),ta.forEach(e),js=n(_e,`, which opens a folder dialog.
Create a folder named `),On=i(_e,"STRONG",{});var oa=a(On);Ds=n(oa,"build"),oa.forEach(e),Ws=n(_e,` inside the chARp project folder and select it using the dialog.
Unity should start the `),An=i(_e,"STRONG",{});var na=a(An);Fs=n(na,"Building Player"),na.forEach(e),qs=n(_e,` process.
When finished, got to the freshly created `),Hn=i(_e,"STRONG",{});var la=a(Hn);zs=n(la,"build"),la.forEach(e),Qs=n(_e," folder and open the "),Nn=i(_e,"CODE",{});var sa=a(Nn);Vs=n(sa,".sln"),sa.forEach(e),Ks=n(_e,` file that is located there.
This will start up Visual Studio.
In the solution explorer, right click `),Mn=i(_e,"STRONG",{});var ra=a(Mn);$s=n(ra,"chARpMolecularBuilder (Universal Windows)"),ra.forEach(e),Ys=n(_e," and select "),Gn=i(_e,"STRONG",{});var ia=a(Gn);Xs=n(ia,"Set as Startup Project"),ia.forEach(e),Js=n(_e,`.
Set `),xn=i(_e,"STRONG",{});var aa=a(xn);Zs=n(aa,"Release"),aa.forEach(e),er=n(_e," as solution configuration and "),Un=i(_e,"STRONG",{});var ha=a(Un);tr=n(ha,"ARM64"),ha.forEach(e),or=n(_e,` as solution platforms.
Choose `),Ln=i(_e,"STRONG",{});var ua=a(Ln);nr=n(ua,"Remote Machine"),ua.forEach(e),lr=n(_e," as device."),_e.forEach(e),pl=f(l),Vo=i(l,"H3",{});var ca=a(Vo);sr=n(ca,"IP of your HoloLens2"),ca.forEach(e),ml=f(l),fo=i(l,"P",{});var Tl=a(fo);rr=n(Tl,`To be able to deploy chARp via WiFi, you need to connect your machine that runs Unity to the same network (or a reachable network) as the HoloLens2.
Open the WiFi options on the HoloLens2 and click on `),In=i(Tl,"STRONG",{});var fa=a(In);ir=n(fa,"Adaptor Settings"),fa.forEach(e),ar=n(Tl,`.
Scroll down until you can find the devices IP address.`),Tl.forEach(e),bl=f(l),Ko=i(l,"BLOCKQUOTE",{});var da=a(Ko);No=i(da,"P",{});var Rl=a(No);hr=n(Rl,"Make sure that your HoloLens2 is in "),Mo=i(Rl,"A",{href:!0,rel:!0});var pa=a(Mo);ur=n(pa,"Developer Mode"),pa.forEach(e),cr=n(Rl,"."),Rl.forEach(e),da.forEach(e),yl=f(l),$o=i(l,"H3",{});var ma=a($o);fr=n(ma,"Back to VS"),ma.forEach(e),vl=f(l),Pe=i(l,"P",{});var $e=a(Pe);dr=n($e,"Right click "),Cn=i($e,"STRONG",{});var ba=a(Cn);pr=n(ba,"chARpMolecularBuilder (Universal Windows)"),ba.forEach(e),mr=n($e," in the solution explorer again and go to "),Bn=i($e,"STRONG",{});var ya=a(Bn);br=n(ya,"Properties"),ya.forEach(e),yr=n($e,`.
Make sure you’re on the same configuration and platform as set earlier.
Go to the section `),jn=i($e,"STRONG",{});var va=a(jn);vr=n(va,"Debugging"),va.forEach(e),gr=n($e," and put your devices IP address into the field "),Dn=i($e,"STRONG",{});var ga=a(Dn);wr=n(ga,"Machine Name"),ga.forEach(e),_r=n($e,`.
Confirm these settings by clicking `),Wn=i($e,"STRONG",{});var wa=a(Wn);Er=n(wa,"OK"),wa.forEach(e),Tr=n($e,`.
In the main bar, click on `),Fn=i($e,"STRONG",{});var _a=a(Fn);Rr=n(_a,"Debug"),_a.forEach(e),kr=n($e," and run the build + deploy by selecting "),qn=i($e,"STRONG",{});var Ea=a(qn);Sr=n(Ea,"Start Without Debugging"),Ea.forEach(e),Pr=n($e,"."),$e.forEach(e),gl=f(l),Yo=i(l,"BLOCKQUOTE",{});var Ta=a(Yo);io=i(Ta,"P",{});var en=a(io);Or=n(en,"Running this for the first time requires you to pair your HoloLens2 with Visual Studio."),Ar=i(en,"BR",{}),Hr=n(en,`
Check the `),Go=i(en,"A",{href:!0,rel:!0});var Ra=a(Go);Nr=n(Ra,"Microsoft documentation"),Ra.forEach(e),Mr=n(en," for instructions."),en.forEach(e),Ta.forEach(e),wl=f(l),Xo=i(l,"P",{});var ka=a(Xo);Gr=n(ka,`Successfully deploying chARp on the HoloLens2 should start it automatically.
Now you’re ready to use chARp.`),ka.forEach(e),this.h()},h(){N(x,"href","https://unity.com/download"),N(x,"target","_blank"),N(U,"href","unityhub://2021.3.12f1/8af3c3e441b1"),N(U,"target","_blank"),N(I,"href","unityhub://2021.3.12f1/8af3c3e441b1"),N(I,"target","_blank"),N(He,"href","https://github.com/UniStuttgart-VISUS/chARpMolecularBuilder"),N(He,"target","_blank"),N(Xe,"class","language-bash"),N(u,"href","https://www.microsoft.com/en-us/download/details.aspx?id=102778"),N(u,"target","_blank"),N(vt,"class","language-undefined"),N(ut,"href","https://github.com/openbabel/openbabel/releases/latest"),N(ut,"target","_blank"),N(Eo,"href","https://github.com/GlitchEnzo/NuGetForUnity/releases/latest"),N(Eo,"target","_blank"),N(To,"class","language-undefined"),N(Ro,"class","language-undefined"),N(ko,"class","language-undefined"),N(So,"class","language-undefined"),N(Po,"class","language-undefined"),Xt(Oo.src,xr="/images/manual/upgrade_shader.png")||N(Oo,"src",xr),N(Oo,"class","mx-auto max-w-md"),N(Ao,"href","https://learn.microsoft.com/en-us/windows/mixed-reality/develop/advanced-concepts/using-visual-studio?tabs=hl2"),N(Ao,"rel","nofollow"),N(Ho,"class","language-undefined"),N(Mo,"href","https://learn.microsoft.com/en-us/windows/mixed-reality/develop/advanced-concepts/using-the-windows-device-portal"),N(Mo,"rel","nofollow"),N(Go,"href","https://learn.microsoft.com/en-us/windows/mixed-reality/develop/advanced-concepts/using-the-windows-device-portal"),N(Go,"rel","nofollow")},m(l,m){s(l,p,m),t(p,F),s(l,G,m),s(l,g,m),t(g,O),s(l,P,m),s(l,H,m),t(H,z),s(l,k,m),s(l,E,m),t(E,q),t(E,x),t(x,T),t(E,ee),t(E,U),t(U,w),t(E,Z),t(E,L),t(L,D),t(E,X),t(E,I),t(I,B),t(E,te),t(E,R),t(R,S),t(E,J),t(E,y),t(y,M),t(E,K),s(l,v,m),s(l,A,m),t(A,Q),t(Q,$),t(Q,W),t(W,ie),t(Q,h),t(Q,_),t(_,ne),t(Q,le),t(Q,re),t(re,ue),t(Q,Y),s(l,ae,m),s(l,oe,m),t(oe,be),t(oe,b),t(b,V),t(oe,ve),t(oe,Ee),t(Ee,tt),t(oe,Oe),t(oe,Ae),t(Ae,ot),t(oe,Me),s(l,Te,m),s(l,Ue,m),t(Ue,je),s(l,ge,m),s(l,ce,m),t(ce,nt),t(ce,He),t(He,Ye),t(ce,lt),t(ce,De),t(De,st),t(ce,Et),t(ce,Le),t(Le,We),t(ce,Tt),s(l,Ie,m),s(l,Xe,m),Xe.innerHTML=Qt,s(l,Ge,m),s(l,Re,m),t(Re,Je),s(l,Rt,m),s(l,ke,m),t(ke,rt),t(ke,Fe),t(Fe,It),t(ke,it),t(ke,Se),t(Se,kt),t(ke,qe),t(ke,dt),t(dt,St),t(ke,ze),s(l,Pt,m),s(l,Ze,m),t(Ze,Ne),t(Ne,Qe),s(l,pt,m),s(l,et,m),t(et,at),s(l,mt,m),s(l,xe,m),t(xe,ht),s(l,Ce,m),s(l,ye,m),t(ye,bt),t(ye,u),t(u,j),t(ye,yt),t(ye,Be),t(Be,Ve),t(ye,Ot),t(ye,At),t(At,Vt),t(ye,d),s(l,C,m),s(l,vt,m),vt.innerHTML=wo,s(l,Ht,m),s(l,fe,m),t(fe,Jt),t(fe,gt),t(gt,Zt),t(fe,eo),t(fe,Ct),t(Ct,to),t(fe,wt),s(l,Kt,m),s(l,Nt,m),t(Nt,Bt),s(l,Mt,m),s(l,de,m),t(de,oo),t(de,ut),t(ut,no),t(de,lo),t(de,jt),t(jt,Dt),t(de,so),t(de,_t),t(_t,ro),t(de,xo),t(de,Gt),t(Gt,Uo),t(de,Lo),t(de,ao),t(ao,Io),t(de,ho),s(l,_o,m),s(l,Wt,m),t(Wt,Co),s(l,zn,m),s(l,ct,m),t(ct,kl),t(ct,tn),t(tn,Sl),t(ct,Pl),t(ct,Eo),t(Eo,Ol),t(ct,Al),t(ct,on),t(on,Hl),t(ct,Nl),t(ct,nn),t(nn,Ml),t(ct,Gl),s(l,Qn,m),s(l,Bo,m),t(Bo,ln),t(ln,xl),s(l,Vn,m),s(l,Ke,m),t(Ke,Ul),t(Ke,sn),t(sn,Ll),t(Ke,Il),t(Ke,rn),t(rn,Cl),t(Ke,Bl),t(Ke,an),t(an,jl),t(Ke,Dl),t(Ke,hn),t(hn,Wl),t(Ke,Fl),t(Ke,un),t(un,ql),t(Ke,zl),s(l,Kn,m),s(l,To,m),To.innerHTML=Pa,s(l,$n,m),s(l,jo,m),t(jo,Ql),s(l,Yn,m),s(l,Ro,m),Ro.innerHTML=Oa,s(l,Xn,m),s(l,Do,m),t(Do,Vl),s(l,Jn,m),s(l,Wo,m),t(Wo,Kl),s(l,Zn,m),s(l,ko,m),ko.innerHTML=Aa,s(l,el,m),s(l,$t,m),t($t,$l),t($t,cn),t(cn,Yl),t($t,Xl),t($t,fn),t(fn,Jl),t($t,Zl),s(l,tl,m),s(l,Fo,m),t(Fo,es),s(l,ol,m),s(l,uo,m),t(uo,ts),t(uo,dn),t(dn,os),t(uo,ns),s(l,nl,m),s(l,So,m),So.innerHTML=Ha,s(l,ll,m),s(l,xt,m),t(xt,ls),t(xt,pn),t(pn,ss),t(xt,rs),t(xt,mn),t(mn,is),t(xt,as),t(xt,bn),t(bn,hs),t(xt,us),s(l,sl,m),s(l,Po,m),Po.innerHTML=Na,s(l,rl,m),s(l,qo,m),t(qo,cs),s(l,il,m),s(l,Oo,m),s(l,al,m),s(l,zo,m),t(zo,fs),s(l,hl,m),s(l,pe,m),t(pe,ds),t(pe,yn),t(yn,ps),t(pe,ms),t(pe,vn),t(vn,bs),t(pe,ys),t(pe,gn),t(gn,vs),t(pe,gs),t(pe,wn),t(wn,ws),t(pe,_s),t(pe,_n),t(_n,Es),t(pe,Ts),t(pe,En),t(En,Rs),t(pe,ks),t(pe,Tn),t(Tn,Ss),t(pe,Ps),t(pe,Rn),t(Rn,Os),t(pe,As),t(pe,kn),t(kn,Hs),t(pe,Ns),t(pe,Sn),t(Sn,Ms),t(pe,Gs),s(l,ul,m),s(l,Qo,m),t(Qo,xs),s(l,cl,m),s(l,co,m),t(co,Us),t(co,Ao),t(Ao,Ls),t(co,Is),s(l,fl,m),s(l,Ho,m),Ho.innerHTML=Ma,s(l,dl,m),s(l,me,m),t(me,Cs),t(me,Pn),t(Pn,Bs),t(me,js),t(me,On),t(On,Ds),t(me,Ws),t(me,An),t(An,Fs),t(me,qs),t(me,Hn),t(Hn,zs),t(me,Qs),t(me,Nn),t(Nn,Vs),t(me,Ks),t(me,Mn),t(Mn,$s),t(me,Ys),t(me,Gn),t(Gn,Xs),t(me,Js),t(me,xn),t(xn,Zs),t(me,er),t(me,Un),t(Un,tr),t(me,or),t(me,Ln),t(Ln,nr),t(me,lr),s(l,pl,m),s(l,Vo,m),t(Vo,sr),s(l,ml,m),s(l,fo,m),t(fo,rr),t(fo,In),t(In,ir),t(fo,ar),s(l,bl,m),s(l,Ko,m),t(Ko,No),t(No,hr),t(No,Mo),t(Mo,ur),t(No,cr),s(l,yl,m),s(l,$o,m),t($o,fr),s(l,vl,m),s(l,Pe,m),t(Pe,dr),t(Pe,Cn),t(Cn,pr),t(Pe,mr),t(Pe,Bn),t(Bn,br),t(Pe,yr),t(Pe,jn),t(jn,vr),t(Pe,gr),t(Pe,Dn),t(Dn,wr),t(Pe,_r),t(Pe,Wn),t(Wn,Er),t(Pe,Tr),t(Pe,Fn),t(Fn,Rr),t(Pe,kr),t(Pe,qn),t(qn,Sr),t(Pe,Pr),s(l,gl,m),s(l,Yo,m),t(Yo,io),t(io,Or),t(io,Ar),t(io,Hr),t(io,Go),t(Go,Nr),t(io,Mr),s(l,wl,m),s(l,Xo,m),t(Xo,Gr)},p:se,i:se,o:se,d(l){l&&e(p),l&&e(G),l&&e(g),l&&e(P),l&&e(H),l&&e(k),l&&e(E),l&&e(v),l&&e(A),l&&e(ae),l&&e(oe),l&&e(Te),l&&e(Ue),l&&e(ge),l&&e(ce),l&&e(Ie),l&&e(Xe),l&&e(Ge),l&&e(Re),l&&e(Rt),l&&e(ke),l&&e(Pt),l&&e(Ze),l&&e(pt),l&&e(et),l&&e(mt),l&&e(xe),l&&e(Ce),l&&e(ye),l&&e(C),l&&e(vt),l&&e(Ht),l&&e(fe),l&&e(Kt),l&&e(Nt),l&&e(Mt),l&&e(de),l&&e(_o),l&&e(Wt),l&&e(zn),l&&e(ct),l&&e(Qn),l&&e(Bo),l&&e(Vn),l&&e(Ke),l&&e(Kn),l&&e(To),l&&e($n),l&&e(jo),l&&e(Yn),l&&e(Ro),l&&e(Xn),l&&e(Do),l&&e(Jn),l&&e(Wo),l&&e(Zn),l&&e(ko),l&&e(el),l&&e($t),l&&e(tl),l&&e(Fo),l&&e(ol),l&&e(uo),l&&e(nl),l&&e(So),l&&e(ll),l&&e(xt),l&&e(sl),l&&e(Po),l&&e(rl),l&&e(qo),l&&e(il),l&&e(Oo),l&&e(al),l&&e(zo),l&&e(hl),l&&e(pe),l&&e(ul),l&&e(Qo),l&&e(cl),l&&e(co),l&&e(fl),l&&e(Ho),l&&e(dl),l&&e(me),l&&e(pl),l&&e(Vo),l&&e(ml),l&&e(fo),l&&e(bl),l&&e(Ko),l&&e(yl),l&&e($o),l&&e(vl),l&&e(Pe),l&&e(gl),l&&e(Yo),l&&e(wl),l&&e(Xo)}}}const Va={title:"Installation"};class Ka extends Ft{constructor(p){super(),qt(this,p,null,Qa,zt,{})}}const $a=Object.freeze(Object.defineProperty({__proto__:null,default:Ka,metadata:Va},Symbol.toStringTag,{value:"Module"}));function Ya(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J,y,M,K,v,A,Q,$,W,ie,h,_,ne,le,re,ue,Y,ae,oe,be,b,V,ve,Ee,tt,Oe,Ae,ot,Me,Te,Ue,je,ge,ce,nt,He,Ye,lt,De,st,Et,Le,We,Tt,Ie,Xe,Qt,Ge,Re,Je,Rt,ke,rt,Fe,It,it,Se,kt,qe,dt,St,ze,Pt,Ze,Ne,Qe,pt,et,at,mt,xe,ht,Ce,ye,bt,u,j,yt,Be,Ve,Ot,At,Vt;return{c(){p=r("h2"),F=o("Pressing Buttons"),G=c(),g=r("p"),O=o(`Pressing a button on the HoloLens2, feels maybe a bit off the first time you’re using it.
The best way is to pretend it’s a real button and try to press it all the way through.
When your finger gets close to the button, you should see some visual feedback.
When the button got pressed successfully you’ll be notified by kind of a clicking sound.`),P=c(),H=r("h2"),z=o("Menus"),k=c(),E=r("p"),q=o("Entering chARp you’re put into a menu environment, where you basically can choose the mode of operation."),x=c(),T=r("img"),U=c(),w=r("p"),Z=o("The "),L=r("strong"),D=o("Login Menu"),X=o(" is designed as a so called "),I=r("strong"),B=o("Near Menu"),te=o(`, which means by default it will follow you around.
To stop that behavior press the `),R=r("strong"),S=o("Follow Me"),J=o(` button.
This lets the menu stay in the same position in the room.
By grabbing the Login Menu on top or the boarders, you can place it somewhere else in the room.
Pressing the `),y=r("strong"),M=o("Follow Me"),K=o(` button again lets the menu follow you around again.
The button `),v=r("strong"),A=o("Quit"),Q=o(" obviously closes chARp."),$=c(),W=r("h4"),ie=o("Normal"),h=c(),_=r("p"),ne=o("Pressing the button "),le=r("strong"),re=o("Normal"),ue=o(` puts you into the main building environment.
For more details on this mode see the section `),Y=r("a"),ae=o("Normal Mode"),oe=o(" of the manual."),be=c(),b=r("h4"),V=o("Connect"),ve=c(),Ee=r("p"),tt=o("The button "),Oe=r("strong"),Ae=o("Connect"),ot=o(` lets you connect to a chARp server that is hosted in your network.
The number in brackets behind the text gives an indication of how many servers are visible at the moment in the network.`),Me=c(),Te=r("h4"),Ue=o("Host"),je=c(),ge=r("p"),ce=r("strong"),nt=o("Host"),He=o(" will start a dedicated server on the device or an instance of chARp on your workstation."),Ye=c(),lt=r("blockquote"),De=r("p"),st=o("It is recommended to start the server via Unity on your workstation and not on the device."),Et=c(),Le=r("p"),We=o(`This is because not all features of the server are supported on the HoloLens2.
Additionally, running a server on the HoloLens2 can only work by starting chARp twice, once as dedicated server and once to connect as a client.`),Tt=c(),Ie=r("h4"),Xe=o("Scan QR"),Qt=c(),Ge=r("p"),Re=o("The button "),Je=r("strong"),Rt=o("Scan QR"),ke=o(" lets you scan room anchors for collaboration in the same room."),rt=c(),Fe=r("h4"),It=o("Debug Log"),it=c(),Se=r("p"),kt=o("Pressing the "),qe=r("strong"),dt=o("Debug Log"),St=o(` button, opens the debug window (see below).
Similar to the functions of the `),ze=r("strong"),Pt=o("Login Menu"),Ze=o(" the debug log has a follow me function and can be place by grabbing the top bar."),Ne=c(),Qe=r("img"),et=c(),at=r("p"),mt=o(`Each entry of the debug log is clickable to get access to the stack trace.
Using a scroll gesture like on a smart phone lets you scroll through the contents of the debug log.
Behind some message you will see a number in brackets.
This number indicates how often this message was written to the log.
If there is a severe problem, the number behind an error message will rise quickly.
Normal debug output is displayed in white text, warnings in orange and error messages are displayed in red color.
Checking the debug log and stack trace of the messages makes analyzing errors on the device significantly easier.`),xe=c(),ht=r("blockquote"),Ce=r("p"),ye=o("If you encounter any unexpected errors, please let us know via the "),bt=r("strong"),u=o("Issue Tracker"),j=o(" in our GitHub repository."),yt=c(),Be=r("p"),Ve=o("Just use the "),Ot=r("strong"),At=o("Go to GitHub"),Vt=o(" button in the navigation bar on top."),this.h()},l(d){p=i(d,"H2",{});var C=a(p);F=n(C,"Pressing Buttons"),C.forEach(e),G=f(d),g=i(d,"P",{});var vt=a(g);O=n(vt,`Pressing a button on the HoloLens2, feels maybe a bit off the first time you’re using it.
The best way is to pretend it’s a real button and try to press it all the way through.
When your finger gets close to the button, you should see some visual feedback.
When the button got pressed successfully you’ll be notified by kind of a clicking sound.`),vt.forEach(e),P=f(d),H=i(d,"H2",{});var wo=a(H);z=n(wo,"Menus"),wo.forEach(e),k=f(d),E=i(d,"P",{});var Ht=a(E);q=n(Ht,"Entering chARp you’re put into a menu environment, where you basically can choose the mode of operation."),Ht.forEach(e),x=f(d),T=i(d,"IMG",{src:!0,alt:!0,class:!0}),U=f(d),w=i(d,"P",{});var fe=a(w);Z=n(fe,"The "),L=i(fe,"STRONG",{});var Jt=a(L);D=n(Jt,"Login Menu"),Jt.forEach(e),X=n(fe," is designed as a so called "),I=i(fe,"STRONG",{});var gt=a(I);B=n(gt,"Near Menu"),gt.forEach(e),te=n(fe,`, which means by default it will follow you around.
To stop that behavior press the `),R=i(fe,"STRONG",{});var Zt=a(R);S=n(Zt,"Follow Me"),Zt.forEach(e),J=n(fe,` button.
This lets the menu stay in the same position in the room.
By grabbing the Login Menu on top or the boarders, you can place it somewhere else in the room.
Pressing the `),y=i(fe,"STRONG",{});var eo=a(y);M=n(eo,"Follow Me"),eo.forEach(e),K=n(fe,` button again lets the menu follow you around again.
The button `),v=i(fe,"STRONG",{});var Ct=a(v);A=n(Ct,"Quit"),Ct.forEach(e),Q=n(fe," obviously closes chARp."),fe.forEach(e),$=f(d),W=i(d,"H4",{});var to=a(W);ie=n(to,"Normal"),to.forEach(e),h=f(d),_=i(d,"P",{});var wt=a(_);ne=n(wt,"Pressing the button "),le=i(wt,"STRONG",{});var Kt=a(le);re=n(Kt,"Normal"),Kt.forEach(e),ue=n(wt,` puts you into the main building environment.
For more details on this mode see the section `),Y=i(wt,"A",{href:!0});var Nt=a(Y);ae=n(Nt,"Normal Mode"),Nt.forEach(e),oe=n(wt," of the manual."),wt.forEach(e),be=f(d),b=i(d,"H4",{});var Bt=a(b);V=n(Bt,"Connect"),Bt.forEach(e),ve=f(d),Ee=i(d,"P",{});var Mt=a(Ee);tt=n(Mt,"The button "),Oe=i(Mt,"STRONG",{});var de=a(Oe);Ae=n(de,"Connect"),de.forEach(e),ot=n(Mt,` lets you connect to a chARp server that is hosted in your network.
The number in brackets behind the text gives an indication of how many servers are visible at the moment in the network.`),Mt.forEach(e),Me=f(d),Te=i(d,"H4",{});var oo=a(Te);Ue=n(oo,"Host"),oo.forEach(e),je=f(d),ge=i(d,"P",{});var ut=a(ge);ce=i(ut,"STRONG",{});var no=a(ce);nt=n(no,"Host"),no.forEach(e),He=n(ut," will start a dedicated server on the device or an instance of chARp on your workstation."),ut.forEach(e),Ye=f(d),lt=i(d,"BLOCKQUOTE",{});var lo=a(lt);De=i(lo,"P",{});var jt=a(De);st=n(jt,"It is recommended to start the server via Unity on your workstation and not on the device."),jt.forEach(e),lo.forEach(e),Et=f(d),Le=i(d,"P",{});var Dt=a(Le);We=n(Dt,`This is because not all features of the server are supported on the HoloLens2.
Additionally, running a server on the HoloLens2 can only work by starting chARp twice, once as dedicated server and once to connect as a client.`),Dt.forEach(e),Tt=f(d),Ie=i(d,"H4",{});var so=a(Ie);Xe=n(so,"Scan QR"),so.forEach(e),Qt=f(d),Ge=i(d,"P",{});var _t=a(Ge);Re=n(_t,"The button "),Je=i(_t,"STRONG",{});var ro=a(Je);Rt=n(ro,"Scan QR"),ro.forEach(e),ke=n(_t," lets you scan room anchors for collaboration in the same room."),_t.forEach(e),rt=f(d),Fe=i(d,"H4",{});var xo=a(Fe);It=n(xo,"Debug Log"),xo.forEach(e),it=f(d),Se=i(d,"P",{});var Gt=a(Se);kt=n(Gt,"Pressing the "),qe=i(Gt,"STRONG",{});var Uo=a(qe);dt=n(Uo,"Debug Log"),Uo.forEach(e),St=n(Gt,` button, opens the debug window (see below).
Similar to the functions of the `),ze=i(Gt,"STRONG",{});var Lo=a(ze);Pt=n(Lo,"Login Menu"),Lo.forEach(e),Ze=n(Gt," the debug log has a follow me function and can be place by grabbing the top bar."),Gt.forEach(e),Ne=f(d),Qe=i(d,"IMG",{src:!0,alt:!0,class:!0}),et=f(d),at=i(d,"P",{});var ao=a(at);mt=n(ao,`Each entry of the debug log is clickable to get access to the stack trace.
Using a scroll gesture like on a smart phone lets you scroll through the contents of the debug log.
Behind some message you will see a number in brackets.
This number indicates how often this message was written to the log.
If there is a severe problem, the number behind an error message will rise quickly.
Normal debug output is displayed in white text, warnings in orange and error messages are displayed in red color.
Checking the debug log and stack trace of the messages makes analyzing errors on the device significantly easier.`),ao.forEach(e),xe=f(d),ht=i(d,"BLOCKQUOTE",{});var Io=a(ht);Ce=i(Io,"P",{});var ho=a(Ce);ye=n(ho,"If you encounter any unexpected errors, please let us know via the "),bt=i(ho,"STRONG",{});var _o=a(bt);u=n(_o,"Issue Tracker"),_o.forEach(e),j=n(ho," in our GitHub repository."),ho.forEach(e),Io.forEach(e),yt=f(d),Be=i(d,"P",{});var Wt=a(Be);Ve=n(Wt,"Just use the "),Ot=i(Wt,"STRONG",{});var Co=a(Ot);At=n(Co,"Go to GitHub"),Co.forEach(e),Vt=n(Wt," button in the navigation bar on top."),Wt.forEach(e),this.h()},h(){Xt(T.src,ee="/images/manual/login_screen.png")||N(T,"src",ee),N(T,"alt","Login Screen Menu"),N(T,"class","mx-auto max-w-md"),N(Y,"href","/manual/02-normal_mode"),Xt(Qe.src,pt="/images/manual/debug_log.png")||N(Qe,"src",pt),N(Qe,"alt","Debug Log"),N(Qe,"class","mx-auto max-w-sm")},m(d,C){s(d,p,C),t(p,F),s(d,G,C),s(d,g,C),t(g,O),s(d,P,C),s(d,H,C),t(H,z),s(d,k,C),s(d,E,C),t(E,q),s(d,x,C),s(d,T,C),s(d,U,C),s(d,w,C),t(w,Z),t(w,L),t(L,D),t(w,X),t(w,I),t(I,B),t(w,te),t(w,R),t(R,S),t(w,J),t(w,y),t(y,M),t(w,K),t(w,v),t(v,A),t(w,Q),s(d,$,C),s(d,W,C),t(W,ie),s(d,h,C),s(d,_,C),t(_,ne),t(_,le),t(le,re),t(_,ue),t(_,Y),t(Y,ae),t(_,oe),s(d,be,C),s(d,b,C),t(b,V),s(d,ve,C),s(d,Ee,C),t(Ee,tt),t(Ee,Oe),t(Oe,Ae),t(Ee,ot),s(d,Me,C),s(d,Te,C),t(Te,Ue),s(d,je,C),s(d,ge,C),t(ge,ce),t(ce,nt),t(ge,He),s(d,Ye,C),s(d,lt,C),t(lt,De),t(De,st),s(d,Et,C),s(d,Le,C),t(Le,We),s(d,Tt,C),s(d,Ie,C),t(Ie,Xe),s(d,Qt,C),s(d,Ge,C),t(Ge,Re),t(Ge,Je),t(Je,Rt),t(Ge,ke),s(d,rt,C),s(d,Fe,C),t(Fe,It),s(d,it,C),s(d,Se,C),t(Se,kt),t(Se,qe),t(qe,dt),t(Se,St),t(Se,ze),t(ze,Pt),t(Se,Ze),s(d,Ne,C),s(d,Qe,C),s(d,et,C),s(d,at,C),t(at,mt),s(d,xe,C),s(d,ht,C),t(ht,Ce),t(Ce,ye),t(Ce,bt),t(bt,u),t(Ce,j),s(d,yt,C),s(d,Be,C),t(Be,Ve),t(Be,Ot),t(Ot,At),t(Be,Vt)},p:se,i:se,o:se,d(d){d&&e(p),d&&e(G),d&&e(g),d&&e(P),d&&e(H),d&&e(k),d&&e(E),d&&e(x),d&&e(T),d&&e(U),d&&e(w),d&&e($),d&&e(W),d&&e(h),d&&e(_),d&&e(be),d&&e(b),d&&e(ve),d&&e(Ee),d&&e(Me),d&&e(Te),d&&e(je),d&&e(ge),d&&e(Ye),d&&e(lt),d&&e(Et),d&&e(Le),d&&e(Tt),d&&e(Ie),d&&e(Qt),d&&e(Ge),d&&e(rt),d&&e(Fe),d&&e(it),d&&e(Se),d&&e(Ne),d&&e(Qe),d&&e(et),d&&e(at),d&&e(xe),d&&e(ht),d&&e(yt),d&&e(Be)}}}const Xa={title:"Login Screen"};class Ja extends Ft{constructor(p){super(),qt(this,p,null,Ya,zt,{})}}const Za=Object.freeze(Object.defineProperty({__proto__:null,default:Ja,metadata:Xa},Symbol.toStringTag,{value:"Module"}));function eh(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J,y,M,K,v,A,Q,$,W,ie,h,_,ne,le,re,ue,Y,ae,oe,be,b,V,ve,Ee,tt,Oe,Ae,ot,Me,Te,Ue,je,ge,ce,nt,He,Ye,lt,De,st,Et,Le,We,Tt,Ie,Xe,Qt,Ge,Re,Je,Rt,ke,rt,Fe,It,it,Se,kt,qe,dt,St,ze,Pt,Ze,Ne,Qe,pt,et,at,mt,xe,ht,Ce,ye,bt;return{c(){p=r("h2"),F=o("Overview"),G=c(),g=r("p"),O=o("The "),P=r("strong"),H=o("Normal Mode"),z=o(` is the standard working environment of chARp.
Here you can build and change molecules, inspect and manipulate structures and, load and save data.
Below the main menu of the normal mode is shown.`),k=c(),E=r("img"),x=c(),T=r("p"),ee=o("Similar to the "),U=r("strong"),w=o("Login Menu"),Z=o(" you can toggle the follow me mode using the "),L=r("strong"),D=o("Pin Button"),X=o(`.
The button `),I=r("strong"),B=o("Exit"),te=o(" brings you back to the login screen."),R=c(),S=r("h3"),J=o("Undo"),y=c(),M=r("p"),K=o(`Does what you would expect.
Pressing the `),v=r("strong"),A=o("Undo"),Q=o(" button once or multiple times will bring the scene back to a state before the last interaction steps."),$=c(),W=r("h3"),ie=o("Clear All Molecules"),h=c(),_=r("p"),ne=o("Triggering the "),le=r("strong"),re=o("Clear All Molecules"),ue=o(` button empties the scene completely.
All atoms and molecules are deleted.`),Y=c(),ae=r("h3"),oe=o("Replace Dummies"),be=c(),b=r("p"),V=o(`Each spawned atom is created with bonded dummy atoms.
These dummy atoms can be switched to Hydrogen atoms with the `),ve=r("strong"),Ee=o("Replace Dummies"),tt=o(" button."),Oe=c(),Ae=r("h3"),ot=o("Create Atom"),Me=c(),Te=r("p"),Ue=o(`As already mentioned, atoms are created with dummies attached.
These dummies are used to create bonds or to be switched out for Hydrogen atoms.`),je=c(),ge=r("blockquote"),ce=r("p"),nt=o("Currently in development: Create any atom you want, not only carbon."),He=c(),Ye=r("p"),lt=o("The number of dummies depends on the hybridization of the atom."),De=c(),st=r("h3"),Et=o("Creation Hybridization"),Le=c(),We=r("p"),Tt=o("When pressing the "),Ie=r("strong"),Xe=o("Create Atom"),Qt=o(` button, the displayed number (here 1) is as the hybridization for the freshly created atom.
The numbers correspond to the following hybridizations:`),Ge=c(),Re=r("ul"),Je=r("li"),Rt=o("1: sp"),ke=c(),rt=r("li"),Fe=o("2: sp2"),It=c(),it=r("li"),Se=o("3: sp3"),kt=c(),qe=r("p"),dt=o("The Hybridization can also be adjusted after creation."),St=c(),ze=r("h3"),Pt=o("Save/Load"),Ze=c(),Ne=r("p"),Qe=o("The "),pt=r("strong"),et=o("Save/Load"),at=o(` button opens another dialog that shows you all the molecule files on your device.
Loading a file adds its contents, which consists of one or multiple molecules, to the scene.
Saving to a file saves the whole content of the current scene.
The files are stored in chARp’s internal molecules/scene format.
For saving or loading to different file formats, you need to connect your device to a dedicated chARp server.
Check the later chapters for more information on how to do that.`),mt=c(),xe=r("h3"),ht=o("Settings"),Ce=c(),ye=r("p"),bt=o("Opens the settings menu."),this.h()},l(u){p=i(u,"H2",{});var j=a(p);F=n(j,"Overview"),j.forEach(e),G=f(u),g=i(u,"P",{});var yt=a(g);O=n(yt,"The "),P=i(yt,"STRONG",{});var Be=a(P);H=n(Be,"Normal Mode"),Be.forEach(e),z=n(yt,` is the standard working environment of chARp.
Here you can build and change molecules, inspect and manipulate structures and, load and save data.
Below the main menu of the normal mode is shown.`),yt.forEach(e),k=f(u),E=i(u,"IMG",{src:!0,alt:!0,class:!0}),x=f(u),T=i(u,"P",{});var Ve=a(T);ee=n(Ve,"Similar to the "),U=i(Ve,"STRONG",{});var Ot=a(U);w=n(Ot,"Login Menu"),Ot.forEach(e),Z=n(Ve," you can toggle the follow me mode using the "),L=i(Ve,"STRONG",{});var At=a(L);D=n(At,"Pin Button"),At.forEach(e),X=n(Ve,`.
The button `),I=i(Ve,"STRONG",{});var Vt=a(I);B=n(Vt,"Exit"),Vt.forEach(e),te=n(Ve," brings you back to the login screen."),Ve.forEach(e),R=f(u),S=i(u,"H3",{});var d=a(S);J=n(d,"Undo"),d.forEach(e),y=f(u),M=i(u,"P",{});var C=a(M);K=n(C,`Does what you would expect.
Pressing the `),v=i(C,"STRONG",{});var vt=a(v);A=n(vt,"Undo"),vt.forEach(e),Q=n(C," button once or multiple times will bring the scene back to a state before the last interaction steps."),C.forEach(e),$=f(u),W=i(u,"H3",{});var wo=a(W);ie=n(wo,"Clear All Molecules"),wo.forEach(e),h=f(u),_=i(u,"P",{});var Ht=a(_);ne=n(Ht,"Triggering the "),le=i(Ht,"STRONG",{});var fe=a(le);re=n(fe,"Clear All Molecules"),fe.forEach(e),ue=n(Ht,` button empties the scene completely.
All atoms and molecules are deleted.`),Ht.forEach(e),Y=f(u),ae=i(u,"H3",{});var Jt=a(ae);oe=n(Jt,"Replace Dummies"),Jt.forEach(e),be=f(u),b=i(u,"P",{});var gt=a(b);V=n(gt,`Each spawned atom is created with bonded dummy atoms.
These dummy atoms can be switched to Hydrogen atoms with the `),ve=i(gt,"STRONG",{});var Zt=a(ve);Ee=n(Zt,"Replace Dummies"),Zt.forEach(e),tt=n(gt," button."),gt.forEach(e),Oe=f(u),Ae=i(u,"H3",{});var eo=a(Ae);ot=n(eo,"Create Atom"),eo.forEach(e),Me=f(u),Te=i(u,"P",{});var Ct=a(Te);Ue=n(Ct,`As already mentioned, atoms are created with dummies attached.
These dummies are used to create bonds or to be switched out for Hydrogen atoms.`),Ct.forEach(e),je=f(u),ge=i(u,"BLOCKQUOTE",{});var to=a(ge);ce=i(to,"P",{});var wt=a(ce);nt=n(wt,"Currently in development: Create any atom you want, not only carbon."),wt.forEach(e),to.forEach(e),He=f(u),Ye=i(u,"P",{});var Kt=a(Ye);lt=n(Kt,"The number of dummies depends on the hybridization of the atom."),Kt.forEach(e),De=f(u),st=i(u,"H3",{});var Nt=a(st);Et=n(Nt,"Creation Hybridization"),Nt.forEach(e),Le=f(u),We=i(u,"P",{});var Bt=a(We);Tt=n(Bt,"When pressing the "),Ie=i(Bt,"STRONG",{});var Mt=a(Ie);Xe=n(Mt,"Create Atom"),Mt.forEach(e),Qt=n(Bt,` button, the displayed number (here 1) is as the hybridization for the freshly created atom.
The numbers correspond to the following hybridizations:`),Bt.forEach(e),Ge=f(u),Re=i(u,"UL",{});var de=a(Re);Je=i(de,"LI",{});var oo=a(Je);Rt=n(oo,"1: sp"),oo.forEach(e),ke=f(de),rt=i(de,"LI",{});var ut=a(rt);Fe=n(ut,"2: sp2"),ut.forEach(e),It=f(de),it=i(de,"LI",{});var no=a(it);Se=n(no,"3: sp3"),no.forEach(e),de.forEach(e),kt=f(u),qe=i(u,"P",{});var lo=a(qe);dt=n(lo,"The Hybridization can also be adjusted after creation."),lo.forEach(e),St=f(u),ze=i(u,"H3",{});var jt=a(ze);Pt=n(jt,"Save/Load"),jt.forEach(e),Ze=f(u),Ne=i(u,"P",{});var Dt=a(Ne);Qe=n(Dt,"The "),pt=i(Dt,"STRONG",{});var so=a(pt);et=n(so,"Save/Load"),so.forEach(e),at=n(Dt,` button opens another dialog that shows you all the molecule files on your device.
Loading a file adds its contents, which consists of one or multiple molecules, to the scene.
Saving to a file saves the whole content of the current scene.
The files are stored in chARp’s internal molecules/scene format.
For saving or loading to different file formats, you need to connect your device to a dedicated chARp server.
Check the later chapters for more information on how to do that.`),Dt.forEach(e),mt=f(u),xe=i(u,"H3",{});var _t=a(xe);ht=n(_t,"Settings"),_t.forEach(e),Ce=f(u),ye=i(u,"P",{});var ro=a(ye);bt=n(ro,"Opens the settings menu."),ro.forEach(e),this.h()},h(){Xt(E.src,q="/images/manual/normal_mode_menu.png")||N(E,"src",q),N(E,"alt","Normal Mode Menu"),N(E,"class","mx-auto max-w-md")},m(u,j){s(u,p,j),t(p,F),s(u,G,j),s(u,g,j),t(g,O),t(g,P),t(P,H),t(g,z),s(u,k,j),s(u,E,j),s(u,x,j),s(u,T,j),t(T,ee),t(T,U),t(U,w),t(T,Z),t(T,L),t(L,D),t(T,X),t(T,I),t(I,B),t(T,te),s(u,R,j),s(u,S,j),t(S,J),s(u,y,j),s(u,M,j),t(M,K),t(M,v),t(v,A),t(M,Q),s(u,$,j),s(u,W,j),t(W,ie),s(u,h,j),s(u,_,j),t(_,ne),t(_,le),t(le,re),t(_,ue),s(u,Y,j),s(u,ae,j),t(ae,oe),s(u,be,j),s(u,b,j),t(b,V),t(b,ve),t(ve,Ee),t(b,tt),s(u,Oe,j),s(u,Ae,j),t(Ae,ot),s(u,Me,j),s(u,Te,j),t(Te,Ue),s(u,je,j),s(u,ge,j),t(ge,ce),t(ce,nt),s(u,He,j),s(u,Ye,j),t(Ye,lt),s(u,De,j),s(u,st,j),t(st,Et),s(u,Le,j),s(u,We,j),t(We,Tt),t(We,Ie),t(Ie,Xe),t(We,Qt),s(u,Ge,j),s(u,Re,j),t(Re,Je),t(Je,Rt),t(Re,ke),t(Re,rt),t(rt,Fe),t(Re,It),t(Re,it),t(it,Se),s(u,kt,j),s(u,qe,j),t(qe,dt),s(u,St,j),s(u,ze,j),t(ze,Pt),s(u,Ze,j),s(u,Ne,j),t(Ne,Qe),t(Ne,pt),t(pt,et),t(Ne,at),s(u,mt,j),s(u,xe,j),t(xe,ht),s(u,Ce,j),s(u,ye,j),t(ye,bt)},p:se,i:se,o:se,d(u){u&&e(p),u&&e(G),u&&e(g),u&&e(k),u&&e(E),u&&e(x),u&&e(T),u&&e(R),u&&e(S),u&&e(y),u&&e(M),u&&e($),u&&e(W),u&&e(h),u&&e(_),u&&e(Y),u&&e(ae),u&&e(be),u&&e(b),u&&e(Oe),u&&e(Ae),u&&e(Me),u&&e(Te),u&&e(je),u&&e(ge),u&&e(He),u&&e(Ye),u&&e(De),u&&e(st),u&&e(Le),u&&e(We),u&&e(Ge),u&&e(Re),u&&e(kt),u&&e(qe),u&&e(St),u&&e(ze),u&&e(Ze),u&&e(Ne),u&&e(mt),u&&e(xe),u&&e(Ce),u&&e(ye)}}}const th={title:"Menu"};class oh extends Ft{constructor(p){super(),qt(this,p,null,eh,zt,{})}}const nh=Object.freeze(Object.defineProperty({__proto__:null,default:oh,metadata:th},Symbol.toStringTag,{value:"Module"}));function lh(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J,y,M,K,v,A,Q,$,W,ie,h,_,ne,le,re,ue,Y,ae,oe,be;return{c(){p=r("img"),G=c(),g=r("h3"),O=o("Toggle Mesh"),P=c(),H=r("p"),z=o("This button turns the rendering of the spatial awareness of "),k=r("a"),E=o("OpenXR"),q=o(` on and off.
The real world surroundings are detected by your device in a (usually) 2.5 second interval.
Toggling the button does not turn on/off the detection of your surroundings, just the rendered wireframe overlay.`),x=c(),T=r("h3"),ee=o("Toggle Log"),U=c(),w=r("p"),Z=o("The "),L=r("strong"),D=o("Toggle Log"),X=o(` button shows and hides the debug log.
Note: changing scenes does not clear the debug log for easier error detection.`),I=c(),B=r("h3"),te=o("Toggle Force Field"),R=c(),S=r("p"),J=o(`chARp calculates forces in the background to empirically simulate a semi-realistic molecule behavior.
The forces are integrated using a simple `),y=r("a"),M=o("Euler integration"),K=o(`.
The force field is developed to be responsive, lightweight, and makes it easy to handle objects in the chARp Molecular Builder environment.
Toggling the force field off, stops any calculations in the background and lets every part of the molecule move unhindered (without any force feedback).
This mode comes in handy, when creating a bond within a molecule, but the force field makes it difficult to bring these two dummies together.`),v=c(),A=r("h3"),Q=o("Hand Toggles"),$=c(),W=r("p"),ie=o(`The three buttons on the bottom row change the hand visuals.
You can go have your hand rendered as a mesh, joint visuals or no rendering of the hand tracking.`),h=c(),_=r("h3"),ne=o("Bond Stiffness"),le=c(),re=r("p"),ue=o(`The bond stiffness parameter changes the number of force field iterations and therefore the felt stiffness of the molecule.
The number of iterations changes how fast the molecule will go into it’s minimal state.
A lower number makes the molecules feel rubbery, higher numbers will keep the structure intact.`),Y=c(),ae=r("blockquote"),oe=r("p"),be=o(`Note: A higher number of iterations means more computational power goes into the force field calculation/iteration.
If you experience performance issues, please turn this parameter to 0.
This usually happens for scenes with large molecules.`),this.h()},l(b){p=i(b,"IMG",{src:!0,alt:!0,class:!0}),G=f(b),g=i(b,"H3",{});var V=a(g);O=n(V,"Toggle Mesh"),V.forEach(e),P=f(b),H=i(b,"P",{});var ve=a(H);z=n(ve,"This button turns the rendering of the spatial awareness of "),k=i(ve,"A",{href:!0,rel:!0});var Ee=a(k);E=n(Ee,"OpenXR"),Ee.forEach(e),q=n(ve,` on and off.
The real world surroundings are detected by your device in a (usually) 2.5 second interval.
Toggling the button does not turn on/off the detection of your surroundings, just the rendered wireframe overlay.`),ve.forEach(e),x=f(b),T=i(b,"H3",{});var tt=a(T);ee=n(tt,"Toggle Log"),tt.forEach(e),U=f(b),w=i(b,"P",{});var Oe=a(w);Z=n(Oe,"The "),L=i(Oe,"STRONG",{});var Ae=a(L);D=n(Ae,"Toggle Log"),Ae.forEach(e),X=n(Oe,` button shows and hides the debug log.
Note: changing scenes does not clear the debug log for easier error detection.`),Oe.forEach(e),I=f(b),B=i(b,"H3",{});var ot=a(B);te=n(ot,"Toggle Force Field"),ot.forEach(e),R=f(b),S=i(b,"P",{});var Me=a(S);J=n(Me,`chARp calculates forces in the background to empirically simulate a semi-realistic molecule behavior.
The forces are integrated using a simple `),y=i(Me,"A",{href:!0,rel:!0});var Te=a(y);M=n(Te,"Euler integration"),Te.forEach(e),K=n(Me,`.
The force field is developed to be responsive, lightweight, and makes it easy to handle objects in the chARp Molecular Builder environment.
Toggling the force field off, stops any calculations in the background and lets every part of the molecule move unhindered (without any force feedback).
This mode comes in handy, when creating a bond within a molecule, but the force field makes it difficult to bring these two dummies together.`),Me.forEach(e),v=f(b),A=i(b,"H3",{});var Ue=a(A);Q=n(Ue,"Hand Toggles"),Ue.forEach(e),$=f(b),W=i(b,"P",{});var je=a(W);ie=n(je,`The three buttons on the bottom row change the hand visuals.
You can go have your hand rendered as a mesh, joint visuals or no rendering of the hand tracking.`),je.forEach(e),h=f(b),_=i(b,"H3",{});var ge=a(_);ne=n(ge,"Bond Stiffness"),ge.forEach(e),le=f(b),re=i(b,"P",{});var ce=a(re);ue=n(ce,`The bond stiffness parameter changes the number of force field iterations and therefore the felt stiffness of the molecule.
The number of iterations changes how fast the molecule will go into it’s minimal state.
A lower number makes the molecules feel rubbery, higher numbers will keep the structure intact.`),ce.forEach(e),Y=f(b),ae=i(b,"BLOCKQUOTE",{});var nt=a(ae);oe=i(nt,"P",{});var He=a(oe);be=n(He,`Note: A higher number of iterations means more computational power goes into the force field calculation/iteration.
If you experience performance issues, please turn this parameter to 0.
This usually happens for scenes with large molecules.`),He.forEach(e),nt.forEach(e),this.h()},h(){Xt(p.src,F="/images/manual/settings.png")||N(p,"src",F),N(p,"alt","Normal Mode Menu"),N(p,"class","mx-auto max-w-md"),N(k,"href","https://www.khronos.org/OpenXR/"),N(k,"rel","nofollow"),N(y,"href","https://en.wikipedia.org/wiki/Euler_method"),N(y,"rel","nofollow")},m(b,V){s(b,p,V),s(b,G,V),s(b,g,V),t(g,O),s(b,P,V),s(b,H,V),t(H,z),t(H,k),t(k,E),t(H,q),s(b,x,V),s(b,T,V),t(T,ee),s(b,U,V),s(b,w,V),t(w,Z),t(w,L),t(L,D),t(w,X),s(b,I,V),s(b,B,V),t(B,te),s(b,R,V),s(b,S,V),t(S,J),t(S,y),t(y,M),t(S,K),s(b,v,V),s(b,A,V),t(A,Q),s(b,$,V),s(b,W,V),t(W,ie),s(b,h,V),s(b,_,V),t(_,ne),s(b,le,V),s(b,re,V),t(re,ue),s(b,Y,V),s(b,ae,V),t(ae,oe),t(oe,be)},p:se,i:se,o:se,d(b){b&&e(p),b&&e(G),b&&e(g),b&&e(P),b&&e(H),b&&e(x),b&&e(T),b&&e(U),b&&e(w),b&&e(I),b&&e(B),b&&e(R),b&&e(S),b&&e(v),b&&e(A),b&&e($),b&&e(W),b&&e(h),b&&e(_),b&&e(le),b&&e(re),b&&e(Y),b&&e(ae)}}}const sh={title:"Settings"};class rh extends Ft{constructor(p){super(),qt(this,p,null,lh,zt,{})}}const ih=Object.freeze(Object.defineProperty({__proto__:null,default:rh,metadata:sh},Symbol.toStringTag,{value:"Module"}));function ah(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J,y,M,K,v,A,Q,$,W,ie;return{c(){p=r("h2"),F=o("Moving Atoms"),G=c(),g=r("p"),O=o(`There are two basic ways of interaction with the molecule and atom data in the scene.
The fist and probably most intuitive way is to grab an atom with two fingers (the index finger and the thumb) and move it as if you’re holding it with your hand.
Here you can completely close the gap between the fingers or leave it a little open (up to 10 mm).
With activated force field, the rest of the molecule follows the dragged atom.
The currently grabbed atom is highlighted by a blue halo around it.
While interacting with atoms, you can use both hands to grab two different atoms and, for example, bring them together.`),P=c(),H=r("img"),k=c(),E=r("h2"),q=o("Moving the whole molecule"),x=c(),T=r("p"),ee=o(`When moving your hand close to the molecule, the edges of an enclosing bounding box are showing.
The corners of this bounding box are a bit larger, what emphasizes their ability to be interacted with.
Grabbing the corner again with two fingers (index and thumb) shows the whole box around the molecule and changes its color to blue;
While holding the corner, you can move the whole atom without inducing any forces.
Additionally, the rotation of the hand can be utilized for easy positioning of the molecule.`),U=c(),w=r("img"),L=c(),D=r("h2"),X=o("Create Bonds"),I=c(),B=r("p"),te=o(`Every atom is created with dummy atoms corresponding to their current hybridization.
Using the interaction methods explained above, the dummy atoms of two different molecules can be overlapped.
That should color the two dummies blue.
When the currently grabbed molecule/atom is released while blue, a bond is created.
Creating bonds also works within a single molecule.`),R=c(),S=r("img"),y=c(),M=r("h2"),K=o("Selection"),v=c(),A=r("p"),Q=o(`You can select a single or multiple atoms.
For this, you grab the atom just for a brief moment.
The current threshold for the interaction is set to below 200ms, which should give a similar behavior like a mouse click.
The selection highlights the atom and spawns a tool tip.
The tool tip consists of a small frame that shows information and provides the ability for manipulation, and a line that connects the selected atom/object and the tool tip frame.
To deselect an atom, either click on the atom again or press the close button (X) in the tool tip frame.`),$=c(),W=r("img"),this.h()},l(h){p=i(h,"H2",{});var _=a(p);F=n(_,"Moving Atoms"),_.forEach(e),G=f(h),g=i(h,"P",{});var ne=a(g);O=n(ne,`There are two basic ways of interaction with the molecule and atom data in the scene.
The fist and probably most intuitive way is to grab an atom with two fingers (the index finger and the thumb) and move it as if you’re holding it with your hand.
Here you can completely close the gap between the fingers or leave it a little open (up to 10 mm).
With activated force field, the rest of the molecule follows the dragged atom.
The currently grabbed atom is highlighted by a blue halo around it.
While interacting with atoms, you can use both hands to grab two different atoms and, for example, bring them together.`),ne.forEach(e),P=f(h),H=i(h,"IMG",{src:!0,class:!0}),k=f(h),E=i(h,"H2",{});var le=a(E);q=n(le,"Moving the whole molecule"),le.forEach(e),x=f(h),T=i(h,"P",{});var re=a(T);ee=n(re,`When moving your hand close to the molecule, the edges of an enclosing bounding box are showing.
The corners of this bounding box are a bit larger, what emphasizes their ability to be interacted with.
Grabbing the corner again with two fingers (index and thumb) shows the whole box around the molecule and changes its color to blue;
While holding the corner, you can move the whole atom without inducing any forces.
Additionally, the rotation of the hand can be utilized for easy positioning of the molecule.`),re.forEach(e),U=f(h),w=i(h,"IMG",{src:!0,class:!0}),L=f(h),D=i(h,"H2",{});var ue=a(D);X=n(ue,"Create Bonds"),ue.forEach(e),I=f(h),B=i(h,"P",{});var Y=a(B);te=n(Y,`Every atom is created with dummy atoms corresponding to their current hybridization.
Using the interaction methods explained above, the dummy atoms of two different molecules can be overlapped.
That should color the two dummies blue.
When the currently grabbed molecule/atom is released while blue, a bond is created.
Creating bonds also works within a single molecule.`),Y.forEach(e),R=f(h),S=i(h,"IMG",{src:!0,class:!0}),y=f(h),M=i(h,"H2",{});var ae=a(M);K=n(ae,"Selection"),ae.forEach(e),v=f(h),A=i(h,"P",{});var oe=a(A);Q=n(oe,`You can select a single or multiple atoms.
For this, you grab the atom just for a brief moment.
The current threshold for the interaction is set to below 200ms, which should give a similar behavior like a mouse click.
The selection highlights the atom and spawns a tool tip.
The tool tip consists of a small frame that shows information and provides the ability for manipulation, and a line that connects the selected atom/object and the tool tip frame.
To deselect an atom, either click on the atom again or press the close button (X) in the tool tip frame.`),oe.forEach(e),$=f(h),W=i(h,"IMG",{src:!0,class:!0}),this.h()},h(){Xt(H.src,z="/images/manual/atom_interaction.png")||N(H,"src",z),N(H,"class","mx-auto max-w-md"),Xt(w.src,Z="/images/manual/box_interaction.png")||N(w,"src",Z),N(w,"class","mx-auto max-w-md"),Xt(S.src,J="/images/manual/merge.gif")||N(S,"src",J),N(S,"class","mx-auto max-w-md"),Xt(W.src,ie="/images/manual/select.gif")||N(W,"src",ie),N(W,"class","mx-auto max-w-md")},m(h,_){s(h,p,_),t(p,F),s(h,G,_),s(h,g,_),t(g,O),s(h,P,_),s(h,H,_),s(h,k,_),s(h,E,_),t(E,q),s(h,x,_),s(h,T,_),t(T,ee),s(h,U,_),s(h,w,_),s(h,L,_),s(h,D,_),t(D,X),s(h,I,_),s(h,B,_),t(B,te),s(h,R,_),s(h,S,_),s(h,y,_),s(h,M,_),t(M,K),s(h,v,_),s(h,A,_),t(A,Q),s(h,$,_),s(h,W,_)},p:se,i:se,o:se,d(h){h&&e(p),h&&e(G),h&&e(g),h&&e(P),h&&e(H),h&&e(k),h&&e(E),h&&e(x),h&&e(T),h&&e(U),h&&e(w),h&&e(L),h&&e(D),h&&e(I),h&&e(B),h&&e(R),h&&e(S),h&&e(y),h&&e(M),h&&e(v),h&&e(A),h&&e($),h&&e(W)}}}const hh={title:"Interacting with Molecules"};class uh extends Ft{constructor(p){super(),qt(this,p,null,ah,zt,{})}}const ch=Object.freeze(Object.defineProperty({__proto__:null,default:uh,metadata:hh},Symbol.toStringTag,{value:"Module"}));function fh(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J;return{c(){p=r("h2"),F=o("Single Bonds"),G=c(),g=r("p"),O=o(`The next step from selecting a single atom is to select two connected atoms.
Successfully highlighting two connected atoms with the click gesture, highlights the two atoms and their bond in a different color.
Additionally, the tool tip frame now displays information about the bond between the atoms.
The `),P=r("strong"),H=o("Modify"),z=o(` button opens a dialog with text input fields, where you’re able to change the parameters of the bond.
For a single bond these parameters are the equilibrium distance of the atoms and the strength of the bond.`),k=c(),E=r("h2"),q=o("Angle Bond"),x=c(),T=r("p"),ee=o(`Selecting a third atom that is connected to one of the other two already selected ones, again swaps the information in the tool tip for the information of the corresponding angle bond that is formed by the three selected atoms.
In the same way as for the single bond the equilibrium angle and the strength of the bond are modifiable.`),U=c(),w=r("h2"),Z=o("Torsion Bond"),L=c(),D=r("p"),X=o(`Selecting a forth atom that is connected to one of the three already selected ones, gives the option to manipulate the torsion bond term.
Torsion bonds are characterized by their dihedral angle.
Three atoms form a plane in 3D space, therefore the plane of the first three atoms and the plane of the last three atoms are oriented with an angle in between them.
This angle is again modifiable by the equilibrium angle parameter, as well as the corresponding bond strength.
The case of four consecutively connected atoms is also known as a proper torsion.
The improper torsion describes any other combination of four atoms that are connected but not consecutively.`),I=c(),B=r("h2"),te=o("Selection on Force Field"),R=c(),S=r("p"),J=o(`If your selection has a bond term in the force field, this bond term is highlighted and made available for manipulation.
In case your for example four atom selection is not highlighted as torsion, there is also no torsion term for these four atoms in the force field.`)},l(y){p=i(y,"H2",{});var M=a(p);F=n(M,"Single Bonds"),M.forEach(e),G=f(y),g=i(y,"P",{});var K=a(g);O=n(K,`The next step from selecting a single atom is to select two connected atoms.
Successfully highlighting two connected atoms with the click gesture, highlights the two atoms and their bond in a different color.
Additionally, the tool tip frame now displays information about the bond between the atoms.
The `),P=i(K,"STRONG",{});var v=a(P);H=n(v,"Modify"),v.forEach(e),z=n(K,` button opens a dialog with text input fields, where you’re able to change the parameters of the bond.
For a single bond these parameters are the equilibrium distance of the atoms and the strength of the bond.`),K.forEach(e),k=f(y),E=i(y,"H2",{});var A=a(E);q=n(A,"Angle Bond"),A.forEach(e),x=f(y),T=i(y,"P",{});var Q=a(T);ee=n(Q,`Selecting a third atom that is connected to one of the other two already selected ones, again swaps the information in the tool tip for the information of the corresponding angle bond that is formed by the three selected atoms.
In the same way as for the single bond the equilibrium angle and the strength of the bond are modifiable.`),Q.forEach(e),U=f(y),w=i(y,"H2",{});var $=a(w);Z=n($,"Torsion Bond"),$.forEach(e),L=f(y),D=i(y,"P",{});var W=a(D);X=n(W,`Selecting a forth atom that is connected to one of the three already selected ones, gives the option to manipulate the torsion bond term.
Torsion bonds are characterized by their dihedral angle.
Three atoms form a plane in 3D space, therefore the plane of the first three atoms and the plane of the last three atoms are oriented with an angle in between them.
This angle is again modifiable by the equilibrium angle parameter, as well as the corresponding bond strength.
The case of four consecutively connected atoms is also known as a proper torsion.
The improper torsion describes any other combination of four atoms that are connected but not consecutively.`),W.forEach(e),I=f(y),B=i(y,"H2",{});var ie=a(B);te=n(ie,"Selection on Force Field"),ie.forEach(e),R=f(y),S=i(y,"P",{});var h=a(S);J=n(h,`If your selection has a bond term in the force field, this bond term is highlighted and made available for manipulation.
In case your for example four atom selection is not highlighted as torsion, there is also no torsion term for these four atoms in the force field.`),h.forEach(e)},m(y,M){s(y,p,M),t(p,F),s(y,G,M),s(y,g,M),t(g,O),t(g,P),t(P,H),t(g,z),s(y,k,M),s(y,E,M),t(E,q),s(y,x,M),s(y,T,M),t(T,ee),s(y,U,M),s(y,w,M),t(w,Z),s(y,L,M),s(y,D,M),t(D,X),s(y,I,M),s(y,B,M),t(B,te),s(y,R,M),s(y,S,M),t(S,J)},p:se,i:se,o:se,d(y){y&&e(p),y&&e(G),y&&e(g),y&&e(k),y&&e(E),y&&e(x),y&&e(T),y&&e(U),y&&e(w),y&&e(L),y&&e(D),y&&e(I),y&&e(B),y&&e(R),y&&e(S)}}}const dh={title:"Manipulate Bonds"};class ph extends Ft{constructor(p){super(),qt(this,p,null,fh,zt,{})}}const mh=Object.freeze(Object.defineProperty({__proto__:null,default:ph,metadata:dh},Symbol.toStringTag,{value:"Module"}));function bh(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee='<code class="language-undefined">Assets &gt; scripts &gt; networking &gt; LoginData.cs</code>',U,w,Z,L,D,X,I,B,te='<code class="language-undefined">Assets &gt; Scenes &gt; ServerScene</code>',R,S,J,y,M,K;return{c(){p=r("h2"),F=o("Collaboration"),G=c(),g=r("p"),O=o(`The package chARp also supports collaboration with multiple client devices.
Currently, this restricts the list of devices to the HoloLens2.
However, we’re planning on increasing the pool of supported devices and also allow hybrid environments, such as AR and VR in the same scene.`),P=c(),H=r("h2"),z=o("Hosting"),k=c(),E=r("p"),q=o(`It is recommended to either start the server scene in the Unity editor or run a build of chARp on a normal desktop machine.
Make sure the machine that operates the server is reachable in the network and from the devices.
The connection operates on port 9050 and the LAN discovery on port 9051.
If you want to connect to a machine outside of your network make also sure that port 9050 is forwarded to the machine that acts as server.
In case you cannot operate on these two ports, you have to go to`),x=c(),T=r("pre"),U=c(),w=r("p"),Z=o(`and change the port information in this file.
To be able to benefit from these changes, all compiled and deployed versions of chARp have to be recompiled and redeployed.`),L=c(),D=r("p"),X=o("When everything is set up to start the server either start the server scene directly by double clicking"),I=c(),B=r("pre"),R=c(),S=r("p"),J=o("in Unity editor directly, or press the "),y=r("strong"),M=o("Host"),K=o(" button in the login screen."),this.h()},l(v){p=i(v,"H2",{});var A=a(p);F=n(A,"Collaboration"),A.forEach(e),G=f(v),g=i(v,"P",{});var Q=a(g);O=n(Q,`The package chARp also supports collaboration with multiple client devices.
Currently, this restricts the list of devices to the HoloLens2.
However, we’re planning on increasing the pool of supported devices and also allow hybrid environments, such as AR and VR in the same scene.`),Q.forEach(e),P=f(v),H=i(v,"H2",{});var $=a(H);z=n($,"Hosting"),$.forEach(e),k=f(v),E=i(v,"P",{});var W=a(E);q=n(W,`It is recommended to either start the server scene in the Unity editor or run a build of chARp on a normal desktop machine.
Make sure the machine that operates the server is reachable in the network and from the devices.
The connection operates on port 9050 and the LAN discovery on port 9051.
If you want to connect to a machine outside of your network make also sure that port 9050 is forwarded to the machine that acts as server.
In case you cannot operate on these two ports, you have to go to`),W.forEach(e),x=f(v),T=i(v,"PRE",{class:!0});var ie=a(T);ie.forEach(e),U=f(v),w=i(v,"P",{});var h=a(w);Z=n(h,`and change the port information in this file.
To be able to benefit from these changes, all compiled and deployed versions of chARp have to be recompiled and redeployed.`),h.forEach(e),L=f(v),D=i(v,"P",{});var _=a(D);X=n(_,"When everything is set up to start the server either start the server scene directly by double clicking"),_.forEach(e),I=f(v),B=i(v,"PRE",{class:!0});var ne=a(B);ne.forEach(e),R=f(v),S=i(v,"P",{});var le=a(S);J=n(le,"in Unity editor directly, or press the "),y=i(le,"STRONG",{});var re=a(y);M=n(re,"Host"),re.forEach(e),K=n(le," button in the login screen."),le.forEach(e),this.h()},h(){N(T,"class","language-undefined"),N(B,"class","language-undefined")},m(v,A){s(v,p,A),t(p,F),s(v,G,A),s(v,g,A),t(g,O),s(v,P,A),s(v,H,A),t(H,z),s(v,k,A),s(v,E,A),t(E,q),s(v,x,A),s(v,T,A),T.innerHTML=ee,s(v,U,A),s(v,w,A),t(w,Z),s(v,L,A),s(v,D,A),t(D,X),s(v,I,A),s(v,B,A),B.innerHTML=te,s(v,R,A),s(v,S,A),t(S,J),t(S,y),t(y,M),t(S,K)},p:se,i:se,o:se,d(v){v&&e(p),v&&e(G),v&&e(g),v&&e(P),v&&e(H),v&&e(k),v&&e(E),v&&e(x),v&&e(T),v&&e(U),v&&e(w),v&&e(L),v&&e(D),v&&e(I),v&&e(B),v&&e(R),v&&e(S)}}}const yh={title:"Start Server"};class vh extends Ft{constructor(p){super(),qt(this,p,null,bh,zt,{})}}const gh=Object.freeze(Object.defineProperty({__proto__:null,default:vh,metadata:yh},Symbol.toStringTag,{value:"Module"}));function wh(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te;return{c(){p=r("h2"),F=o("Place a QR code"),G=c(),g=r("p"),O=o(`In order to have to contents of the scene in a reasonable space in your laboratory, you need to place a QR code on one of the walls.
We recommend a QR code printed on a at least DIN A4 sized paper.
To save you some hassle to find or create your own QR code, you can `),P=r("a"),H=o("download this one here"),z=o(`.
A good position for such a QR code is an open spot at your wall at standing height, that is easy to access or get close to.`),k=c(),E=r("h2"),q=o("Scanning"),x=c(),T=r("p"),ee=o(`In case of an in-person scenario where all collaborators are in the same laboratory, each device has to scan the QR code before connecting to the server.
Start chARp and select `),U=r("strong"),w=o("Scan QR"),Z=o(` in the login screen.
Look at the QR code on the wall, you will see a white plane over the code and on the corner of the plane is an axis system with a z-axis pointing away from the wall.
Usually, the z-axis wiggles a little bit because of scanning inaccuracy.
Look at the code from different angles and distances and press the button `),L=r("strong"),D=o("Stop Scan"),X=o(" that should follow you around when the wiggle is least noticeable."),I=c(),B=r("p"),te=o(`In case of a remote collaboration, a similar placement of QR codes is recommended to reflect the scene correctly.
For example, one client puts the code on the wall and the other puts the code on the ground.
Any interaction with the scene results in movements in the wrong direction.
The same is true for a differently oriented QR code.
We recommend to hang the QR code with the three large squares on the left bottom, left top and right top.`),this.h()},l(R){p=i(R,"H2",{});var S=a(p);F=n(S,"Place a QR code"),S.forEach(e),G=f(R),g=i(R,"P",{});var J=a(g);O=n(J,`In order to have to contents of the scene in a reasonable space in your laboratory, you need to place a QR code on one of the walls.
We recommend a QR code printed on a at least DIN A4 sized paper.
To save you some hassle to find or create your own QR code, you can `),P=i(J,"A",{href:!0,target:!0});var y=a(P);H=n(y,"download this one here"),y.forEach(e),z=n(J,`.
A good position for such a QR code is an open spot at your wall at standing height, that is easy to access or get close to.`),J.forEach(e),k=f(R),E=i(R,"H2",{});var M=a(E);q=n(M,"Scanning"),M.forEach(e),x=f(R),T=i(R,"P",{});var K=a(T);ee=n(K,`In case of an in-person scenario where all collaborators are in the same laboratory, each device has to scan the QR code before connecting to the server.
Start chARp and select `),U=i(K,"STRONG",{});var v=a(U);w=n(v,"Scan QR"),v.forEach(e),Z=n(K,` in the login screen.
Look at the QR code on the wall, you will see a white plane over the code and on the corner of the plane is an axis system with a z-axis pointing away from the wall.
Usually, the z-axis wiggles a little bit because of scanning inaccuracy.
Look at the code from different angles and distances and press the button `),L=i(K,"STRONG",{});var A=a(L);D=n(A,"Stop Scan"),A.forEach(e),X=n(K," that should follow you around when the wiggle is least noticeable."),K.forEach(e),I=f(R),B=i(R,"P",{});var Q=a(B);te=n(Q,`In case of a remote collaboration, a similar placement of QR codes is recommended to reflect the scene correctly.
For example, one client puts the code on the wall and the other puts the code on the ground.
Any interaction with the scene results in movements in the wrong direction.
The same is true for a differently oriented QR code.
We recommend to hang the QR code with the three large squares on the left bottom, left top and right top.`),Q.forEach(e),this.h()},h(){N(P,"href","/qr_dina4.pdf"),N(P,"target","_blank")},m(R,S){s(R,p,S),t(p,F),s(R,G,S),s(R,g,S),t(g,O),t(g,P),t(P,H),t(g,z),s(R,k,S),s(R,E,S),t(E,q),s(R,x,S),s(R,T,S),t(T,ee),t(T,U),t(U,w),t(T,Z),t(T,L),t(L,D),t(T,X),s(R,I,S),s(R,B,S),t(B,te)},p:se,i:se,o:se,d(R){R&&e(p),R&&e(G),R&&e(g),R&&e(k),R&&e(E),R&&e(x),R&&e(T),R&&e(I),R&&e(B)}}}const _h={title:"Room Anchor"};class Eh extends Ft{constructor(p){super(),qt(this,p,null,wh,zt,{})}}const Th=Object.freeze(Object.defineProperty({__proto__:null,default:Eh,metadata:_h},Symbol.toStringTag,{value:"Module"}));function Rh(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J,y,M,K,v,A,Q,$,W,ie;return{c(){p=r("h2"),F=o("Server List"),G=c(),g=r("p"),O=o(`After turning on the server, putting up the QR code and scanning it, you’re finally ready to connect.
In the login screen press the button `),P=r("strong"),H=o("Connect"),z=o(`.
If there is a number in the brackets behind the text `),k=r("strong"),E=o("Connect"),q=o(", the chances are high that your server is already listed."),x=c(),T=r("img"),U=c(),w=r("p"),Z=o(`In the picture you can see an example of the server list.
Here, two servers are detected in the network.
If your server does not show up in the list, there is always the option to add the IP manually.
Click on the `),L=r("strong"),D=o("list with a plus"),X=o(` symbol.
Fill out the fields of the dialog and press `),I=r("strong"),B=o("Add"),te=o(`.
This puts your custom IP in the list and you can click on it.
Another dialog shows up to double check if you really want to connect to this IP.
By answering this dialog with OK should put you on your server.`),R=c(),S=r("p"),J=o(`If the connection to the server is not working, you’ll get another dialog that tells you what is wrong.
Pressing `),y=r("strong"),M=o("OK"),K=o(" on this dialog will put you back to the login screen."),v=c(),A=r("p"),Q=o(`For developing and testing, you don’t always want to put on your HoloLens2.
Therefore, you can connect to your machine (127.0.0.1) by pressing the `),$=r("strong"),W=o("Home"),ie=o(` button in the server list.
To be able to run two Unity editor instances of chARp, you need to make a copy of the whole project.`),this.h()},l(h){p=i(h,"H2",{});var _=a(p);F=n(_,"Server List"),_.forEach(e),G=f(h),g=i(h,"P",{});var ne=a(g);O=n(ne,`After turning on the server, putting up the QR code and scanning it, you’re finally ready to connect.
In the login screen press the button `),P=i(ne,"STRONG",{});var le=a(P);H=n(le,"Connect"),le.forEach(e),z=n(ne,`.
If there is a number in the brackets behind the text `),k=i(ne,"STRONG",{});var re=a(k);E=n(re,"Connect"),re.forEach(e),q=n(ne,", the chances are high that your server is already listed."),ne.forEach(e),x=f(h),T=i(h,"IMG",{src:!0,alt:!0,class:!0}),U=f(h),w=i(h,"P",{});var ue=a(w);Z=n(ue,`In the picture you can see an example of the server list.
Here, two servers are detected in the network.
If your server does not show up in the list, there is always the option to add the IP manually.
Click on the `),L=i(ue,"STRONG",{});var Y=a(L);D=n(Y,"list with a plus"),Y.forEach(e),X=n(ue,` symbol.
Fill out the fields of the dialog and press `),I=i(ue,"STRONG",{});var ae=a(I);B=n(ae,"Add"),ae.forEach(e),te=n(ue,`.
This puts your custom IP in the list and you can click on it.
Another dialog shows up to double check if you really want to connect to this IP.
By answering this dialog with OK should put you on your server.`),ue.forEach(e),R=f(h),S=i(h,"P",{});var oe=a(S);J=n(oe,`If the connection to the server is not working, you’ll get another dialog that tells you what is wrong.
Pressing `),y=i(oe,"STRONG",{});var be=a(y);M=n(be,"OK"),be.forEach(e),K=n(oe," on this dialog will put you back to the login screen."),oe.forEach(e),v=f(h),A=i(h,"P",{});var b=a(A);Q=n(b,`For developing and testing, you don’t always want to put on your HoloLens2.
Therefore, you can connect to your machine (127.0.0.1) by pressing the `),$=i(b,"STRONG",{});var V=a($);W=n(V,"Home"),V.forEach(e),ie=n(b,` button in the server list.
To be able to run two Unity editor instances of chARp, you need to make a copy of the whole project.`),b.forEach(e),this.h()},h(){Xt(T.src,ee="/images/manual/server_list.png")||N(T,"src",ee),N(T,"alt","Debug Log"),N(T,"class","mx-auto max-w-md")},m(h,_){s(h,p,_),t(p,F),s(h,G,_),s(h,g,_),t(g,O),t(g,P),t(P,H),t(g,z),t(g,k),t(k,E),t(g,q),s(h,x,_),s(h,T,_),s(h,U,_),s(h,w,_),t(w,Z),t(w,L),t(L,D),t(w,X),t(w,I),t(I,B),t(w,te),s(h,R,_),s(h,S,_),t(S,J),t(S,y),t(y,M),t(S,K),s(h,v,_),s(h,A,_),t(A,Q),t(A,$),t($,W),t(A,ie)},p:se,i:se,o:se,d(h){h&&e(p),h&&e(G),h&&e(g),h&&e(x),h&&e(T),h&&e(U),h&&e(w),h&&e(R),h&&e(S),h&&e(v),h&&e(A)}}}const kh={title:"Connect"};class Sh extends Ft{constructor(p){super(),qt(this,p,null,Rh,zt,{})}}const Ph=Object.freeze(Object.defineProperty({__proto__:null,default:Sh,metadata:kh},Symbol.toStringTag,{value:"Module"}));function Oh(he){let p,F,G,g,O,P,H,z,k,E,q,x,T,ee,U,w,Z,L,D,X,I,B,te,R,S,J,y,M,K,v,A,Q,$,W,ie;return{c(){p=r("h2"),F=o("Camera"),G=c(),g=r("p"),O=o(`In the server scene you have several interaction possibilities.
In the case of multiple connected clients, the buttons on the bottom right labeled `),P=r("strong"),H=o("next"),z=o(" and "),k=r("strong"),E=o("previous"),q=o(` let you switch your current view between the clients.
The view then shows what the selected client sees.`),x=c(),T=r("h2"),ee=o("Loading and Saving"),U=c(),w=r("p"),Z=o("In the bottom right, there are two additional buttons "),L=r("strong"),D=o("Load"),X=o(" and "),I=r("strong"),B=o("Save"),te=o(`.
The `),R=r("strong"),S=o("Load"),J=o(" button opens a file dialog and lets you import all file formats supported by "),y=r("strong"),M=o("OpenBabel"),K=o(`.
The loaded molecule appears in front of the currently selected client.
You can select a molecule in the active scene under the section `),v=r("strong"),A=o("AtomWorld"),Q=o(" and press the "),$=r("strong"),W=o("Save"),ie=o(` button to store the data in a file.
Here, you have the option to pick a supported output format (by adding the corresponding file extension) and the data is automatically converted and saved in this format.`)},l(h){p=i(h,"H2",{});var _=a(p);F=n(_,"Camera"),_.forEach(e),G=f(h),g=i(h,"P",{});var ne=a(g);O=n(ne,`In the server scene you have several interaction possibilities.
In the case of multiple connected clients, the buttons on the bottom right labeled `),P=i(ne,"STRONG",{});var le=a(P);H=n(le,"next"),le.forEach(e),z=n(ne," and "),k=i(ne,"STRONG",{});var re=a(k);E=n(re,"previous"),re.forEach(e),q=n(ne,` let you switch your current view between the clients.
The view then shows what the selected client sees.`),ne.forEach(e),x=f(h),T=i(h,"H2",{});var ue=a(T);ee=n(ue,"Loading and Saving"),ue.forEach(e),U=f(h),w=i(h,"P",{});var Y=a(w);Z=n(Y,"In the bottom right, there are two additional buttons "),L=i(Y,"STRONG",{});var ae=a(L);D=n(ae,"Load"),ae.forEach(e),X=n(Y," and "),I=i(Y,"STRONG",{});var oe=a(I);B=n(oe,"Save"),oe.forEach(e),te=n(Y,`.
The `),R=i(Y,"STRONG",{});var be=a(R);S=n(be,"Load"),be.forEach(e),J=n(Y," button opens a file dialog and lets you import all file formats supported by "),y=i(Y,"STRONG",{});var b=a(y);M=n(b,"OpenBabel"),b.forEach(e),K=n(Y,`.
The loaded molecule appears in front of the currently selected client.
You can select a molecule in the active scene under the section `),v=i(Y,"STRONG",{});var V=a(v);A=n(V,"AtomWorld"),V.forEach(e),Q=n(Y," and press the "),$=i(Y,"STRONG",{});var ve=a($);W=n(ve,"Save"),ve.forEach(e),ie=n(Y,` button to store the data in a file.
Here, you have the option to pick a supported output format (by adding the corresponding file extension) and the data is automatically converted and saved in this format.`),Y.forEach(e)},m(h,_){s(h,p,_),t(p,F),s(h,G,_),s(h,g,_),t(g,O),t(g,P),t(P,H),t(g,z),t(g,k),t(k,E),t(g,q),s(h,x,_),s(h,T,_),t(T,ee),s(h,U,_),s(h,w,_),t(w,Z),t(w,L),t(L,D),t(w,X),t(w,I),t(I,B),t(w,te),t(w,R),t(R,S),t(w,J),t(w,y),t(y,M),t(w,K),t(w,v),t(v,A),t(w,Q),t(w,$),t($,W),t(w,ie)},p:se,i:se,o:se,d(h){h&&e(p),h&&e(G),h&&e(g),h&&e(x),h&&e(T),h&&e(U),h&&e(w)}}}const Ah={title:"Server Controls"};class Hh extends Ft{constructor(p){super(),qt(this,p,null,Oh,zt,{})}}const Nh=Object.freeze(Object.defineProperty({__proto__:null,default:Hh,metadata:Ah},Symbol.toStringTag,{value:"Module"}));function Mh(he,p){return he.prio-p.prio}function Sa(he){return he.split("-")[1].split("_").map(O=>O.charAt(0).toUpperCase()+O.slice(1)).join(" ")}function Gh(){let p=Da(Object.assign({"/src/routes/manual/00-getting_started/00-introduction.md":za,"/src/routes/manual/00-getting_started/01-installation.md":$a,"/src/routes/manual/01-first_start/00-login_screen.md":Za,"/src/routes/manual/02-normal_mode/00-menu.md":nh,"/src/routes/manual/02-normal_mode/01-settings.md":ih,"/src/routes/manual/02-normal_mode/02-interacting_with_molecules.md":ch,"/src/routes/manual/02-normal_mode/03-manipulate_bonds.md":mh,"/src/routes/manual/03-collaboration/00-start_server.md":gh,"/src/routes/manual/03-collaboration/01-room_anchor.md":Th,"/src/routes/manual/03-collaboration/02-connect.md":Ph,"/src/routes/manual/03-collaboration/03-server_controls.md":Nh}));const F=[];p.forEach(O=>{const P=O.path.split("/").slice(-2)[0],H=Sa(P),z=P.split("-")[0],k=O.key.replace(".md",""),E="/"+k.split("/").slice(-3)[0]+"/"+k.split("/").slice(-2)[0]+"/"+k.split("/").slice(-1)[0],q=k.split("/").slice(-2)[0]+"/"+k.split("/").slice(-1)[0],x=k.split("/").slice(-1)[0],T="/"+k.split("/").slice(-3)[0]+"/"+k.split("/").slice(-2)[0],ee=O.path.split("/").slice(-1)[0].split("-")[0],U=z+ee;O.section=P,O.sectionTitle=H,O.absRoute=E,O.route=q,O.pageRoute=x,O.absSectionRoute=T,O.prio=U,F.push(O)}),F.sort(Mh);let G=F.reduce(function(O,P){let H=P.section;return H in O||(O[H]=[]),O[H].push(P),O},{});return Object.keys(G).map(function(O){return{name:O,title:Sa(O),absRoute:"/manual/"+O,pages:G[O]}})}function xh(){try{return{sections:Gh()}}catch(he){return console.error(he),{sections:[]}}}const Ih=Object.freeze(Object.defineProperty({__proto__:null,load:xh},Symbol.toStringTag,{value:"Module"}));export{Ih as _,xh as l};
